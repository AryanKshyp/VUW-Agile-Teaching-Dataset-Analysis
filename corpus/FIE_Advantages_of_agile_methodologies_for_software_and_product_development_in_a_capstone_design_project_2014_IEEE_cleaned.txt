Advantages of Agile Methodologies for Software and Product Development in a Capstone Design Project

Abstract— Professional skills are often emphasized in a capstone engineering design course, especially in relation to addressing ABET Engineering Criteria. Learning of these skills is typically a product of the project management approach followed by design teams. The principles behind agile development and the features of the Scrum methodology match up well with the expected outcomes of a major engineering design experience and preparation needed by students for engineering practice. This paper presents a case study on design team use of an agile process for the successful development and release on the Google Play store of an Android app for a client during the span of a two-semester senior design course in electrical and computer engineering. The agile project management used in the case study was found to be beneficial to all involved (students, mentors, and clients). It emphasizes behaviors that lead to greater satisfaction and higher quality results with the senior design experience. Student learning opportunities related to professional skills are examined. This work adds to emerging literature promoting agile development as a model for capstone projects.

Keywords—agile development, capstone engineering design, professional skills, student learning outcomes

I. INTRODUCTION
Professional skills are often emphasized in a capstone engineering design course, especially in relation to addressing ABET Engineering Criteria. [1] Learning of these skills is typically a product of the project management approach followed by design teams. The principles behind agile development and the features of the Scrum methodology match up well with the expected outcomes of a major engineering design experience and preparation needed by students for engineering practice. Agile software development methodologies are commonly found in software engineering courses. Recently, agile methods have been used in capstone engineering design courses ranging from software design to mechatronics design.
This paper presents a case study on design team use of an agile process for the successful development and release on the Google Play store of an Android app for a client during the span of a two-semester senior design course in electrical and computer engineering. The app design team of four computer engineering students adhered to a team-defined agile process similar to Scrum, a framework for managing product development. One key feature of Scrum is iterations called sprints, in which each sprint ends with a deliverable of some subset of final product features. The app design team used two- week sprints during the second semester of the course. Each sprint iteration included planning, issue triage and assignment, demonstration of progress, and release, all facilitating frequent communication among team members. The team held meetings with a faculty mentor and the client between iterations. Their application of agile methodologies led to impressive results for team performance, product quality, and client satisfaction. The agile project management used in the case study serves as a model for similar capstone projects.
The paper begins by introducing the Scrum methodology and reviewing related work on agile development in engineering education. The app case study is described in detail. Observations by the team members and client are presented. We describe the relevant features of the Scrum framework in relation to capstone design. Assessment related to professional skills is examined. The paper concludes by reflecting on innovation in senior design.

III. PROJECT CASE STUDY
A team of four computer engineering students was assigned a senior design project to develop a butterfly tracking mobile app for the Reiman Gardens Butterfly Wing. The team developed and released an Android app called UBR, Unified Butterfly Recorder, on the Google Play store during a two- semester senior design course in electrical and computer engineering. [16] [17] [18] UBR runs on Android phones and tablets. It provides butterfly researchers and enthusiasts with a tool to use in the field to efficiently record butterfly sighting data. The purpose of the app is to give the user a quick and efficient method to collect data across a variety of survey protocols traditionally used by researchers and citizen scientists in the field. The app stores a superset of the data used by various survey protocols. Along with user-entered data, the app uses capabilities of the mobile device to automatically collect additional information such as weather, location, wind speed and time. Species lists are built into the app, and UBR also supports custom lists created by the user. Users can also take photos of specimens to include with records. The Reiman Gardens client expects that the content should greatly enhance the understanding of butterfly populations.
The project began during spring semester 2013. With guidance and assistance from the client, the team sent a questionnaire to several butterfly professionals to get input on the app’s features. After determining which features would be feasible and useable, they worked on the design and developed a prototype. During the summer, the client and several colleagues field-tested the prototype and provided feedback.
The team adhered to a team-defined agile process similar to Scrum for managing product development and used two-week sprints during the second semester of the course (fall 2013). Each sprint iteration included issue triage and assignment, demonstration of progress, release, and planning, all facilitating frequent communication among team members. The team held meetings with a faculty mentor and the client between iterations. The sprint schedule is shown at the project website under “Updates” and in Fig. 1. [16]

For example, Sprint 02 focused on the goal of improving the user experience with expanded preferences in the settings, an ongoing notification while a survey is in progress, and a counter to add a sighting with multiple butterflies. The Sprint 02 release and Sprint 03 plans are shown in Fig. 2.
The team designed the high-level app system architecture shown in Fig. 3. It consists of three types of components: views (in yellow), data sources/storage (in gray), and data interfaces (in red).
Views are touch-centered interfaces defined structurally in XML, with an associated Activity Java class. All functions of the user interface (UI) are defined in callbacks that execute in response to system or user events (e.g., button press, swipe, system alarm). These display data using adapters that implement the Observer pattern to asynchronously update the UI in response to underlying changes in the data. The data sources, storage and interfaces are described in the final report under “Documents” at the project website. [16]
The app user interface was designed with several users in mind: researchers, graduate students, conservation workers, citizen scientists, hobbyists, and volunteers with minimal experience. The UI also was designed to adapt to varying screen sizes. Fig. 4 shows the screens in the UI.
Screen descriptions are given in the final report and in the UBR Usage Guide under “Documents” at the project website. [16] Several screens are introduced in figures 5-10.

The team deployed a minimum viable product of UBR in July 2013, which allowed users to perform surveys using the Meandering protocol, with only time and location information collection for sightings. They released this using the alpha release feature of the Google Play store. Those who took the questionnaire and a few others joined the testing group to use UBR. Using this as the release system, updates and bug fixes to the alpha release were automatically received by users.
At the beginning of fall semester, the team met with the client to go over the feedback and determine the most important items to be added to or fixed in the application. The team identified the most used and essential features and optimized those processes for maximum efficiency. The early part of the semester was focused on adding or enhancing major features that were completed by mid-September. By November, the app was largely feature-complete for the Meandering protocol. The next month was spent implementing the other survey protocols. From then to the end of the semester, most time was spent on finding and fixing bugs, adding minor functionality, and creating project documentation for the senior design course.
As the team developed UBR using two-week sprints during fall semester, they released new features and fixes every two weeks. Before each release, they performed scenario validation to detect regressions (functional or performance bugs in software) and test overall usability. The scenario validation involved performing simulated surveys using each feature of the app. By doing this, they were able to catch almost all regressions before deployment. The client and user base quickly reported other issues, e.g., specific to devices not available to the team. Scenario validation was selected as the primary means of testing due to the dynamic nature of the project requirements. Requirements often changed with each sprint due to open, continuous communication among the team, client, and other users about UBR’s features and usability.
The agile practices used by the team both promoted and prospered from communication with and responsiveness to the user community. The team set up an Atom news feed on its website, through which it posted updates after each sprint. This enabled those interested to receive push updates of UBR progress in their news reader. With UBR installed through the Google Play store, users were presented with the option to submit a report after an error. Through the developer console, the team could view the stack traces of the errors as well as device information. The app itself includes a page through which users can submit feedback in the categories of bug, feature request, and comment. These are collected on the UBR server. Users also communicated directly with the client, who informed the team about feature requests at each post-sprint meeting.
The team summarized the impact of the app as follows: “Because our application standardizes what data is collected, data from all around the world can now be compared. Also, because it is able to export to external databases, users will be able to export their data to a common database for even easier collaboration. Conservation efforts will be helped immensely because of this. The application also makes going into the field and taking a survey easier so people may be willing to take more surveys. With more surveys being taken there will be more data for conservation groups to use.” [16] (in final report, under “Documents”)

IV. CLIENT FEEDBACK
Client feedback was received continuously through the agile process. Client satisfaction was evident during the project and at project completion. [17], [18] The client responded to several questions regarding their interactions with the team for this paper.
1) How did the team communicate with you about app functionality as the project proceeded?
“Most meetings lasted approximately one hour. We would bring questions, problems and feedback about things that were updated between meetings. We discussed with the students things that were being worked on presently, goals for the next sprint, and answered any entomology questions to help with functions they were working on.”
2) How did the process followed by the team enhance communication with you?
“We always knew what the team was working on and what challenges they were facing. We also had lots of email communication for problems or questions that came up. It was nice to know that the team was working hard and always making progress.”
“This was the fourth group that I have worked with, and their process made it much easier for us to help steer the content development items that we needed. With regular releases, we could suggest course corrections. With groups I worked with before, a group went off and did the project, I received a final project, and there was little or no time to make suggestions or changes as we were up against the end of the year deadline.”
3) How was product quality affected by the approach taken by the team?
“... the team’s approach greatly affected the quality in a positive way. Functionality issues were solved quickly and effectively with open and constant communication.”
4) Do you have other observations about the team or product?
“I have very little programming knowledge but it was exciting to see the progression of the app along the way. I think using the sprints really gave the team a great motivation to keep on task and in the end provided us as clients with an awesome product.”

V. SCRUM EFFECTS
The intended effects of applying a Scrum agile methodology are described in the literature and course materials. [3] [4] [5] They fall into four areas associated with the established value proposition of Scrum, emphasizing cross- functional interactions, a working product, customer collaboration, and response to change. The effects especially relevant to senior design outcomes are summarized here.
Teamwork: Each sprint iteration involves a cross- functional team working concurrently across all aspects of product development (analysis, design, code and test) toward a specific goal. Repeated sprints help build high-performing, self-organizing teams that demonstrate motivation, shared responsibility, trust, and cooperation.
Product quality: Each sprint ends with a deliverable of some subset of final product features based on a user story. These user stories are prioritized, and thus when the project ends, the highest priority work has been completed. A useful product is ready to be delivered with each sprint and provides a visible measure of progress for the team and customer.
Customer focus: Each sprint involves face-to-face communication, feedback, and collaboration with the customer. The continuous involvement puts a focus on the customer and customer satisfaction.
Iterative development: The sprint iterations facilitate a simple, flexible and predictable design process. There is minimal long-range planning, with work estimates and adapting done with each sprint. There is both a constant pace of development and constant attention to good design.
The UBR team noted that these benefits helped address two challenges from the student perspective. The standard waterfall approach sometimes amounts to guesswork. The iterative development made planning more tractable. Senior design students are also very busy as they complete their degrees. The iterative development ensured that the client would end the semester with a working product. The bi-weekly meetings kept students accountable and motivated them to spread work throughout the semester. The team did not always reach its targets, but using the Scrum method enabled them to load- balance more effectively across the team and react quickly to unexpected developments. With a customer focus, the bi- weekly meetings also kept the client involved in product development to guide each sprint’s work. Consequently, a final product might have a feature set different than initially envisioned.
In short, a Scrum methodology supports the development of high-performing teams, fully functional products, meaningful customer interactions, and continuous improvement in the design process. To the extent that these can be modeled in senior design, these contribute to a more realistic design experience in the capstone environment and better preparation for engineering practice.

VI. SENIOR DESIGN
Senior design in electrical and computer engineering at this university is a two-semester required course intended to prepare students for engineering practice and the workplace. During the first semester, students work in project teams to propose a design solution to an engineering problem, and use their technical writing skills to produce a project plan and design report. During the second semester, students create a design prototype and deliver a final report, poster, and oral presentation. An industry review panel (IRP) convenes at the end of the second semester to evaluate the final prototypes, posters, and presentations. The first-semester course description is given in Fig. 11, and the second-semester course, in Fig. 12. Notice that the senior design course has emphasized a traditional waterfall design process during the first semester and is largely open-ended for the second semester.
As shown in Fig. 12, the goals for the course are to address all student learning outcomes under criterion 3 of the ABET Engineering Criteria. The ABET (a-k) outcomes of the ABET 2013-2014 accreditation cycle are listed below. [1]
(a) an ability to apply knowledge of mathematics, science, and engineering
(b) an ability to design and conduct experiments, as well as to analyze and interpret data
(c) an ability to design a system, component, or process to meet desired needs within realistic constraints such as economic, environmental, social, political, ethical, health and safety, manufacturability, and sustainability
(d) an ability to function on multidisciplinary teams
(e) an ability to identify, formulate, and solve engineering problems
(f) an understanding of professional and ethical responsibility
(g) an ability to communicate effectively
(h) the broad education necessary to understand the impact of engineering solutions in a global, economic, environmental, and societal context
(i) a recognition of the need for, and an ability to engage in lifelong learning
(j) a knowledge of contemporary issues
(k) an ability to use the techniques, skills, and modern engineering tools necessary for engineering practice
Outcomes (d), (f), (g), (h), (i), and (j) have been referred to as professional skills. [19] A recent national study concluded that professional topics are typically emphasized in first-year design and capstone courses rather than integrated throughout the curriculum. [20] Naturally, the capstone course often fulfills the major engineering design experience defined in the ABET Engineering Criteria as a culminating design experience in which students apply knowledge from previous coursework and new information as needed to a complex, open-ended problem with realistic constraints. Thus design skills associated with outcomes (b), (c), (e), and (k) are commonly addressed as well. Improvements and innovation in senior design directly impact student learning of design and professional skills expected in the engineering workplace.

VII. ASSESSMENT
In this section, we first introduce workplace competencies (knowledge, skills and abilities) related to student learning outcomes (a-k) and the assessment tools used by our department. These competencies are then compared with the skills that students gain using agile development in capstone design.
Our department implemented a multi-level ABET assessment process that uses measurements in senior design, a required portfolio class, a small number of required courses before the senior year, and surveys administered every semester by the college and completed by employers of students on internships. [21] Data are collected from different types of measurements at three different levels. The levels provide a range of information. Level 1 assessment uses experiential-related information from a cross-section of students in the program that can be used to identify trends and potential problems. Level 2 assessment uses senior-level information from all students in the culminating capstone courses. Students demonstrate attainment of outcomes through senior design projects and other summative information in portfolios. Level 3 assessment uses sophomore- and junior- level information from student work in selected required courses. For levels 2 and 3, student learning is assessed using rubrics and assignments that focus on specific outcomes of interest.
We first explain the level 1 approach as it’s currently used, and then describe how it can support measurement of Scrum effects in capstone design. Level 1 uses commercial software from a provider of competency-based performance assessment, coaching and learning tools (DDI, http://www.ddiworld.com/). The engineering college adopted a set of workplace competencies based on the needs of engineering employers. [22] In the college’s framework, student outcomes are multi-dimensional and represent some collection of workplace competencies necessary for the practice of engineering at the professional level. Fifteen competencies are measured within this framework: Analysis and Judgment, Communication, Continuous Learning, Cultural Adaptability, Customer Focus, Engineering Knowledge, General Knowledge, Initiative, Innovation, Integrity, Planning, Professional Impact, Quality Orientation, Safety Awareness, and Teamwork. Each competency is uniquely defined with a set of observable and measurable key actions that a student may take that demonstrates development of that competency. For example, the Initiative competency has the following definition and key actions.
Initiative: Taking prompt action to accomplish objectives; taking action to achieve goals beyond what is required; being proactive.
Key Actions:
• Responds quickly. Takes immediate action when confronted with a problem or when made aware of a situation.
• Takes independent action. Implements new ideas or potential solutions without prompting; does not wait for others to take action or to request action.
• Goes above and beyond. Takes action that goes beyond job requirements in order to achieve objectives.
In addition, each competency is further defined with representative career activities. Initiative has these representative career activities:
• Checking validity of processes or tools without being asked.
• Immediately finding information for use on a project or product.
• Responding effectively with minimal direction by identifying appropriate information, tools, or people.
• Creating new and effective solutions to problems.
• Responding quickly to feedback.
• Initiating discussions with team members when faced with a problem.
• Developing solutions to engineering problems in a timely manner.
• Independently conducting follow-up reviews of products and/or customer satisfaction.
The Continuous Learning competency has the following definition and representative career activities.
Continuous Learning: Actively identifying new areas for learning; regularly creating and taking advantage of learning opportunities; using newly gained knowledge and skill on the job and learning through application.

Subset of Representative Career Activities:
• Designing experiments or products that require engineers to learn new subject areas.
• Engaging in discussions on professional responsibility. • Using feedback from customers to learn new material that will improve a product.
• Reading/viewing new material and attending conferences and seminars.
• Learning local, state, and federal laws to understand impact on engineering practices.
• Learning new tools to design a product or solve a problem.
Surveys are administered by the college for all students on internships. Each supervisor (employer) of a student intern provides an assessment of the student’s demonstration of each key action in the workplace. Supervisors are asked to respond to the following question for each of the key actions: “When given the opportunity, how often does the student perform the key action?” The response uses a Likert scale: 5 = always or almost always; 4 = often; 3 = usually; 2 = sometimes; and 1 = never or almost never. Each student intern also completes a self-assessment.

There is a mapping of the competencies to the ABET (a-k) student outcomes. For example, the Initiative competency is associated to varying extents with student outcomes (a), (b), (c), (d), (e), (g), (i), and (k). Other competencies are associated with fewer outcomes; e.g., Professional Impact is associated with only (d) and (g). The complete mapping is given in [22].

Student demonstration of each competency is computed as the average of the supervisor’s assessment of the associated key actions. A program average for each competency is computed by averaging all the supervisor competency values. A score for achievement of a student outcome is calculated using the mapping. An achievement percentage is calculated relative to a perfect score. To illustrate the level 1 approach as currently used, the results for surveys administered every semester from 2006 through 2011 are shown in Fig. 13.
Next, we put this in the context of agile development. Notice, for example, that the key actions of “responds quickly” and “takes independent action” for the Initiative competency are consistent with performance expected during sprint iterations. Also notice that “using feedback” for the Continuous Learning competency is a routine activity of a sprint iteration.
Thus the Scrum effects in senior design (section V.) may be described using a collection of competencies, as shown in Table I. Doing so aligns with and leverages the college’s assessment framework. This means that the same survey instrument used by supervisors and interns can be administered with design project clients and teams. Likewise, the same mapping (in [22]) then links student performance observed on a design project to ABET outcomes.

TABLE I. MATRIX OF COMPETENCIES VS. SCRUM EFFECTS
 COMPETENCY (1) Engr. Knowledge
General Knowledge
Continuous Learning
Quality Orientation
Initiative x Innovation x Cultural Adaptability x Analysis & Judgment x Planning x Communication x Teamwork x Integrity x Professional Impact
Customer Focus
(2) (3) (4)
x
x
x x x x x x x
x
x
x x x x
x
x
x
x x x
               Scrum Effects (section V.):
(1) Teamwork
(2) Product Quality
(3) Customer Focus
(4) Iterative Development

  VIII. CONCLUSIONS
This work adds to a small but growing evidence base on the value of agile development methods in engineering education and in particular capstone design. Often learning outcomes are focused on content, i.e., what students learn from the subject matter covered. However, some knowledge, skills and abilities are behavioral in nature, and students learn through practice. In such instances, the process used can enhance or even define the learning experience. This paper has presented a case for adopting an agile design process and illustrated its potential impact on professional skills development and preparation for engineering practice.
Overall, the UBR team’s use of Scrum resulted in a better experience for all parties involved through the rich communication it facilitated. Iterative development enabled smoother adaptation and higher product quality as the student design team gained domain experience.
The team observed that the continuous learning competency is especially reinforced through the iterative development of Scrum. Team members described revising and improving design and implementation decisions throughout the project as they experimented and learned more. They noted the importance of this as they began as novices in some areas and gained mastery of skills and practices as the project proceeded.
The next steps for this work include adapting the college survey for use with senior design projects and refining and validating the matrix shown in Table I. This will enable assessment and comparison of student learning under agile methodologies in senior design.
Innovation in senior design sometimes is inspired by students and leads to transformations in the curriculum. [23] The case study presented in this paper represents a potential new direction for capstone design courses. It represents a case of student-driven adoption of Scrum-like practices. What is needed, however, is course-level adoption of an agile alternative to traditional methods and deliverables. This work will be followed by efforts to implement such change.


