File,Left Context,Hit,Right Context,Full Passage,Year
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"steps, Remi and his team do not have the opportunity to imagine a solution through coevolution—the rapid cognitive oscillation between our understanding of the ",problem ,"and ideas for the software product [7].  B. An Interaction Designer’s Perspective  This section describes a hypothetical process that Iris, our Interaction Designer, and ","steps, Remi and his team do not have the opportunity to imagine a solution through coevolution—the rapid cognitive oscillation between our understanding of the problem and ideas for the software product [7].  B. An Interaction Designer’s Perspective  This section describes a hypothetical process that Iris, our Interaction Designer, and ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"traditional and flipped-classroom delivery, together with project-based learning. During the course project, students learn to design and implement software systems that address real ",problems ,"and satisfy real stakeholders’ needs by being useful, usable, and enjoyable to use. This paper documents the author’s experience designing and teaching the ","traditional and flipped-classroom delivery, together with project-based learning. During the course project, students learn to design and implement software systems that address real problems and satisfy real stakeholders’ needs by being useful, usable, and enjoyable to use. This paper documents the author’s experience designing and teaching the ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"experience team and is in charge of designing software behavior. While both Remi and Iris share the same mission, namely, conceiving software systems addressing real ",problems ,"and satisfying real user’s needs, they each have a very different way of fulfilling their mission.  Indeed, Remi and Iris have very different ","experience team and is in charge of designing software behavior. While both Remi and Iris share the same mission, namely, conceiving software systems addressing real problems and satisfying real user’s needs, they each have a very different way of fulfilling their mission.  Indeed, Remi and Iris have very different ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"that is tackling open-ended problems is time consuming. Furthermore, when left on their own devices, students tend to revert to old habits, happily preconceiving ",problems ,"and solutions, building a product for the first solution that comes to mind, and avoiding talking to users until the first version of the ","that is tackling open-ended problems is time consuming. Furthermore, when left on their own devices, students tend to revert to old habits, happily preconceiving problems and solutions, building a product for the first solution that comes to mind, and avoiding talking to users until the first version of the ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"concepts. Through multiple rounds of coevolution (e.g., sketching, storyboarding and design walkthrough, prototyping and usability testing), they simultaneously refine their understanding of both the ",problem ,"and the solution. As a result, their interaction design is likely to be innovative while satisfying the users needs.  Unfortunately, the scenario also highlights ","concepts. Through multiple rounds of coevolution (e.g., sketching, storyboarding and design walkthrough, prototyping and usability testing), they simultaneously refine their understanding of both the problem and the solution. As a result, their interaction design is likely to be innovative while satisfying the users needs.  Unfortunately, the scenario also highlights ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"the course content. Consequently they tend to be incompatible with fast-evolving course subjects, like integrating interaction design into agile software development.  To overcome this ",problem ,"in SRID, video lectures are replaced with selected readings and other relevant materials. In addition, a mini-lecture of about 15 to 30 minutes is added ","the course content. Consequently they tend to be incompatible with fast-evolving course subjects, like integrating interaction design into agile software development.  To overcome this problem in SRID, video lectures are replaced with selected readings and other relevant materials. In addition, a mini-lecture of about 15 to 30 minutes is added ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"with a class of 33 students. Still, providing effective feedback becomes challenging as class size grows. Evaluating creative and novel work that is tackling open-ended ",problems ,"is time consuming. Furthermore, when left on their own devices, students tend to revert to old habits, happily preconceiving problems and solutions, building a ","with a class of 33 students. Still, providing effective feedback becomes challenging as class size grows. Evaluating creative and novel work that is tackling open-ended problems is time consuming. Furthermore, when left on their own devices, students tend to revert to old habits, happily preconceiving problems and solutions, building a ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"subsequent and current semesters, students are encouraged to define their own projects (see Section IV-D1). The only recommendation is to identify opportunities related to ",problems ,"with important societal impact, with the hope of raising students’ social and civil awareness. Students are responsible for identifying and contacting stakeholders to interview. ","subsequent and current semesters, students are encouraged to define their own projects (see Section IV-D1). The only recommendation is to identify opportunities related to problems with important societal impact, with the hope of raising students’ social and civil awareness. Students are responsible for identifying and contacting stakeholders to interview. ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"delivery [11] and traditional delivery in the context of project-based learning [12]. During  the course project, students learn to design and implement software systems addressing real ","problems, ","satisfying real stakeholders’ needs, and offering superior user experiences. Students also get a taste of the continuous and concurrent nature of product discovery and ","delivery [11] and traditional delivery in the context of project-based learning [12]. During  the course project, students learn to design and implement software systems addressing real problems, satisfying real stakeholders’ needs, and offering superior user experiences. Students also get a taste of the continuous and concurrent nature of product discovery and ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,design of the last offering.  A. Learning Objectives  The learning objectives are as follows:  • Innovate with a design thinking mindset.  • Design software systems addressing real ,"problems, ","satisfying real stakeholders’ needs, and providing superior  user experiences.  • In the context of dual-track agile software development,  apply an integrated approach to RE ","design of the last offering.  A. Learning Objectives  The learning objectives are as follows:  • Innovate with a design thinking mindset.  • Design software systems addressing real problems, satisfying real stakeholders’ needs, and providing superior  user experiences.  • In the context of dual-track agile software development,  apply an integrated approach to RE ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"uniquely integrates interaction design and requirements engineering in the context of dual-track agile, and teaches students to design and implement software systems addressing real ","problems, ","satisfying real stakeholders’ needs, and offering superior user experiences.  • It presents a rarely documented delivery format based on a mixed approach combining flipped-classroom ","uniquely integrates interaction design and requirements engineering in the context of dual-track agile, and teaches students to design and implement software systems addressing real problems, satisfying real stakeholders’ needs, and offering superior user experiences.  • It presents a rarely documented delivery format based on a mixed approach combining flipped-classroom ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"the students envision, prototype, and start implementing an innovative software system that could make a unique contribution to society. The system should address a real ","problem, ","satisfy real stakeholders’ needs, and provide a superior user experience. Stakeholders should remain involved throughout the project.  1) Projects Definition and Team Formation: Students define ","the students envision, prototype, and start implementing an innovative software system that could make a unique contribution to society. The system should address a real problem, satisfy real stakeholders’ needs, and provide a superior user experience. Stakeholders should remain involved throughout the project.  1) Projects Definition and Team Formation: Students define ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"understand what to produce, and create and organize these artifacts effectively so they can be shared across the team and with instructors.  In SRID, the ",problem ,was eventually solved by introducing a requirements management tool called Jama [51]. The tool serves as a hub for all project artifacts. Its content structure ,"understand what to produce, and create and organize these artifacts effectively so they can be shared across the team and with instructors.  In SRID, the problem was eventually solved by introducing a requirements management tool called Jama [51]. The tool serves as a hub for all project artifacts. Its content structure ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"the classroom to better prepare students for the demands of the course project. However, because video lectures are initially long to create, and later on",difficult,"to maintain, they have the propensity of freezing the course content. Consequently they tend to be incompatible with fast-evolving course subjects, like integrating","the classroom to better prepare students for the demands of the course project. However, because video lectures are initially long to create, and later ondifficultto maintain, they have the propensity of freezing the course content. Consequently they tend to be incompatible with fast-evolving course subjects, like integrating",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"which they have access to potential users (ideally in professional settings).  During a class activity, starting with the most interesting challenges (e.g., about six ",challenges ,"for a class of 30 students), and following the Charette Procedure brainstorming technique [48], students build on each other’s ideas until they articulate a set ","which they have access to potential users (ideally in professional settings).  During a class activity, starting with the most interesting challenges (e.g., about six challenges for a class of 30 students), and following the Charette Procedure brainstorming technique [48], students build on each other’s ideas until they articulate a set ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,the quality of teaching and learning might be compromised.  D. Continuous Product Discovery and Delivery  Many RE and IxD practices introduced in the course are ,challenging ,"for students, especially when these practices involve collaborating with stakeholders. Learning to apply RE and IxD practices effectively is time-consuming. As a result, ","the quality of teaching and learning might be compromised.  D. Continuous Product Discovery and Delivery  Many RE and IxD practices introduced in the course are challenging for students, especially when these practices involve collaborating with stakeholders. Learning to apply RE and IxD practices effectively is time-consuming. As a result, ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"with little or no time left for implementation. Consequently, students might be under the impression that the project follows the waterfall approach.  In SRID this ",challenge ,was eventually addressed by framing the RE and IxD practices within dual-track agile. The introduction of each task of the Innovation project (see ,"with little or no time left for implementation. Consequently, students might be under the impression that the project follows the waterfall approach.  In SRID this challenge was eventually addressed by framing the RE and IxD practices within dual-track agile. The introduction of each task of the Innovation project (see ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"industry and academia. Section III introduces the course’s core process, dual-track agile. Sections IV and V describe the course design, together with the ",challenges ,"involved in teaching such a course. Finally, Section VI concludes with the paper’s key contributions.  III. A ROAD TO DUAL-TRACK AGILE  The ","industry and academia. Section III introduces the course’s core process, dual-track agile. Sections IV and V describe the course design, together with the challenges involved in teaching such a course. Finally, Section VI concludes with the paper’s key contributions.  III. A ROAD TO DUAL-TRACK AGILE  The ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,rarely documented delivery format based on a mixed approach combining flipped-classroom and traditional delivery in the context of project-based learning.  • It shares the ,challenges ,"involved in teaching the course.  These contributions are important for software engineering educators in higher-education settings because, despite the emergence of dual-track ","rarely documented delivery format based on a mixed approach combining flipped-classroom and traditional delivery in the context of project-based learning.  • It shares the challenges involved in teaching the course.  These contributions are important for software engineering educators in higher-education settings because, despite the emergence of dual-track ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"throughout the project.  1) Projects Definition and Team Formation: Students define and select their own projects. To prepare, each student is asked to contribute one social ",challenge ,"that could potentially be addressed with a software system having a strong user focus, that students are capable of implementing, and for which they ","throughout the project.  1) Projects Definition and Team Formation: Students define and select their own projects. To prepare, each student is asked to contribute one social challenge that could potentially be addressed with a software system having a strong user focus, that students are capable of implementing, and for which they ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"mentoring in the classroom, feedback has always scored high in the online course evaluation, even with a class of 33 students. Still, providing effective feedback becomes ",challenging ,"as class size grows. Evaluating creative and novel work that is tackling open-ended problems is time consuming. Furthermore, when left on their own ","mentoring in the classroom, feedback has always scored high in the online course evaluation, even with a class of 33 students. Still, providing effective feedback becomes challenging as class size grows. Evaluating creative and novel work that is tackling open-ended problems is time consuming. Furthermore, when left on their own ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"capable of implementing, and for which they have access to potential users (ideally in professional settings).  During a class activity, starting with the most interesting ",challenges (,"e.g., about six challenges for a class of 30 students), and following the Charette Procedure brainstorming technique [48], students build on each other’s ideas ","capable of implementing, and for which they have access to potential users (ideally in professional settings).  During a class activity, starting with the most interesting challenges (e.g., about six challenges for a class of 30 students), and following the Charette Procedure brainstorming technique [48], students build on each other’s ideas ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"IxD, and their perspectives on these domains. It is an opportunity to improve the students’ interview and communication skills while enlarging their professional network.  V. ",CHALLENGES  ,"Overall, the course is well received by students, as illustrated by the following quotes taken from the online course evaluation: “Excellent course with great ","IxD, and their perspectives on these domains. It is an opportunity to improve the students’ interview and communication skills while enlarging their professional network.  V. CHALLENGES  Overall, the course is well received by students, as illustrated by the following quotes taken from the online course evaluation: “Excellent course with great ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"track agile and helps them understand the continuous and concurrent nature of product discovery and delivery, while still allocating enough time to properly learn the ",challenging ,"RE and IxD practices. Ideally, however, a course like SRID should be followed by another course (e.g., practicum, capstone) where students can apply ","track agile and helps them understand the continuous and concurrent nature of product discovery and delivery, while still allocating enough time to properly learn the challenging RE and IxD practices. Ideally, however, a course like SRID should be followed by another course (e.g., practicum, capstone) where students can apply ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"of working hand in hand with users to understand their needs. I would recommend this course to everyone!” However, the course also comes with its ",challenges. ,"This section covers past and current challenges, together with attempts to overcome them.  A. Project Selection  In the context of project-based learning, the ","of working hand in hand with users to understand their needs. I would recommend this course to everyone!” However, the course also comes with its challenges. This section covers past and current challenges, together with attempts to overcome them.  A. Project Selection  In the context of project-based learning, the ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"to understand their needs. I would recommend this course to everyone!” However, the course also comes with its challenges. This section covers past and current ","challenges, ","together with attempts to overcome them.  A. Project Selection  In the context of project-based learning, the success of the course relies on finding ","to understand their needs. I would recommend this course to everyone!” However, the course also comes with its challenges. This section covers past and current challenges, together with attempts to overcome them.  A. Project Selection  In the context of project-based learning, the success of the course relies on finding ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"include a fully functional, useful, usable, and delightful front-end implemented with HTML/CSS/JS. However, because of time constraints, the back-end might include ",hard-,coded functionality and data. The righthand side of Figure 6 shows a screen of the mobile application developed by the recycling team. Each team then ,"include a fully functional, useful, usable, and delightful front-end implemented with HTML/CSS/JS. However, because of time constraints, the back-end might include hard-coded functionality and data. The righthand side of Figure 6 shows a screen of the mobile application developed by the recycling team. Each team then ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"of the backlog. The application should include a fully functional, useful, usable, and delightful front-end implemented with HTML/CSS/JS. However, because of time ","constraints, ",the back-end might include hard-coded functionality and data. The righthand side of Figure 6 shows a screen of the mobile application developed by ,"of the backlog. The application should include a fully functional, useful, usable, and delightful front-end implemented with HTML/CSS/JS. However, because of time constraints, the back-end might include hard-coded functionality and data. The righthand side of Figure 6 shows a screen of the mobile application developed by ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,opportunities. Here is an example of opportunity identified by students during the class activity last semester: “Modern society generates a lot of waste with a ,negative ,impact on our environment. We might be able to leverage software technology to decrease waste footprint through increased recycling.” Students artifacts presented in figures 5 ,opportunities. Here is an example of opportunity identified by students during the class activity last semester: “Modern society generates a lot of waste with a negative impact on our environment. We might be able to leverage software technology to decrease waste footprint through increased recycling.” Students artifacts presented in figures 5 ,2019
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"and must be considered as a kind of deliverable, too. Unfortunately, the desired learning can often only be achieved by making mistakes, analyzing the resulting ","problems, ","and rectifying them. This takes time, and during this period, there is no progress which can be measured in terms of working code. Furthermore, ","and must be considered as a kind of deliverable, too. Unfortunately, the desired learning can often only be achieved by making mistakes, analyzing the resulting problems, and rectifying them. This takes time, and during this period, there is no progress which can be measured in terms of working code. Furthermore, ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"of the systems on which students can work. Therefore, the Software Engineering curricula must be carefully crafted so that students can learn about large-scale ",problems ,"and solutions during the course of their study, in a situation where there is little opportunity to expose them to sufficiently large and complex ","of the systems on which students can work. Therefore, the Software Engineering curricula must be carefully crafted so that students can learn about large-scale problems and solutions during the course of their study, in a situation where there is little opportunity to expose them to sufficiently large and complex ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,frustrated when they receive negative feedback on what they thought was completed work. The issue of not having feedback when needed is magnified by the ,problem ,"of students working at home, alone and/or at night. Being able to talk to the client earlier and more freely would certainly help ","frustrated when they receive negative feedback on what they thought was completed work. The issue of not having feedback when needed is magnified by the problem of students working at home, alone and/or at night. Being able to talk to the client earlier and more freely would certainly help ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"educational goals or may not be adjusted easily to a learning environment. In this paper, we discuss some of these issues and reflect on the ",problems ,"of teaching agile processes in tertiary education.  1. Introduction Imagine translating a book from Chinese into English, and the book changes overnight, the paper and ","educational goals or may not be adjusted easily to a learning environment. In this paper, we discuss some of these issues and reflect on the problems of teaching agile processes in tertiary education.  1. Introduction Imagine translating a book from Chinese into English, and the book changes overnight, the paper and ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,eXtreme programming at universities-an educational perspective  Abstract To address the ,problems ,"of traditional software development, recent years have shown the introduction of more light-weight or ""agile"" development processes (eXtreme Programming being the most prominent ","eXtreme programming at universities-an educational perspective  Abstract To address the problems of traditional software development, recent years have shown the introduction of more light-weight or ""agile"" development processes (eXtreme Programming being the most prominent ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"fix the problem. Therefore, students need a solid understanding of the techniques and methods that can help produce a quality product. However, there is the ",problem ,that the techniques for ensuring quality in a large-scale product often seem to be an overkill for the size of products students confront. ,"fix the problem. Therefore, students need a solid understanding of the techniques and methods that can help produce a quality product. However, there is the problem that the techniques for ensuring quality in a large-scale product often seem to be an overkill for the size of products students confront. ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"are put together in a real project. That is, when students are required to interact with a real user to discover the client's real ","problems, ","the pieces start to fall into place. For example, why should one trace where the requirement originated? Or, later, why should a design decision ","are put together in a real project. That is, when students are required to interact with a real user to discover the client's real problems, the pieces start to fall into place. For example, why should one trace where the requirement originated? Or, later, why should a design decision ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"studies. Instilling the concept of ""ego-less working"" at an early stage is a key element, the introduction of learning communities [16] another. Location and scheduling ",problems ,"are difficult to over- come in an academic environment. Leverage may possibly be found with additional research into distributed light- weight methods, and their ","studies. Instilling the concept of ""ego-less working"" at an early stage is a key element, the introduction of learning communities [16] another. Location and scheduling problems are difficult to over- come in an academic environment. Leverage may possibly be found with additional research into distributed light- weight methods, and their ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"of joint working sessions. They reverted to ""the way we have been working throughout the previous years of our studies?' On-site Client. A similar ",problem ,"arises with regards to having an on-site customer. Considenng that this is often wishful thinking even in industry projects, with students' timetables it ","of joint working sessions. They reverted to ""the way we have been working throughout the previous years of our studies?' On-site Client. A similar problem arises with regards to having an on-site customer. Considenng that this is often wishful thinking even in industry projects, with students' timetables it ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"home, alone and/or at night. Being able to talk to the client earlier and more freely would certainly help to rectify these kinds of ",problems. ,Development Cycles. XP is a highly iterative and incremental development process with iterations taking one to two weeks and a new release coming out ,"home, alone and/or at night. Being able to talk to the client earlier and more freely would certainly help to rectify these kinds of problems. Development Cycles. XP is a highly iterative and incremental development process with iterations taking one to two weeks and a new release coming out ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"Quality. Quality is said to be noted in its absence, rather than in its presence. Unfortunately, it is often then too late to fix the ",problem. ,"Therefore, students need a solid understanding of the techniques and methods that can help produce a quality product. However, there is the problem that ","Quality. Quality is said to be noted in its absence, rather than in its presence. Unfortunately, it is often then too late to fix the problem. Therefore, students need a solid understanding of the techniques and methods that can help produce a quality product. However, there is the problem that ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,tenets are not compatible with the real environment of most students. Some of the difficulties lie with the prior educational experiences of students. There are ,problems ,"when the student mindset prioritizes outcomes in the order (i) a pass in a course, (ii) a good grade in a course, (iii) the ","tenets are not compatible with the real environment of most students. Some of the difficulties lie with the prior educational experiences of students. There are problems when the student mindset prioritizes outcomes in the order (i) a pass in a course, (ii) a good grade in a course, (iii) the ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"It is good for them to be exposed to specific tools, but it is also important that they realise the range available. This becomes an ",issue ,"of education for understanding and application of knowledge versus training to use a specific product, the latter being a non-extendable position. 3.2. Putting it ","It is good for them to be exposed to specific tools, but it is also important that they realise the range available. This becomes an issue of education for understanding and application of knowledge versus training to use a specific product, the latter being a non-extendable position. 3.2. Putting it ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"in getting certain aspects of the system ""perfect"" and understandably get frustrated when they receive negative feedback on what they thought was completed work. The ",issue ,"of not having feedback when needed is magnified by the problem of students working at home, alone and/or at night. Being able to ","in getting certain aspects of the system ""perfect"" and understandably get frustrated when they receive negative feedback on what they thought was completed work. The issue of not having feedback when needed is magnified by the problem of students working at home, alone and/or at night. Being able to ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"XP as the development process would certainly be a feasible approach. Recent work has shown that despite its success, XP does not address some important ",issues ,of software development [17] or should not be used for larger-scale and/or safety-critical systems [4]. Although further investigation of the (non-)applicability of ,"XP as the development process would certainly be a feasible approach. Recent work has shown that despite its success, XP does not address some important issues of software development [17] or should not be used for larger-scale and/or safety-critical systems [4]. Although further investigation of the (non-)applicability of ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"academic environment. Leverage may possibly be found with additional research into distributed light- weight methods, and their application to educational situations. Currently the co-location ",issues ,"are difficult to solve. One way to present a large-scale project to students is to offer a team-based maintenance project, where extensions ","academic environment. Leverage may possibly be found with additional research into distributed light- weight methods, and their application to educational situations. Currently the co-location issues are difficult to solve. One way to present a large-scale project to students is to offer a team-based maintenance project, where extensions ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"to communicate the design, and the need for capturing design rationale. Beyond that, there is an urgent need for more instruction in architecture and related ",issues ,"such as component-based systems and the use of patterns. An area often not discussed is that of interaction design, and the resulting user ","to communicate the design, and the need for capturing design rationale. Beyond that, there is an urgent need for more instruction in architecture and related issues such as component-based systems and the use of patterns. An area often not discussed is that of interaction design, and the resulting user ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"for any forward-engineering activity [6]. Finally, one cannot equitably assess a team of developers (either individually or as a group) on running software alone, as ",issues ,"such as personal initiative, dedication to quality work etc. are not judged to the required level of accuracy. Other ""products"" of the development process ","for any forward-engineering activity [6]. Finally, one cannot equitably assess a team of developers (either individually or as a group) on running software alone, as issues such as personal initiative, dedication to quality work etc. are not judged to the required level of accuracy. Other ""products"" of the development process ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"practices may run counter to educational goals or may not be adjusted easily to a learning environment. In this paper, we discuss some of these ",issues ,"and reflect on the problems of teaching agile processes in tertiary education.  1. Introduction Imagine translating a book from Chinese into English, and the book ","practices may run counter to educational goals or may not be adjusted easily to a learning environment. In this paper, we discuss some of these issues and reflect on the problems of teaching agile processes in tertiary education.  1. Introduction Imagine translating a book from Chinese into English, and the book ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"the practices of agile development processes in tertiary education? • If so, how should they be introduced to avoid contradicting our educational goals? This paper considers ",issues ,"with using eXtreme Programming to educate students in Software Engineering. The rest of this paper is organized as follows: in Section 2, we briefly introduce ","the practices of agile development processes in tertiary education? • If so, how should they be introduced to avoid contradicting our educational goals? This paper considers issues with using eXtreme Programming to educate students in Software Engineering. The rest of this paper is organized as follows: in Section 2, we briefly introduce ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"person for interaction. Also, students are loathe to be continually contacting the client: ""we do not want to bother our clients with small or trivial ",issues ,"all the time."" As a result, students often spend quite some time in getting certain aspects of the system ""perfect"" and understandably get frustrated ","person for interaction. Also, students are loathe to be continually contacting the client: ""we do not want to bother our clients with small or trivial issues all the time."" As a result, students often spend quite some time in getting certain aspects of the system ""perfect"" and understandably get frustrated ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"help them manage a variety o f projects (from small to large-scale), introduced the ideas in the context o f the positive and negative ",issues ,"associated with any process model, and given guidelines how to select a process model for the particular situation. The Crystal methodologies [4] is a process-","help them manage a variety o f projects (from small to large-scale), introduced the ideas in the context o f the positive and negative issues associated with any process model, and given guidelines how to select a process model for the particular situation. The Crystal methodologies [4] is a process-",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,with a few recommendations for software engineering curricula in Section 5. We conclude this paper in Section 6 with a summary of the main observations and suggest ,issues ,for further investigation. 3. E d u c a t i o n a l O b j e c t i v e s ,with a few recommendations for software engineering curricula in Section 5. We conclude this paper in Section 6 with a summary of the main observations and suggest issues for further investigation. 3. E d u c a t i o n a l O b j e c t i v e s ,2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"In such a development, typically no one person can carry all the details of the system in their heads, teamwork becomes a hallmark, and process ",issues ,"need careful consideration. In building an aircraft, one can specify the properties of the required product, design a solution, and test a small scale ","In such a development, typically no one person can carry all the details of the system in their heads, teamwork becomes a hallmark, and process issues need careful consideration. In building an aircraft, one can specify the properties of the required product, design a solution, and test a small scale ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,ego-less attitude is required as people have to favour team success over personal rewards and assist other team members improve their working skills. These ,issues ,require a level of maturity to accept. Process and Discipline. Agile methodologies are considered to be light-weight and impose less process burden upon ,ego-less attitude is required as people have to favour team success over personal rewards and assist other team members improve their working skills. These issues require a level of maturity to accept. Process and Discipline. Agile methodologies are considered to be light-weight and impose less process burden upon ,2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"all relevant viewpoints up front, including the perspectives of both the end-user and the client. Students frequently need reminding of the importance of these ",issues. ,Software Construction. Students tend to regard this topic as the key part of software engineering endeavours. Software Design. Small systems can usually be modified ,"all relevant viewpoints up front, including the perspectives of both the end-user and the client. Students frequently need reminding of the importance of these issues. Software Construction. Students tend to regard this topic as the key part of software engineering endeavours. Software Design. Small systems can usually be modified ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,larger-scale and/or safety-critical systems [4]. Although further investigation of the (non-)applicability of XP for real-world software projects is certainly an important ,"issue, ","this is beyond the scope of this paper. In this section, the focus is on evaluating some of the practices used in XP with ","larger-scale and/or safety-critical systems [4]. Although further investigation of the (non-)applicability of XP for real-world software projects is certainly an important issue, this is beyond the scope of this paper. In this section, the focus is on evaluating some of the practices used in XP with ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"underdeveloped interpersonal skills. Young people usually have very good memories, and trust in their own ability to recall information. In this context, it is often",difficult,"to convince students about the value, let alone necessity, of software configuration management. In class, students tend to work on ""toy"" examples, and configuration","underdeveloped interpersonal skills. Young people usually have very good memories, and trust in their own ability to recall information. In this context, it is oftendifficultto convince students about the value, let alone necessity, of software configuration management. In class, students tend to work on ""toy"" examples, and configuration",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"awkward and, unsurpfisingly, students prefer working at home. Furthermore, as most students have part-time jobs and their timetables are relatively disjoint, it is often",difficult,"to find suitable times for scheduling joint working sessions outside timetabled classes at all. Hence, student software projects are probably more aligned with distributed","awkward and, unsurpfisingly, students prefer working at home. Furthermore, as most students have part-time jobs and their timetables are relatively disjoint, it is oftendifficultto find suitable times for scheduling joint working sessions outside timetabled classes at all. Hence, student software projects are probably more aligned with distributed",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"the concept of ""ego-less working"" at an early stage is a key element, the introduction of learning communities [16] another. Location and scheduling problems are",difficult,"to over- come in an academic environment. Leverage may possibly be found with additional research into distributed light- weight methods, and their application to","the concept of ""ego-less working"" at an early stage is a key element, the introduction of learning communities [16] another. Location and scheduling problems aredifficultto over- come in an academic environment. Leverage may possibly be found with additional research into distributed light- weight methods, and their application to",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"Leverage may possibly be found with additional research into distributed light- weight methods, and their application to educational situations. Currently the co-location issues are",difficult,"to solve. One way to present a large-scale project to students is to offer a team-based maintenance project, where extensions are needed.","Leverage may possibly be found with additional research into distributed light- weight methods, and their application to educational situations. Currently the co-location issues aredifficultto solve. One way to present a large-scale project to students is to offer a team-based maintenance project, where extensions are needed.",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"Management. Many undergraduate students have little experience of managing anything. Some are of the age and mind-set to rebel against authority, and it is",difficult,"for them to suddenly have to consider how a project is managed. Additionally, they often have little experience in a workplace and are unaware","Management. Many undergraduate students have little experience of managing anything. Some are of the age and mind-set to rebel against authority, and it isdifficultfor them to suddenly have to consider how a project is managed. Additionally, they often have little experience in a workplace and are unaware",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,foundations of Computing and Engineering. This includes the ability to deal with abstraction and to understand the concept of models. Most students would have little,difficulty,"comprehending the reason for including these topics in an SE program. Professional Practice. While one could debate exactly what ""Professional Practice"" should encompass, it","foundations of Computing and Engineering. This includes the ability to deal with abstraction and to understand the concept of models. Most students would have littledifficultycomprehending the reason for including these topics in an SE program. Professional Practice. While one could debate exactly what ""Professional Practice"" should encompass, it",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"to go?' While XP has many positive aspects, many of its tenets are not compatible with the real environment of most students. Some of the",difficulties,lie with the prior educational experiences of students. There are problems when the student mindset prioritizes outcomes in the order (i) a pass in,"to go?' While XP has many positive aspects, many of its tenets are not compatible with the real environment of most students. Some of thedifficultieslie with the prior educational experiences of students. There are problems when the student mindset prioritizes outcomes in the order (i) a pass in",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,behavioural protocols. This can have implications for how they interact and organise a team-based project. Richardson [12] observed that teaching SE to undergraduates was a,difficult,"proposition owing to (i) their lack of computing experience, (ii) their lack of academic maturity to deal with ambiguity and conflicts between reality and","behavioural protocols. This can have implications for how they interact and organise a team-based project. Richardson [12] observed that teaching SE to undergraduates was adifficultproposition owing to (i) their lack of computing experience, (ii) their lack of academic maturity to deal with ambiguity and conflicts between reality and",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,experience in a workplace and are unaware of expected behavioural protocols. This can have implications for how they interact and organise a team-based project. ,Richardson [12] ,"observed that teaching SE to undergraduates was a difficult proposition owing to (i) their lack of computing experience, (ii) their lack of academic maturity ","experience in a workplace and are unaware of expected behavioural protocols. This can have implications for how they interact and organise a team-based project. Richardson [12] observed that teaching SE to undergraduates was a difficult proposition owing to (i) their lack of computing experience, (ii) their lack of academic maturity ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"somewhat foreign idea that a complex system does not lend itself to a haphazard approach for development, and requires good management. Additionally, time and resource ",constraints ,"usually limit the scope of the systems on which students can work. Therefore, the Software Engineering curricula must be carefully crafted so that students ","somewhat foreign idea that a complex system does not lend itself to a haphazard approach for development, and requires good management. Additionally, time and resource constraints usually limit the scope of the systems on which students can work. Therefore, the Software Engineering curricula must be carefully crafted so that students ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"time."" As a result, students often spend quite some time in getting certain aspects of the system ""perfect"" and understandably get frustrated when they receive ",negative ,feedback on what they thought was completed work. The issue of not having feedback when needed is magnified by the problem of students working ,"time."" As a result, students often spend quite some time in getting certain aspects of the system ""perfect"" and understandably get frustrated when they receive negative feedback on what they thought was completed work. The issue of not having feedback when needed is magnified by the problem of students working ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"that help them manage a variety o f projects (from small to large-scale), introduced the ideas in the context o f the positive and ",negative ,"issues associated with any process model, and given guidelines how to select a process model for the particular situation. The Crystal methodologies [4] is a ","that help them manage a variety o f projects (from small to large-scale), introduced the ideas in the context o f the positive and negative issues associated with any process model, and given guidelines how to select a process model for the particular situation. The Crystal methodologies [4] is a ",2003
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"immediate results. However, a tutor might rate the Sprint Review and Retrospective of this team highly, because the students tried new techniques, reflected on their ",problems ,"and proposed solutions. With more knowledge of the Scrum process, tutors are able to determine whether students have learned and progressed, both in Scrum ","immediate results. However, a tutor might rate the Sprint Review and Retrospective of this team highly, because the students tried new techniques, reflected on their problems and proposed solutions. With more knowledge of the Scrum process, tutors are able to determine whether students have learned and progressed, both in Scrum ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"to the nature of surveys, in order to allow meaningful comparisons, surveys cannot be iterated and adapted during a course. To alleviate some of these ",problems ,"and provide a more objective view, in comparison to self-assessments, tutors were employed.  8Available at: https://github.com/chrisma/icse16.   4. TUTOR SCORES  Members ","to the nature of surveys, in order to allow meaningful comparisons, surveys cannot be iterated and adapted during a course. To alleviate some of these problems and provide a more objective view, in comparison to self-assessments, tutors were employed.  8Available at: https://github.com/chrisma/icse16.   4. TUTOR SCORES  Members ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"points, where the teaching staff assesses progress and discusses process implementation with the students. Despite this more fine-grained insight into process adoption, the general ",problems ,"of relying on student input and snapshot-like observation remain. So, how is it possible to unobtrusively observe the way that students employ the ","points, where the teaching staff assesses progress and discusses process implementation with the students. Despite this more fine-grained insight into process adoption, the general problems of relying on student input and snapshot-like observation remain. So, how is it possible to unobtrusively observe the way that students employ the ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"process [2]. Hence, a laboratory-like setting potentially reduces the learning experience for students [6]. The other extreme is to focus on project outcome and discuss potential ",problems ,"in retrospection sessions. This relies on students being conscientious, honest, and open about mistakes they made throughout the project. Depending on the course setup ","process [2]. Hence, a laboratory-like setting potentially reduces the learning experience for students [6]. The other extreme is to focus on project outcome and discuss potential problems in retrospection sessions. This relies on students being conscientious, honest, and open about mistakes they made throughout the project. Depending on the course setup ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"a team in an iteration. The lower the score, the more violations were found and the more likely it is that there is an actual ",problem ,"in the way a team works. The details returned by metrics, i.e. the development artifacts that were identified to be in violation of ","a team in an iteration. The lower the score, the more violations were found and the more likely it is that there is an actual problem in the way a team works. The details returned by metrics, i.e. the development artifacts that were identified to be in violation of ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"quality of tests (amount, coverage, relevance, effectiveness, regression, etc.)?  2 How was the cooperation / communication with other teams (what is being done, when, why, blockers, merges, ",problems ,"are being solved collectively, etc.)? 3 How do you rate the product vision of the POs (is it clear what the product should accomplish, POs ","quality of tests (amount, coverage, relevance, effectiveness, regression, etc.)?  2 How was the cooperation / communication with other teams (what is being done, when, why, blockers, merges, problems are being solved collectively, etc.)? 3 How do you rate the product vision of the POs (is it clear what the product should accomplish, POs ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"violations. These may only be symptoms of deeper problems, which should be tackled in the following improvement step. Furthermore, violations may not actually point to ",problems ,"but can be false positives. This can be the case when queries are not refined enough, some special cases were forgotten, or the development ","violations. These may only be symptoms of deeper problems, which should be tackled in the following improvement step. Furthermore, violations may not actually point to problems but can be false positives. This can be the case when queries are not refined enough, some special cases were forgotten, or the development ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,gain an insight into what happened. This step is necessary in order to gauge the quality of violations. These may only be symptoms of deeper ,"problems, ","which should be tackled in the following improvement step. Furthermore, violations may not actually point to problems but can be false positives. This can ","gain an insight into what happened. This step is necessary in order to gauge the quality of violations. These may only be symptoms of deeper problems, which should be tackled in the following improvement step. Furthermore, violations may not actually point to problems but can be false positives. This can ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"the primary survey starting at the end of the second Sprint. It included questions about topics not covered by the primary survey, which had been ",problem ,"areas in previous installments of the software engineering course: testing, cooperation between teams, the quality of the backlog, and the “Definition of Done” (see ","the primary survey starting at the end of the second Sprint. It included questions about topics not covered by the primary survey, which had been problem areas in previous installments of the software engineering course: testing, cooperation between teams, the quality of the backlog, and the “Definition of Done” (see ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"observations, and initial testing of automated process analysis allowed us to gain deeper insights into Scrum adoption within the presented course. Based on the general ",problem ,"domains identified through the surveys, tutors were able to focus their feedback during meetings. Automated analysis post-hoc revealed evidence for certain adoption problems. ","observations, and initial testing of automated process analysis allowed us to gain deeper insights into Scrum adoption within the presented course. Based on the general problem domains identified through the surveys, tutors were able to focus their feedback during meetings. Automated analysis post-hoc revealed evidence for certain adoption problems. ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"perceive the enacted process. However, conducting regular surveys is time intensive for both students and teaching staff and provides little detail about the causes of ",problems. ,"Especially, no concrete link to development artifacts that could have been a point of contention, can be obtained to allow further research. Furthermore, due ","perceive the enacted process. However, conducting regular surveys is time intensive for both students and teaching staff and provides little detail about the causes of problems. Especially, no concrete link to development artifacts that could have been a point of contention, can be obtained to allow further research. Furthermore, due ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"process. To achieve this balance, we implemented a threefold approach. Firstly, anonymous surveys helped to understand which elements of the process seemed most important or ",problematic ,"for the students (Section 3). Secondly, tutors observed Scrum meetings with minimal interference to get a first-hand impression of Scrum adoption (Section 4). Finally, we ","process. To achieve this balance, we implemented a threefold approach. Firstly, anonymous surveys helped to understand which elements of the process seemed most important or problematic for the students (Section 3). Secondly, tutors observed Scrum meetings with minimal interference to get a first-hand impression of Scrum adoption (Section 4). Finally, we ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"of the meeting. Otherwise, students received feedback at the end of meetings in an “I like, I wish” format (a variant of Cockburn’s “Keep/",Problem/,Try” [4]).  The tutors rated the students on two aspects: their dedication to Scrum and associated methods as well as their progress in implementing these. ,"of the meeting. Otherwise, students received feedback at the end of meetings in an “I like, I wish” format (a variant of Cockburn’s “Keep/Problem/Try” [4]).  The tutors rated the students on two aspects: their dedication to Scrum and associated methods as well as their progress in implementing these. ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"existing development artifacts. ScrumLint can alleviate the need to manually analyze large amounts of development data, allowing the focus on those that might pose a ",problem. ,"Violations of agile practices can be tracked down to the actual development artifact, allowing discussions on the basis of concrete data. As conformance metrics ","existing development artifacts. ScrumLint can alleviate the need to manually analyze large amounts of development data, allowing the focus on those that might pose a problem. Violations of agile practices can be tracked down to the actual development artifact, allowing discussions on the basis of concrete data. As conformance metrics ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"general problem domains identified through the surveys, tutors were able to focus their feedback during meetings. Automated analysis post-hoc revealed evidence for certain adoption ",problems. ,"We therefore conclude that the presented approach is viable for the setup of the course, but can also be adopted to other setups by ","general problem domains identified through the surveys, tutors were able to focus their feedback during meetings. Automated analysis post-hoc revealed evidence for certain adoption problems. We therefore conclude that the presented approach is viable for the setup of the course, but can also be adopted to other setups by ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"process. To achieve this balance, we implemented a threefold approach. Firstly, anonymous surveys helped to understand which elements of the process seemed most important or ",problematic ,"for the students (Section 3). Secondly, tutors observed Scrum meetings with minimal interference to get a first-hand impression of Scrum adoption (Section 4). Finally, we ","process. To achieve this balance, we implemented a threefold approach. Firstly, anonymous surveys helped to understand which elements of the process seemed most important or problematic for the students (Section 3). Secondly, tutors observed Scrum meetings with minimal interference to get a first-hand impression of Scrum adoption (Section 4). Finally, we ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"as an E-Mail, which includes large amounts of free text. For the first version of ScrumLint we focused mainly on source code management and ",issue ,"tracker data, as these represented the majority of data that students produced regularly. The primary data source for development information was Github’s git ","as an E-Mail, which includes large amounts of free text. For the first version of ScrumLint we focused mainly on source code management and issue tracker data, as these represented the majority of data that students produced regularly. The primary data source for development information was Github’s git ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,alter this data and thereby reduce its validity [3]. Github’s issue tracker was used to store and manage user stories created by POs. Although the ,issue ,"tracker is not explicitly designed for this purpose, some limitations were worked around, e.g. adding priorities and effort estimations to the titles of ","alter this data and thereby reduce its validity [3]. Github’s issue tracker was used to store and manage user stories created by POs. Although the issue tracker is not explicitly designed for this purpose, some limitations were worked around, e.g. adding priorities and effort estimations to the titles of ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,changed and who made the modifications. It needs to be noted that skilled developers could alter this data and thereby reduce its validity [3]. Github’s ,issue ,"tracker was used to store and manage user stories created by POs. Although the issue tracker is not explicitly designed for this purpose, some ","changed and who made the modifications. It needs to be noted that skilled developers could alter this data and thereby reduce its validity [3]. Github’s issue tracker was used to store and manage user stories created by POs. Although the issue tracker is not explicitly designed for this purpose, some ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"to notify developers in case of errors that occurred, e.g., during presentations to the customer.  For backlog maintenance, the project uses the standard Github ",issue ,"tracker with an additional Scrum-view provided by Waffle.io5. By that, all teams have access to issues that other teams are working on ","to notify developers in case of errors that occurred, e.g., during presentations to the customer.  For backlog maintenance, the project uses the standard Github issue tracker with an additional Scrum-view provided by Waffle.io5. By that, all teams have access to issues that other teams are working on ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"maintenance, the project uses the standard Github issue tracker with an additional Scrum-view provided by Waffle.io5. By that, all teams have access to ",issues ,"that other teams are working on and can leave comments, e.g. if they detect duplicates. For communication, a Slack6 team was created and ","maintenance, the project uses the standard Github issue tracker with an additional Scrum-view provided by Waffle.io5. By that, all teams have access to issues that other teams are working on and can leave comments, e.g. if they detect duplicates. For communication, a Slack6 team was created and ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"of Scrum are in line with previous studies [14, 15]. Using the answers to the regular surveys we were furthermore able to find topics that students had ",issues ,with and could respond to them in a timely manner in meetings and lectures. Mahnic reports that no significant correlations between the satisfaction with ,"of Scrum are in line with previous studies [14, 15]. Using the answers to the regular surveys we were furthermore able to find topics that students had issues with and could respond to them in a timely manner in meetings and lectures. Mahnic reports that no significant correlations between the satisfaction with ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"on collaboration, both within and between teams. Other courses, that also aim to teach agile methods, such as the one performed by Mahnic [14], overcome these ",issues ,by letting the teaching team create the backlogs. As our evaluations also stipulated that self-organization was a main takeaway from the course and ,"on collaboration, both within and between teams. Other courses, that also aim to teach agile methods, such as the one performed by Mahnic [14], overcome these issues by letting the teaching team create the backlogs. As our evaluations also stipulated that self-organization was a main takeaway from the course and ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"and their implementation of Scrum practices over the span of the course. In particular, the surveys had the following aims:  • Find topics that students have ",issues ,"with, so that these areas could be addressed in a timely manner in the course.  • Find correlations between patterns of answers to questions, allowing ","and their implementation of Scrum practices over the span of the course. In particular, the surveys had the following aims:  • Find topics that students have issues with, so that these areas could be addressed in a timely manner in the course.  • Find correlations between patterns of answers to questions, allowing ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"of software engineering practices through first-hand experience [5, 16, 20]. Contrary to theoretical foundations, whose understanding can be assessed through exams, the quality of practical application is",difficult,"to monitor [8]. If teachers do not accompany students throughout the entire project, how can they be certain that the taught methods were applied correctly?","of software engineering practices through first-hand experience [5, 16, 20]. Contrary to theoretical foundations, whose understanding can be assessed through exams, the quality of practical application isdifficultto monitor [8]. If teachers do not accompany students throughout the entire project, how can they be certain that the taught methods were applied correctly?",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"of systems could be reduced and existing knowledge of popular tools was utilized.  Regardless of the topic or the infrastructure, the student teams cited similar ",challenges ,"in the evaluation surveys performed at the end of each course. Eliciting, structuring, and communicating requirements was deemed to be the most challenging task ","of systems could be reduced and existing knowledge of popular tools was utilized.  Regardless of the topic or the infrastructure, the student teams cited similar challenges in the evaluation surveys performed at the end of each course. Eliciting, structuring, and communicating requirements was deemed to be the most challenging task ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,Assess Scrum Adoption in a Classroom Software Engineering Project   ABSTRACT Agile methods are best taught in a hands-on fashion in realistic projects. The main ,challenge ,in doing so is to assess whether students apply the methods correctly without requiring complete supervision throughout the entire project. This paper presents experiences ,Assess Scrum Adoption in a Classroom Software Engineering Project   ABSTRACT Agile methods are best taught in a hands-on fashion in realistic projects. The main challenge in doing so is to assess whether students apply the methods correctly without requiring complete supervision throughout the entire project. This paper presents experiences ,2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"quality of overall results. However, there is little research yet on what constitutes best practices for agile metrics. Zazworka et al. state that the “biggest ",challenge ,"was to find definitions for the XP practices that contained enough detail” [21]. However, using ScrumLint and a relatively small amount of metrics (10 overall), we ","quality of overall results. However, there is little research yet on what constitutes best practices for agile metrics. Zazworka et al. state that the “biggest challenge was to find definitions for the XP practices that contained enough detail” [21]. However, using ScrumLint and a relatively small amount of metrics (10 overall), we ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,be again interesting to see which influences such “cheats” have on the process and whether or not they accidentally improve Scrum implementation. Despite these future ,"challenges, ",we see great potential in a combination of the presented observation techniques and think that they could reduce workload for the teaching staff while ,"be again interesting to see which influences such “cheats” have on the process and whether or not they accidentally improve Scrum implementation. Despite these future challenges, we see great potential in a combination of the presented observation techniques and think that they could reduce workload for the teaching staff while ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"cited similar challenges in the evaluation surveys performed at the end of each course. Eliciting, structuring, and communicating requirements was deemed to be the most ",challenging ,"task and had major implications on collaboration, both within and between teams. Other courses, that also aim to teach agile methods, such as the ","cited similar challenges in the evaluation surveys performed at the end of each course. Eliciting, structuring, and communicating requirements was deemed to be the most challenging task and had major implications on collaboration, both within and between teams. Other courses, that also aim to teach agile methods, such as the ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,system using a scaled version of Scrum. Surveys helped us to identify which elements of Scrum correlated most with student satisfaction or posed the biggest ,challenges. ,"These insights were augmented by a team of tutors, which accompanied main meetings throughout the project to provide feedback to the teams, and captured ","system using a scaled version of Scrum. Surveys helped us to identify which elements of Scrum correlated most with student satisfaction or posed the biggest challenges. These insights were augmented by a team of tutors, which accompanied main meetings throughout the project to provide feedback to the teams, and captured ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"unlike that of code quality tools, pointing out areas where the process could be improved (i.e.“process smells” instead of “code smells” [7]). The main ",challenge ,with this approach is collecting and formalizing Scrum process violations. We adapted Zazworka et al’s. [21] model of process nonconformance as a basis for ,"unlike that of code quality tools, pointing out areas where the process could be improved (i.e.“process smells” instead of “code smells” [7]). The main challenge with this approach is collecting and formalizing Scrum process violations. We adapted Zazworka et al’s. [21] model of process nonconformance as a basis for ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"satisfaction with Scrum. These results suggest that the satisfaction with Scrum of student teams not only depends on the perceived quality of collaboration, which is ",hard ,"to determine automatically, but also depends on the perceived quality of development artifacts, such as user stories and tests. Based on these findings we ","satisfaction with Scrum. These results suggest that the satisfaction with Scrum of student teams not only depends on the perceived quality of collaboration, which is hard to determine automatically, but also depends on the perceived quality of development artifacts, such as user stories and tests. Based on these findings we ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,automatically from already existing development artifacts and data sources in order to minimize collection effort for team members and teaching staff. This avoids introducing additional ,constraints (,"e.g., prescribed usage of custom IDEs with preinstalled monitoring tools) and documentation duties, which go against the “self-organizing” spirit of Scrum and ","automatically from already existing development artifacts and data sources in order to minimize collection effort for team members and teaching staff. This avoids introducing additional constraints (e.g., prescribed usage of custom IDEs with preinstalled monitoring tools) and documentation duties, which go against the “self-organizing” spirit of Scrum and ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"their process implementation and provide feedback about the significance of metrics, it is possible that they identify weak spots and simply try to avoid generating ",negative ,"scores, e.g., through automation of tasks. In that case, however, it will be again interesting to see which influences such “cheats” have on ","their process implementation and provide feedback about the significance of metrics, it is possible that they identify weak spots and simply try to avoid generating negative scores, e.g., through automation of tasks. In that case, however, it will be again interesting to see which influences such “cheats” have on ",2016
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"proceeded it turned out that not all the Finnish students were as experienced and committed as the two visiting Canada, and the teams experienced some ","problems, ","and thus the trust started to deteriorate over time. Interestingly however, a team which had already established trust became stronger when faced with difficulties: ","proceeded it turned out that not all the Finnish students were as experienced and committed as the two visiting Canada, and the teams experienced some problems, and thus the trust started to deteriorate over time. Interestingly however, a team which had already established trust became stronger when faced with difficulties: ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"our team should have taken more of an initiative to talk to him [PO], rather than the other way around. (...) I really think that any ",problems ,"that we had with [the PO] was failing from our side to communicate, not necessarily from him. I don’t personally feel that a ","our team should have taken more of an initiative to talk to him [PO], rather than the other way around. (...) I really think that any problems that we had with [the PO] was failing from our side to communicate, not necessarily from him. I don’t personally feel that a ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"project like this to learn, because there’s things that you wouldn’t really understand that you need to work on, until you actually have ",problems ,with them. — A Canadian student I think it is how to manage time working with teams that aren’t all in the same place. (...) ,"project like this to learn, because there’s things that you wouldn’t really understand that you need to work on, until you actually have problems with them. — A Canadian student I think it is how to manage time working with teams that aren’t all in the same place. (...) ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"established trust became stronger when faced with difficulties: Because of the good communication and team trust that we build up, I think those sort of ",problems ,"actually build up the trust more, which is good.  3) Maintaining Trust through Awareness: Daily Scrum meetings scheduled twice a week created visibility of team ","established trust became stronger when faced with difficulties: Because of the good communication and team trust that we build up, I think those sort of problems actually build up the trust more, which is good.  3) Maintaining Trust through Awareness: Daily Scrum meetings scheduled twice a week created visibility of team ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"Somehow it felt that it did no matter, it was more like the personalities that mattered. — A Finnish student I don’t think any cultural ",problems ,"really came up. I was pretty comfortable talking to the Finns. (...) They are really not all that different. I mean, I guess they may ","Somehow it felt that it did no matter, it was more like the personalities that mattered. — A Finnish student I don’t think any cultural problems really came up. I was pretty comfortable talking to the Finns. (...) They are really not all that different. I mean, I guess they may ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"joint video conference session. During the sprints, teams held two weekly 15 min videoconference Daily Scrum meetings, followed by informal hangout sessions to discuss project-related ",issues ,"or strategies for the given sprint. Since the time allocated to this project was 10–12h/week/student, this frequency for Daily Scrums was determined ","joint video conference session. During the sprints, teams held two weekly 15 min videoconference Daily Scrum meetings, followed by informal hangout sessions to discuss project-related issues or strategies for the given sprint. Since the time allocated to this project was 10–12h/week/student, this frequency for Daily Scrums was determined ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"Interviews Purpose / Instruments TABLE I: Data Collection and Analysis Data collected Analysis  Student background, expectations Trust [20], Teamwork [21], [22], Communication Communication Communication Communication Teamwork, communication Communication, encountered ","issues, ","tasks Estimation accuracy, work breakdown Learning Learning, communication, communication tools, improvement ideas 25 responses 19-22 responses 4210 emails SNA 2859 messages SNA 31 Daily Scrums, 2 Demos & Sprint Planning meetings 5 ","Interviews Purpose / Instruments TABLE I: Data Collection and Analysis Data collected Analysis  Student background, expectations Trust [20], Teamwork [21], [22], Communication Communication Communication Communication Teamwork, communication Communication, encountered issues, tasks Estimation accuracy, work breakdown Learning Learning, communication, communication tools, improvement ideas 25 responses 19-22 responses 4210 emails SNA 2859 messages SNA 31 Daily Scrums, 2 Demos & Sprint Planning meetings 5 ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"to me about things like his experience in the army and stuff and that was kind of neat. — A Canadian student However, some found it",difficult,"to do it over the communication tools, but not impossible: I always felt like I shouldn’t be disturbing the people in Finland with","to me about things like his experience in the army and stuff and that was kind of neat. — A Canadian student However, some found itdifficultto do it over the communication tools, but not impossible: I always felt like I shouldn’t be disturbing the people in Finland with",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"were, just have the same vision of the project and were doing the same thing, and knew what people are doing. (...) it got sort of",difficult,"to tell exactly where the other side was at sometimes, if they hadn’t checked in their code. — A Canadian student Although the Daily","were, just have the same vision of the project and were doing the same thing, and knew what people are doing. (...) it got sort ofdifficultto tell exactly where the other side was at sometimes, if they hadn’t checked in their code. — A Canadian student Although the Daily",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"each other was cool. (...) You can read and interpret people, their opinions better than when only hearing their voice. Especially when there are some language","difficulties,","it helps to understand, communication is easier when you can see the others. — A Finnish student 2) Finding the Appropriate Amount, Style and Tools for","each other was cool. (...) You can read and interpret people, their opinions better than when only hearing their voice. Especially when there are some languagedifficulties,it helps to understand, communication is easier when you can see the others. — A Finnish student 2) Finding the Appropriate Amount, Style and Tools for",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"overall trend is upwards with all teams reporting higher values in the end, than they had in the beginning, indicating that in spite of some",difficulties,"the teams were able to improve their teamwork quality during the project. Interestingly, if we compare the communication structure of the teams (Figure 1a)","overall trend is upwards with all teams reporting higher values in the end, than they had in the beginning, indicating that in spite of somedifficultiesthe teams were able to improve their teamwork quality during the project. Interestingly, if we compare the communication structure of the teams (Figure 1a)",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"some problems, and thus the trust started to deteriorate over time. Interestingly however, a team which had already established trust became stronger when faced with",difficulties:,"Because of the good communication and team trust that we build up, I think those sort of problems actually build up the trust more,","some problems, and thus the trust started to deteriorate over time. Interestingly however, a team which had already established trust became stronger when faced withdifficulties:Because of the good communication and team trust that we build up, I think those sort of problems actually build up the trust more,",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,were doing. (...) That was the most positive aspect of the course. — A Canadian student The reverse effect was also observed in some teams: when programming,difficulties,"resulted in some members underperforming, the team began loosing trust in them on important tasks. This trend can be seen in the trust curves","were doing. (...) That was the most positive aspect of the course. — A Canadian student The reverse effect was also observed in some teams: when programmingdifficultiesresulted in some members underperforming, the team began loosing trust in them on important tasks. This trend can be seen in the trust curves",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"being rude. The Canadians on the other hand, incorporated a lot of small talk in to the conversation. Due to these differences, the Finns had",difficulty,"understanding the Canadians’ true opinions. I noticed that in demos they [Canadians] just talked and talked, and the Finns listened and said what we","being rude. The Canadians on the other hand, incorporated a lot of small talk in to the conversation. Due to these differences, the Finns haddifficultyunderstanding the Canadians’ true opinions. I noticed that in demos they [Canadians] just talked and talked, and the Finns listened and said what we",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,to discuss how by using practices of distributed Scrum students learned these skills. We discussed evidence of students’ learning in the form of their reported (1) ,challenges ,"in applying these skills, (2) strategies to overcome the challenges and (3) effectiveness of these strategies. We conclude that distributed Scrum augmented with GSE best practices ","to discuss how by using practices of distributed Scrum students learned these skills. We discussed evidence of students’ learning in the form of their reported (1) challenges in applying these skills, (2) strategies to overcome the challenges and (3) effectiveness of these strategies. We conclude that distributed Scrum augmented with GSE best practices ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"greatest challenges. However, with their equal emphasis on frequent communication, transparency of progress and short iterations, they in fact provide an effective approach to address ",challenges ,"in distributed collaboration, especially when augmented with GSE best practices [3]. Adopting agile methods in distributed settings seems to be a rising industry trend, as ","greatest challenges. However, with their equal emphasis on frequent communication, transparency of progress and short iterations, they in fact provide an effective approach to address challenges in distributed collaboration, especially when augmented with GSE best practices [3]. Adopting agile methods in distributed settings seems to be a rising industry trend, as ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"email and chat channels, analysis of videoconferencing project meetings and a series of post-course interviews. As evidence of learning, we describe the students’ reported ",challenges ,"in their distributed collaboration and teamwork, strategies to overcome them, as well as the effectiveness of these strategies.   III. COURSE INSTRUCTIONAL DESIGN  A. Learning ","email and chat channels, analysis of videoconferencing project meetings and a series of post-course interviews. As evidence of learning, we describe the students’ reported challenges in their distributed collaboration and teamwork, strategies to overcome them, as well as the effectiveness of these strategies.   III. COURSE INSTRUCTIONAL DESIGN  A. Learning ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,is something that we will certainly recommend to our students in the next course. Being precise and unambiguous in written communication is equally important and ,challenging. ,"The students mentioned that they learned how to improve the style of communication, by being precise in all communication and in particular as explicit ","is something that we will certainly recommend to our students in the next course. Being precise and unambiguous in written communication is equally important and challenging. The students mentioned that they learned how to improve the style of communication, by being precise in all communication and in particular as explicit ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"to communicate. — A Canadian student Scrum requires that each team scopes the work at the beginning of each iteration, and this has not been without ",challenges. ,The students quickly learned that in a real project the customer may have too many requests and lack a prioritized ranking. Our students’ ability ,"to communicate. — A Canadian student Scrum requires that each team scopes the work at the beginning of each iteration, and this has not been without challenges. The students quickly learned that in a real project the customer may have too many requests and lack a prioritized ranking. Our students’ ability ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"students learned these skills. We discussed evidence of students’ learning in the form of their reported (1) challenges in applying these skills, (2) strategies to overcome the ",challenges ,and (3) effectiveness of these strategies. We conclude that distributed Scrum augmented with GSE best practices is a suitable and important paradigm to consider in ,"students learned these skills. We discussed evidence of students’ learning in the form of their reported (1) challenges in applying these skills, (2) strategies to overcome the challenges and (3) effectiveness of these strategies. We conclude that distributed Scrum augmented with GSE best practices is a suitable and important paradigm to consider in ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"our surprise, this ended up being a practice that received very positive comments and the students wished they had used it even more, despite the ",challenges ,created by the time-zone difference. (...) maybe we should have mixed people so that we would have given more user stories to global pairs. ,"our surprise, this ended up being a practice that received very positive comments and the students wished they had used it even more, despite the challenges created by the time-zone difference. (...) maybe we should have mixed people so that we would have given more user stories to global pairs. ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,groups are in terms of burndown. — A Canadian student  2) Coping with Time-zone Differences and Strategies for Time Management: The Canadian-Finnish collaboration imposed a ,challenging 10-,"hour time difference between the students in each team. They learned that arranging common meeting times and synchronous working slots for pair/team work, ","groups are in terms of burndown. — A Canadian student  2) Coping with Time-zone Differences and Strategies for Time Management: The Canadian-Finnish collaboration imposed a challenging 10-hour time difference between the students in each team. They learned that arranging common meeting times and synchronous working slots for pair/team work, ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"their emphasis on face-to-face communication, agile methods seemingly present a practical dilemma for distributed development for which communication is one of the greatest ",challenges. ,"However, with their equal emphasis on frequent communication, transparency of progress and short iterations, they in fact provide an effective approach to address challenges ","their emphasis on face-to-face communication, agile methods seemingly present a practical dilemma for distributed development for which communication is one of the greatest challenges. However, with their equal emphasis on frequent communication, transparency of progress and short iterations, they in fact provide an effective approach to address challenges ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"methods in distributed settings seems to be a rising industry trend, as agile methods both provide several benefits, as well as strategies for addressing GSE ","challenges [4], [5]. ","Therefore, software engineering curricula must respond by providing students with knowledge and experiences of globally distributed agile projects. Furthermore, as software engineering researchers and ","methods in distributed settings seems to be a rising industry trend, as agile methods both provide several benefits, as well as strategies for addressing GSE challenges [4], [5]. Therefore, software engineering curricula must respond by providing students with knowledge and experiences of globally distributed agile projects. Furthermore, as software engineering researchers and ",2013
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,summarised in Table 2 and few elaborated below. It is evident from the results that the adaptations had both positive and negative effects.  To address the ,problem ,"of conflicting schedules and physically meeting each other every day, every team adapted daily stand-ups someway to fit the university context. Physical stand-","summarised in Table 2 and few elaborated below. It is evident from the results that the adaptations had both positive and negative effects.  To address the problem of conflicting schedules and physically meeting each other every day, every team adapted daily stand-ups someway to fit the university context. Physical stand-",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"know how much progress they've made on a task.”  “.... happened to be international students, leading to difficulties communicating due to English incompetence”   5.1.3. Customer related ",issues  ,Collaborating with customers and product owners was reported as challenging by several students in 10 teams (56%) due to limited availability of client due to busy ,"know how much progress they've made on a task.”  “.... happened to be international students, leading to difficulties communicating due to English incompetence”   5.1.3. Customer related issues  Collaborating with customers and product owners was reported as challenging by several students in 10 teams (56%) due to limited availability of client due to busy ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"boxing them, setting up a time suiting everyone in the team, less number of people showing up on time, etc. Additionally, teams faced some technical ",issues (,e.g. sometimes messages were lost in the channel or poor voice quality when video chatting). The strategy that was most commonly reported to ,"boxing them, setting up a time suiting everyone in the team, less number of people showing up on time, etc. Additionally, teams faced some technical issues (e.g. sometimes messages were lost in the channel or poor voice quality when video chatting). The strategy that was most commonly reported to ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,quality (+ ) easy approach to customer  Negatives (-) (-) scheduling common time  (-) confusion in remote pair programming sessions sometimes  (-) difficulties communicating with customer during sprints due to technical ,issues (-) ,"Emailed tasks not accepted well by team  Customer communication Customer related issues      5.2.2. Scrum board  All the teams opted to use online tools (Trello, Jira, ","quality (+ ) easy approach to customer  Negatives (-) (-) scheduling common time  (-) confusion in remote pair programming sessions sometimes  (-) difficulties communicating with customer during sprints due to technical issues (-) Emailed tasks not accepted well by team  Customer communication Customer related issues      5.2.2. Scrum board  All the teams opted to use online tools (Trello, Jira, ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,did not prove beneficial at all times and email was reported as challenging for the teams (e.g. missing details). There were instances when technical ,issues ,led to difficulties hearing and responding to the customer or to each other leading to confusions. Another constraint reported though occasionally was that the ,did not prove beneficial at all times and email was reported as challenging for the teams (e.g. missing details). There were instances when technical issues led to difficulties hearing and responding to the customer or to each other leading to confusions. Another constraint reported though occasionally was that the ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"communicating with each other [reported by three teams (16%) T3, T8, T18]. One team T4 specified that working remotely on separate devices led to similar communication ",issues. ,"Less visibility for peer progress was identified as a limitation by another team T2. Overall, communication seemed challenging for the teams. Some quotes from ","communicating with each other [reported by three teams (16%) T3, T8, T18]. One team T4 specified that working remotely on separate devices led to similar communication issues. Less visibility for peer progress was identified as a limitation by another team T2. Overall, communication seemed challenging for the teams. Some quotes from ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"functionality  Scrum master (SM)  Product owners (PO)  Constraints  Schedule, team communication, personal  Schedule, team communication  Schedule  Team communication  Schedule Technical  Schedule, team communication  Customer related ",issues  ,"Main adaptations  Reduced frequency  Using virtual tools, including bots  Digital scrum board  Variable/short sprint length  Working 1–2 days per week in collocated sessions  Combining /","functionality  Scrum master (SM)  Product owners (PO)  Constraints  Schedule, team communication, personal  Schedule, team communication  Schedule  Team communication  Schedule Technical  Schedule, team communication  Customer related issues  Main adaptations  Reduced frequency  Using virtual tools, including bots  Digital scrum board  Variable/short sprint length  Working 1–2 days per week in collocated sessions  Combining /",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"video-conferencing solution (e.g. Skype, Zoom). However, sometimes the teams were unable to demonstrate their weekly progress to the industry partner due to technical ",issues.   5.2.7. ,"Retrospective  Generally, retrospectives are run after each sprint to suggest process improvements for the following sprint, but many teams reported holding it before the ","video-conferencing solution (e.g. Skype, Zoom). However, sometimes the teams were unable to demonstrate their weekly progress to the industry partner due to technical issues.   5.2.7. Retrospective  Generally, retrospectives are run after each sprint to suggest process improvements for the following sprint, but many teams reported holding it before the ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,pair programming sessions sometimes  (-) difficulties communicating with customer during sprints due to technical issues (-) Emailed tasks not accepted well by team  Customer communication Customer related ,issues      5.2.2. ,"Scrum board  All the teams opted to use online tools (Trello, Jira, GitHub using ZenHub) as scrum boards which could be accessed remotely at ","pair programming sessions sometimes  (-) difficulties communicating with customer during sprints due to technical issues (-) Emailed tasks not accepted well by team  Customer communication Customer related issues      5.2.2. Scrum board  All the teams opted to use online tools (Trello, Jira, GitHub using ZenHub) as scrum boards which could be accessed remotely at ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"long study break, and ‘Systems Week’ – a week-long project [required for all 4th year students] which prevented students from doing other coursework.”   5.1.2. Team communication ",issue  ,"Teams faced difficulties while communicating with each other [reported by three teams (16%) T3, T8, T18]. One team T4 specified that working remotely on separate ","long study break, and ‘Systems Week’ – a week-long project [required for all 4th year students] which prevented students from doing other coursework.”   5.1.2. Team communication issue  Teams faced difficulties while communicating with each other [reported by three teams (16%) T3, T8, T18]. One team T4 specified that working remotely on separate ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"very occasionally, and some had dedicated time slots every week for this. A few teams performed them remotely through Skype screen sharing since it was",difficult,"to arrange a common time suiting all team members. It was seen that usually the same people, and often friends, would pair up due","very occasionally, and some had dedicated time slots every week for this. A few teams performed them remotely through Skype screen sharing since it wasdifficultto arrange a common time suiting all team members. It was seen that usually the same people, and often friends, would pair up due",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"university contexts. This study describes the constraints the students faced while applying agile practices in a university course taught at the University of Auckland, including",difficulty,"in setting up common time for all team members to work together, limited availability of customer due to busy schedule and the modifications the","university contexts. This study describes the constraints the students faced while applying agile practices in a university course taught at the University of Auckland, includingdifficultyin setting up common time for all team members to work together, limited availability of customer due to busy schedule and the modifications the",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"both years were: 5.1.1. Schedules constraints Some of the constraints related to schedules. For example, several students from 12 teams (80%) [T1-T3, T9-T14, T16T18] reported",difficulty,in setting up a common time for all team members to work together. Often this was because of their varying and clashing university lecture,"both years were: 5.1.1. Schedules constraints Some of the constraints related to schedules. For example, several students from 12 teams (80%) [T1-T3, T9-T14, T16T18] reporteddifficultyin setting up a common time for all team members to work together. Often this was because of their varying and clashing university lecture",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"practicing agile in their projects. The top five constraints chosen by the students in 2017 are the unavailability of some team members during planned project time [67%],",difficulty,"in setting up common time for all team members to work together [67%], conflicting due dates of deliverables in other courses like assignments, tests and","practicing agile in their projects. The top five constraints chosen by the students in 2017 are the unavailability of some team members during planned project time [67%],difficultyin setting up common time for all team members to work together [67%], conflicting due dates of deliverables in other courses like assignments, tests and",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"webcam when done virtually. 5.4. Relationship between constraints and adaptations and outcomes Applying agile to university projects exhibits constraints such as balancing workload with other courses,",difficulty,"in setting up a common time to work together, conflicting due dates of deliverables in other courses, and limited dedication of team members due","webcam when done virtually. 5.4. Relationship between constraints and adaptations and outcomes Applying agile to university projects exhibits constraints such as balancing workload with other courses,difficultyin setting up a common time to work together, conflicting due dates of deliverables in other courses, and limited dedication of team members due",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"learning agile is best done through practical hands-on projects. Yet, university projects cannot fully replicate real-world scenarios. Students face many constraints such as",difficulty,"in setting up common time for all team members to work together, unavailability of some team members during planned project time, limited availability of","learning agile is best done through practical hands-on projects. Yet, university projects cannot fully replicate real-world scenarios. Students face many constraints such asdifficultyin setting up common time for all team members to work together, unavailability of some team members during planned project time, limited availability of",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"estimation due to unclear scope was reported by 9 teams (50%) [T4, T9-T13, T15-T17]. Similarly two teams specified difference in technical skill level [T8] and",difficulty,"in setting a development pace for the team members [T5] as some of the technical constraints faced by the teams. For example, one student","estimation due to unclear scope was reported by 9 teams (50%) [T4, T9-T13, T15-T17]. Similarly two teams specified difference in technical skill level [T8] anddifficultyin setting a development pace for the team members [T5] as some of the technical constraints faced by the teams. For example, one student",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"members. For example, one member of team T10 stated: “Some team members had commitments outside of University, such as work or club activities.” 5.1.6. Technical constraints",Difficulty,"in estimation due to unclear scope was reported by 9 teams (50%) [T4, T9-T13, T15-T17]. Similarly two teams specified difference in technical skill level [","members. For example, one member of team T10 stated: “Some team members had commitments outside of University, such as work or club activities.” 5.1.6. Technical constraintsDifficultyin estimation due to unclear scope was reported by 9 teams (50%) [T4, T9-T13, T15-T17]. Similarly two teams specified difference in technical skill level [",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"schedule and business commitments [T2, T9-T13, T15-T18], unavailability of customer during planned meeting time was brought up by 5 teams (28%) [T1, T2, T15-T17],",difficulty,"in finding meeting time suiting the product owner/customer and students was reported by a majority of the students in 8 teams (44%) [T2, T9, T12","schedule and business commitments [T2, T9-T13, T15-T18], unavailability of customer during planned meeting time was brought up by 5 teams (28%) [T1, T2, T15-T17],difficultyin finding meeting time suiting the product owner/customer and students was reported by a majority of the students in 8 teams (44%) [T2, T9, T12",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"meeting time suiting the product owner/customer and students was reported by a majority of the students in 8 teams (44%) [T2, T9, T12T14, T16-T18],",difficulty,"in prioritizing due to unrealistic customer demands was noted by 3 teams [T12-T13, T17] and distant location of product owner was highlighted by one","meeting time suiting the product owner/customer and students was reported by a majority of the students in 8 teams (44%) [T2, T9, T12T14, T16-T18],difficultyin prioritizing due to unrealistic customer demands was noted by 3 teams [T12-T13, T17] and distant location of product owner was highlighted by one",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"transparency between each team member, and didn't know how much progress they've made on a task.” “.... happened to be international students, leading to",difficulties,communicating due to English incompetence” 5.1.3. Customer related issues Collaborating with customers and product owners was reported as challenging by several students in 10 teams (56%) due,"transparency between each team member, and didn't know how much progress they've made on a task.” “.... happened to be international students, leading todifficultiescommunicating due to English incompetence” 5.1.3. Customer related issues Collaborating with customers and product owners was reported as challenging by several students in 10 teams (56%) due",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,screen sharing (+ ) combined with code review for improved code quality (+ ) easy approach to customer Negatives (-) (-) scheduling common time (-) confusion in remote pair programming sessions sometimes (-),difficulties,communicating with customer during sprints due to technical issues (-) Emailed tasks not accepted well by team Customer communication Customer related issues 5.2.2. Scrum board All,screen sharing (+ ) combined with code review for improved code quality (+ ) easy approach to customer Negatives (-) (-) scheduling common time (-) confusion in remote pair programming sessions sometimes (-)difficultiescommunicating with customer during sprints due to technical issues (-) Emailed tasks not accepted well by team Customer communication Customer related issues 5.2.2. Scrum board All,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"T12-T13, T17] and distant location of product owner was highlighted by one of the teams [T7] . Some quotes from the students that demonstrate these",difficulties,are: “The industry client we [T9] were working with had commitments he needed to keep at his full-time job.” “We struggled as a,"T12-T13, T17] and distant location of product owner was highlighted by one of the teams [T7] . Some quotes from the students that demonstrate thesedifficultiesare: “The industry client we [T9] were working with had commitments he needed to keep at his full-time job.” “We struggled as a",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"progress was identified as a limitation by another team T2. Overall, communication seemed challenging for the teams. Some quotes from the students that reported these",difficulties,"are: “... students who may lack the required communication skills for group projects.” “... lacked transparency between each team member, and didn't know how much","progress was identified as a limitation by another team T2. Overall, communication seemed challenging for the teams. Some quotes from the students that reported thesedifficultiesare: “... students who may lack the required communication skills for group projects.” “... lacked transparency between each team member, and didn't know how much",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"were more structured, expressive and useful for team communication. However, virtual stand-ups replaced physical stand-ups most of the time but some teams had",difficulties,"around time-boxing them, setting up a time suiting everyone in the team, less number of people showing up on time, etc. Additionally, teams","were more structured, expressive and useful for team communication. However, virtual stand-ups replaced physical stand-ups most of the time but some teams haddifficultiesaround time-boxing them, setting up a time suiting everyone in the team, less number of people showing up on time, etc. Additionally, teams",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,beneficial at all times and email was reported as challenging for the teams (e.g. missing details). There were instances when technical issues led to,difficulties,hearing and responding to the customer or to each other leading to confusions. Another constraint reported though occasionally was that the teams were unable,beneficial at all times and email was reported as challenging for the teams (e.g. missing details). There were instances when technical issues led todifficultieshearing and responding to the customer or to each other leading to confusions. Another constraint reported though occasionally was that the teams were unable,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,and ‘Systems Week’ – a week-long project [required for all 4th year students] which prevented students from doing other coursework.” 5.1.2. Team communication issue Teams faced,difficulties,"while communicating with each other [reported by three teams (16%) T3, T8, T18]. One team T4 specified that working remotely on separate devices led to","and ‘Systems Week’ – a week-long project [required for all 4th year students] which prevented students from doing other coursework.” 5.1.2. Team communication issue Teams faceddifficultieswhile communicating with each other [reported by three teams (16%) T3, T8, T18]. One team T4 specified that working remotely on separate devices led to",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,keeping the digital board up to date cumbersome.  Using online communication for meetings did not prove beneficial at all times and email was reported as ,challenging ,for the teams (e.g. missing details). There were instances when technical issues led to difficulties hearing and responding to the customer or to ,keeping the digital board up to date cumbersome.  Using online communication for meetings did not prove beneficial at all times and email was reported as challenging for the teams (e.g. missing details). There were instances when technical issues led to difficulties hearing and responding to the customer or to ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"on separate devices led to similar communication issues. Less visibility for peer progress was identified as a limitation by another team T2. Overall, communication seemed ",challenging ,for the teams. Some quotes from the students that reported these difficulties are:  “... students who may lack the required communication skills for group projects.”  “... ,"on separate devices led to similar communication issues. Less visibility for peer progress was identified as a limitation by another team T2. Overall, communication seemed challenging for the teams. Some quotes from the students that reported these difficulties are:  “... students who may lack the required communication skills for group projects.”  “... ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"agile practices during their courses through lectures, games, projects, workshops and more for effective theoretical and practical learning. Practicing agile in university contexts comes with ",challenges ,"for students and to counter these challenges, they perform some adaptations to standard agile practices making them effective and easier to use in university ","agile practices during their courses through lectures, games, projects, workshops and more for effective theoretical and practical learning. Practicing agile in university contexts comes with challenges for students and to counter these challenges, they perform some adaptations to standard agile practices making them effective and easier to use in university ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"it was perceived as team level constraint or practice.  Some of the survey questions included:  • Based on your experience in this course, what are the ",challenges ,of agile and Lean software development?  • Please rate your overall level of satisfaction with your customer on a scale of 1–10; where 1 is well below ,"it was perceived as team level constraint or practice.  Some of the survey questions included:  • Based on your experience in this course, what are the challenges of agile and Lean software development?  • Please rate your overall level of satisfaction with your customer on a scale of 1–10; where 1 is well below ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"experiences) and related research literature on various agile and lean topics. They produce an individual essay worth 25% on the given research topic, e.g. common ",challenges ,of practicing Agile and Lean software development (2016) and contextualizing Agile in the university context (2017).   4. Research methodology  The goal of this study is to investigate ,"experiences) and related research literature on various agile and lean topics. They produce an individual essay worth 25% on the given research topic, e.g. common challenges of practicing Agile and Lean software development (2016) and contextualizing Agile in the university context (2017).   4. Research methodology  The goal of this study is to investigate ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,from the industry partners to ensure the projects are suitable and provide the right level of scope to be completed during the course while still ,challenging ,"the student teams. In some cases, we will ask for additional details or ask for minor modifications to the proposed projects. Once this is ","from the industry partners to ensure the projects are suitable and provide the right level of scope to be completed during the course while still challenging the student teams. In some cases, we will ask for additional details or ask for minor modifications to the proposed projects. Once this is ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"asked to describe, in detail, the challenges they faced associated with applying agile practices in a university context, the adaptations they made due to these ","challenges, ","and how well those adaptations worked in their experience.  The data collected was saved and analysed in NVivo, a data analysis software, using open ","asked to describe, in detail, the challenges they faced associated with applying agile practices in a university context, the adaptations they made due to these challenges, and how well those adaptations worked in their experience.  The data collected was saved and analysed in NVivo, a data analysis software, using open ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"university context?  The essays were between 4 and 6 pages long and were submitted as PDFs. In these essays, students were asked to describe, in detail, the ",challenges ,"they faced associated with applying agile practices in a university context, the adaptations they made due to these challenges, and how well those adaptations ","university context?  The essays were between 4 and 6 pages long and were submitted as PDFs. In these essays, students were asked to describe, in detail, the challenges they faced associated with applying agile practices in a university context, the adaptations they made due to these challenges, and how well those adaptations ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"games, projects, workshops and more for effective theoretical and practical learning. Practicing agile in university contexts comes with challenges for students and to counter these ","challenges, ",they perform some adaptations to standard agile practices making them effective and easier to use in university contexts. This study describes the constraints the ,"games, projects, workshops and more for effective theoretical and practical learning. Practicing agile in university contexts comes with challenges for students and to counter these challenges, they perform some adaptations to standard agile practices making them effective and easier to use in university contexts. This study describes the constraints the ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"single sprint was too short for the new scrum master to understand and gain confidence in the role,  • passive or introverted team members found it ",challenging ,"to lead the team,  • added communication confusion for the industry partners as they were not sure which person to contact.  Adaptations like using a ","single sprint was too short for the new scrum master to understand and gain confidence in the role,  • passive or introverted team members found it challenging to lead the team,  • added communication confusion for the industry partners as they were not sure which person to contact.  Adaptations like using a ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,projects [raised by 15 teams T4-T18]. This constraint is well captured by the following comment from one of the students in T9.  “It was extremely ,challenging ,to organize times for the entire team to meet for meetings and co-located development [sessions]. This was due to the team having different ,projects [raised by 15 teams T4-T18]. This constraint is well captured by the following comment from one of the students in T9.  “It was extremely challenging to organize times for the entire team to meet for meetings and co-located development [sessions]. This was due to the team having different ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,agile practices through team projects and indicates how university students contextualized some of the agile practices during their projects to meet the daily and weekly ,challenges. ,We collected data through 135 individual reflection surveys and analysis of 75 student essays. We discuss the adaptations students made to fit their needs and their ,agile practices through team projects and indicates how university students contextualized some of the agile practices during their projects to meet the daily and weekly challenges. We collected data through 135 individual reflection surveys and analysis of 75 student essays. We discuss the adaptations students made to fit their needs and their ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"happened to be international students, leading to difficulties communicating due to English incompetence”   5.1.3. Customer related issues  Collaborating with customers and product owners was reported as ",challenging ,"by several students in 10 teams (56%) due to limited availability of client due to busy schedule and business commitments [T2, T9-T13, T15-T18], unavailability ","happened to be international students, leading to difficulties communicating due to English incompetence”   5.1.3. Customer related issues  Collaborating with customers and product owners was reported as challenging by several students in 10 teams (56%) due to limited availability of client due to busy schedule and business commitments [T2, T9-T13, T15-T18], unavailability ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,within teams where every team member is open to take up any work irrespective of their skillset. Maintaining cross-functionality in a university context is ,challenging ,due to the limited project duration. One of the strategies followed by the teams was splitting teams into sub-teams (e.g. mobile and ,within teams where every team member is open to take up any work irrespective of their skillset. Maintaining cross-functionality in a university context is challenging due to the limited project duration. One of the strategies followed by the teams was splitting teams into sub-teams (e.g. mobile and ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"during the course (Muller and Tichy, 2001; Schneider and Vasa, 2006; Fenwick, 2003; Hanks, 2007; Scharf and Koch, 2013). Though teaching agile in a university context is acknowledged to be ",challenging (,"Kropp and Meier, 2013; Matthies et al., 2016; Lu and DeClue, 2011), it is also seen as useful due to numerous benefits, such as gaining agile experience (","during the course (Muller and Tichy, 2001; Schneider and Vasa, 2006; Fenwick, 2003; Hanks, 2007; Scharf and Koch, 2013). Though teaching agile in a university context is acknowledged to be challenging (Kropp and Meier, 2013; Matthies et al., 2016; Lu and DeClue, 2011), it is also seen as useful due to numerous benefits, such as gaining agile experience (",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,meetings  Negatives (-) (-) obstacles reporting delayed in bi-weekly DS  (-) missing emotional information and interaction cues (-) missing/delayed responses (-) texting fatigue (-) time box overruns  (-) updating a ,challenge (-) ,"too many updates led to messy boards  (-) reduced project velocity  (-) exhaustion, loss of focus (-) losing essence of each meeting practice (-) underestimated user stories in ","meetings  Negatives (-) (-) obstacles reporting delayed in bi-weekly DS  (-) missing emotional information and interaction cues (-) missing/delayed responses (-) texting fatigue (-) time box overruns  (-) updating a challenge (-) too many updates led to messy boards  (-) reduced project velocity  (-) exhaustion, loss of focus (-) losing essence of each meeting practice (-) underestimated user stories in ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,the end (+ ) having overseer with SM worked faster and efficiently  (+ ) short (2 minute) updates appreciated by PO over full SPM sprint planning meetings (+ ) combined meetings  Negatives (-) (-) ,obstacles ,reporting delayed in bi-weekly DS  (-) missing emotional information and interaction cues (-) missing/delayed responses (-) texting fatigue (-) time box overruns  (-) updating a challenge (-) too ,the end (+ ) having overseer with SM worked faster and efficiently  (+ ) short (2 minute) updates appreciated by PO over full SPM sprint planning meetings (+ ) combined meetings  Negatives (-) (-) obstacles reporting delayed in bi-weekly DS  (-) missing emotional information and interaction cues (-) missing/delayed responses (-) texting fatigue (-) time box overruns  (-) updating a challenge (-) too ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"had something useful and new to report at each standup. Similarly, another team started off with a rotating scrum master, but they found it was ",hard ,to keep track of who was in charge for the current sprint for both the customer and the team. They also reported that often ,"had something useful and new to report at each standup. Similarly, another team started off with a rotating scrum master, but they found it was hard to keep track of who was in charge for the current sprint for both the customer and the team. They also reported that often ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,but most were seen to work well in university contexts.  The research questions driving this study are listed below:  RQ1: What are the most common ,constraints ,faced by students while practicing agile in a university course? RQ2: Which agile practices do students choose to follow and how were those practices ,but most were seen to work well in university contexts.  The research questions driving this study are listed below:  RQ1: What are the most common constraints faced by students while practicing agile in a university course? RQ2: Which agile practices do students choose to follow and how were those practices ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"teams used continuous integration while only one team, T2, applied work in progress (WIP) limit concept from Kanban.   5. Findings  In this section, we describe the ",constraints ,"faced by students in practicing agile methods in a university context, the adaptations made to work around the constraints, and their perceived effectiveness.  Table 1 ","teams used continuous integration while only one team, T2, applied work in progress (WIP) limit concept from Kanban.   5. Findings  In this section, we describe the constraints faced by students in practicing agile methods in a university context, the adaptations made to work around the constraints, and their perceived effectiveness.  Table 1 ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"students, staff and the customers. On the other hand, it brings some constraints that hinder the students from following these practices by the book.  The ",constraints ,faced by the students during the course project of SoftEng761 were collected through an open-ended survey question from the students in the 2016 course. ,"students, staff and the customers. On the other hand, it brings some constraints that hinder the students from following these practices by the book.  The constraints faced by the students during the course project of SoftEng761 were collected through an open-ended survey question from the students in the 2016 course. ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,teams specified difference in technical skill level [T8] and difficulty in setting a  development pace for the team members [T5] as some of the technical ,constraints ,"faced by the teams. For example, one student noted that:  “... at university, the technically competency and programming skills of students vary. Some students are ","teams specified difference in technical skill level [T8] and difficulty in setting a  development pace for the team members [T5] as some of the technical constraints faced by the teams. For example, one student noted that:  “... at university, the technically competency and programming skills of students vary. Some students are ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"course structure and description, Section IV summarises the research methodology used in this study, section V presents the findings of this research throwing insights into ",constraints ,"faced by university students while implementing agile practices during projects, the modifications to the agile practices made in a university context followed by their ","course structure and description, Section IV summarises the research methodology used in this study, section V presents the findings of this research throwing insights into constraints faced by university students while implementing agile practices during projects, the modifications to the agile practices made in a university context followed by their ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"in the university involves constraints that directly influence the practices followed and require adaptations to fit the university context. In this study, we present the ",constraints ,faced and adaptations made by university students working on a project within the course using agile and lean practices at the University of Auckland. ,"in the university involves constraints that directly influence the practices followed and require adaptations to fit the university context. In this study, we present the constraints faced and adaptations made by university students working on a project within the course using agile and lean practices at the University of Auckland. ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,though occasionally was that the teams were unable to demonstrate work to the customer due to limitations of the webcam when done virtually.   5.4. Relationship between ,constraints ,"and adaptations and outcomes  Applying agile to university projects exhibits constraints such as balancing workload with other courses, difficulty in setting up a common ","though occasionally was that the teams were unable to demonstrate work to the customer due to limitations of the webcam when done virtually.   5.4. Relationship between constraints and adaptations and outcomes  Applying agile to university projects exhibits constraints such as balancing workload with other courses, difficulty in setting up a common ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"analysis software, using open coding and constant comparison procedures of Grounded Theory data analysis (Glaser, 1992; Hoda et al., 2012). During the analysis process, categories such as ",constraints ,and adaptations emerged from the coding and constant comparison enabling the researchers to identify the common patterns and dissimilarities.  Table 1 lists all the agile ,"analysis software, using open coding and constant comparison procedures of Grounded Theory data analysis (Glaser, 1992; Hoda et al., 2012). During the analysis process, categories such as constraints and adaptations emerged from the coding and constant comparison enabling the researchers to identify the common patterns and dissimilarities.  Table 1 lists all the agile ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,adaptations helped the students to overcome the hurdles they faced while some were not as effective as others. In addition to the presenting the common ,constraints ,"and adaptations, we also provide a list of recommendations for both students and educators of future course teaching agile software development practices for effectively ","adaptations helped the students to overcome the hurdles they faced while some were not as effective as others. In addition to the presenting the common constraints and adaptations, we also provide a list of recommendations for both students and educators of future course teaching agile software development practices for effectively ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"In this section, we describe the constraints faced by students in practicing agile methods in a university context, the adaptations made to work around the ","constraints, ","and their perceived effectiveness.  Table 1 Agile practices used by the student teams in SoftEng761 (SB: scrum board, DS: daily stand-up, SA: self-assignment, ","In this section, we describe the constraints faced by students in practicing agile methods in a university context, the adaptations made to work around the constraints, and their perceived effectiveness.  Table 1 Agile practices used by the student teams in SoftEng761 (SB: scrum board, DS: daily stand-up, SA: self-assignment, ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"counter these challenges, they perform some adaptations to standard agile practices making them effective and easier to use in university contexts. This study describes the ",constraints ,"the students faced while applying agile practices in a university course taught at the University of Auckland, including difficulty in setting up common time ","counter these challenges, they perform some adaptations to standard agile practices making them effective and easier to use in university contexts. This study describes the constraints the students faced while applying agile practices in a university course taught at the University of Auckland, including difficulty in setting up common time ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,the technically competency and programming skills of students vary. Some students are more proficient at coding than others.”  To better understand the frequency of these ,"constraints, ",the students in 2017 were given these constraints as a closed list to select the ones they faced while practicing agile in their projects. The ,"the technically competency and programming skills of students vary. Some students are more proficient at coding than others.”  To better understand the frequency of these constraints, the students in 2017 were given these constraints as a closed list to select the ones they faced while practicing agile in their projects. The ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,limited availability of customer due to busy schedule. This article reports how students tailor standard agile practices to suit the university context and mitigate these ,constraints. ,"The most common adaptations were daily stand-ups with reduced frequency, combining and sequencing sprint meetings, and rotating scrum master from team. We found ","limited availability of customer due to busy schedule. This article reports how students tailor standard agile practices to suit the university context and mitigate these constraints. The most common adaptations were daily stand-ups with reduced frequency, combining and sequencing sprint meetings, and rotating scrum master from team. We found ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,to the customer due to limitations of the webcam when done virtually.   5.4. Relationship between constraints and adaptations and outcomes  Applying agile to university projects exhibits ,constraints ,"such as balancing workload with other courses, difficulty in setting up a common time to work together, conflicting due dates of deliverables in other ","to the customer due to limitations of the webcam when done virtually.   5.4. Relationship between constraints and adaptations and outcomes  Applying agile to university projects exhibits constraints such as balancing workload with other courses, difficulty in setting up a common time to work together, conflicting due dates of deliverables in other ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,using a digital scrum board and having a variable sprint length were perceived as valuable as they helped the teams overcome some of the university ,constraints ,"such as differences in  student schedules. Digital scrum board such as Trello, Jira, Visual Studio Team Services (VSTS) was adopted by all the teams ","using a digital scrum board and having a variable sprint length were perceived as valuable as they helped the teams overcome some of the university constraints such as differences in  student schedules. Digital scrum board such as Trello, Jira, Visual Studio Team Services (VSTS) was adopted by all the teams ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"been acknowledged that learning agile is best done through practical hands-on projects. Yet, university projects cannot fully replicate real-world scenarios. Students face many ",constraints ,"such as difficulty in setting up common time for all team members to work together, unavailability of some team members during planned project time, ","been acknowledged that learning agile is best done through practical hands-on projects. Yet, university projects cannot fully replicate real-world scenarios. Students face many constraints such as difficulty in setting up common time for all team members to work together, unavailability of some team members during planned project time, ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"the 2017 students to write in additional constraints they faced. However, the write-in responses from the 2017 students did not result in any new categories. The ",constraints ,"identified by the students in both years were:   5.1.1. Schedules constraints  Some of the constraints related to schedules. For example, several students from 12 teams (80%) [T1-","the 2017 students to write in additional constraints they faced. However, the write-in responses from the 2017 students did not result in any new categories. The constraints identified by the students in both years were:   5.1.1. Schedules constraints  Some of the constraints related to schedules. For example, several students from 12 teams (80%) [T1-",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"the course project of SoftEng761 were collected through an open-ended survey question from the students in the 2016 course. In 2017, we provided the list of ",constraints ,identified in 2016 and asked the students to select each constraint they faced on their project. There was also an option for the 2017 students to ,"the course project of SoftEng761 were collected through an open-ended survey question from the students in the 2016 course. In 2017, we provided the list of constraints identified in 2016 and asked the students to select each constraint they faced on their project. There was also an option for the 2017 students to ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,sheets. These individual surveys were used to map data to team level results. If a majority of the team members (> = 75%) selected individual responses such as ,constraint ,"or a practice followed, then it was perceived as team level constraint or practice.  Some of the survey questions included:  • Based on your experience ","sheets. These individual surveys were used to map data to team level results. If a majority of the team members (> = 75%) selected individual responses such as constraint or a practice followed, then it was perceived as team level constraint or practice.  Some of the survey questions included:  • Based on your experience ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"results. If a majority of the team members (> = 75%) selected individual responses such as constraint or a practice followed, then it was perceived as team level ",constraint ,"or practice.  Some of the survey questions included:  • Based on your experience in this course, what are the challenges of agile and Lean software ","results. If a majority of the team members (> = 75%) selected individual responses such as constraint or a practice followed, then it was perceived as team level constraint or practice.  Some of the survey questions included:  • Based on your experience in this course, what are the challenges of agile and Lean software ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"to find a time we could coordinate with the product owner to meet for sprint planning, retrospectives and reviews.”   5.1.4. Lack of dedication Some of the ",constraints ,"related to dedication of team members. For ex ample, limited dedication of team members due to other courses, or otherwise was reported by half ","to find a time we could coordinate with the product owner to meet for sprint planning, retrospectives and reviews.”   5.1.4. Lack of dedication Some of the constraints related to dedication of team members. For ex ample, limited dedication of team members due to other courses, or otherwise was reported by half ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,from the 2017 students did not result in any new categories. The constraints identified by the students in both years were:   5.1.1. Schedules constraints  Some of the ,constraints ,"related to schedules. For example, several students from 12 teams (80%) [T1-T3, T9-T14, T16T18] reported difficulty in setting up a common time for ","from the 2017 students did not result in any new categories. The constraints identified by the students in both years were:   5.1.1. Schedules constraints  Some of the constraints related to schedules. For example, several students from 12 teams (80%) [T1-T3, T9-T14, T16T18] reported difficulty in setting up a common time for ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"prospects (Hanks, 2007). It nurtures software development experience for students and helps them embrace agile practices on real projects (Hanks, 2007).  Teaching agile in the university involves ",constraints ,"that directly influence the practices followed and require adaptations to fit the university context. In this study, we present the constraints faced and adaptations ","prospects (Hanks, 2007). It nurtures software development experience for students and helps them embrace agile practices on real projects (Hanks, 2007).  Teaching agile in the university involves constraints that directly influence the practices followed and require adaptations to fit the university context. In this study, we present the constraints faced and adaptations ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"important way of learning and involves collaboration, communication, dedication and motivation of the students, staff and the customers. On the other hand, it brings some ",constraints ,that hinder the students from following these practices by the book.  The constraints faced by the students during the course project of SoftEng761 were ,"important way of learning and involves collaboration, communication, dedication and motivation of the students, staff and the customers. On the other hand, it brings some constraints that hinder the students from following these practices by the book.  The constraints faced by the students during the course project of SoftEng761 were ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"ended survey question from the students in the 2016 course. In 2017, we provided the list of constraints identified in 2016 and asked the students to select each ",constraint ,"they faced on their project. There was also an option for the 2017 students to write in additional constraints they faced. However, the write-in ","ended survey question from the students in the 2016 course. In 2017, we provided the list of constraints identified in 2016 and asked the students to select each constraint they faced on their project. There was also an option for the 2017 students to write in additional constraints they faced. However, the write-in ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,and asked the students to select each constraint they faced on their project. There was also an option for the 2017 students to write in additional ,constraints ,"they faced. However, the write-in responses from the 2017 students did not result in any new categories. The constraints identified by the students in ","and asked the students to select each constraint they faced on their project. There was also an option for the 2017 students to write in additional constraints they faced. However, the write-in responses from the 2017 students did not result in any new categories. The constraints identified by the students in ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"g. Chatbot, Slackbot) which were configured to collect statuses from individuals through private messages at a pre-set time and triggered reminders through notifications.    Table 2  ","Constraints, ",agile adaptations and their perceived effectiveness.  Standard practices  Daily stand-ups (DS)  Scrum board  Sprint length  Sprint meetings  Retrospective Cross-functionality  Scrum master (SM)  ,"g. Chatbot, Slackbot) which were configured to collect statuses from individuals through private messages at a pre-set time and triggered reminders through notifications.    Table 2  Constraints, agile adaptations and their perceived effectiveness.  Standard practices  Daily stand-ups (DS)  Scrum board  Sprint length  Sprint meetings  Retrospective Cross-functionality  Scrum master (SM)  ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"students vary. Some students are more proficient at coding than others.”  To better understand the frequency of these constraints, the students in 2017 were given these ",constraints ,as a closed list to select the ones they faced while practicing agile in their projects. The top five constraints chosen by the students ,"students vary. Some students are more proficient at coding than others.”  To better understand the frequency of these constraints, the students in 2017 were given these constraints as a closed list to select the ones they faced while practicing agile in their projects. The top five constraints chosen by the students ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,up on time or even turned up to the group chat without any prior notice.”   5.1.5. Personal commitments  Personal commitments outside university was reported as a ,constraint ,"by 11 teams (61%) [T3, T5-T6, T9-T14, T17T18]. These commitments were mainly related to professional activities of working team members. For example, one ","up on time or even turned up to the group chat without any prior notice.”   5.1.5. Personal commitments  Personal commitments outside university was reported as a constraint by 11 teams (61%) [T3, T5-T6, T9-T14, T17T18]. These commitments were mainly related to professional activities of working team members. For example, one ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,students in 2017 were given these constraints as a closed list to select the ones they faced while practicing agile in their projects. The top five ,constraints ,"chosen by the students in 2017 are the unavailability of some team members during planned project time [67%], difficulty in setting up common time for all ","students in 2017 were given these constraints as a closed list to select the ones they faced while practicing agile in their projects. The top five constraints chosen by the students in 2017 are the unavailability of some team members during planned project time [67%], difficulty in setting up common time for all ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"team members. For example, one member of team T10 stated:  “Some team members had commitments outside of University, such as work or club activities.”   5.1.6. Technical ",constraints  ,"Difficulty in estimation due to unclear scope was reported by 9 teams (50%) [T4, T9-T13, T15-T17]. Similarly two teams specified difference in technical skill ","team members. For example, one member of team T10 stated:  “Some team members had commitments outside of University, such as work or club activities.”   5.1.6. Technical constraints  Difficulty in estimation due to unclear scope was reported by 9 teams (50%) [T4, T9-T13, T15-T17]. Similarly two teams specified difference in technical skill ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"product owner, Est: estimation, PP: pair programming, Ref: refactoring, CCO: collective code ownership, CI: continuous integration, WIP: work-in-progress limit, DoD: definition of done).  5.1. ",Constraints  ,"Implementing agile practices in a university course is an important way of learning and involves collaboration, communication, dedication and motivation of the students, staff ","product owner, Est: estimation, PP: pair programming, Ref: refactoring, CCO: collective code ownership, CI: continuous integration, WIP: work-in-progress limit, DoD: definition of done).  5.1. Constraints  Implementing agile practices in a university course is an important way of learning and involves collaboration, communication, dedication and motivation of the students, staff ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,in Table 2 earlier).   6. Discussion  Applying agile practices to university contexts is not a straightforward process and requires modifications to standard ways to work around the ,constraints ,imposed by university settings. A good number of agile practices were adapted to suit university settings; but not all were found effective to students ,in Table 2 earlier).   6. Discussion  Applying agile practices to university contexts is not a straightforward process and requires modifications to standard ways to work around the constraints imposed by university settings. A good number of agile practices were adapted to suit university settings; but not all were found effective to students ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"all teams T1-T18] and conflicting due dates of deliverables in other courses such as assignments, tests and projects [raised by 15 teams T4-T18]. This ",constraint ,is well captured by the following comment from one of the students in T9.  “It was extremely challenging to organize times for the entire ,"all teams T1-T18] and conflicting due dates of deliverables in other courses such as assignments, tests and projects [raised by 15 teams T4-T18]. This constraint is well captured by the following comment from one of the students in T9.  “It was extremely challenging to organize times for the entire ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,missing details). There were instances when technical issues led to difficulties hearing and responding to the customer or to each other leading to confusions. Another ,constraint ,reported though occasionally was that the teams were unable to demonstrate work to the customer due to limitations of the webcam when done virtually.   5.4. ,missing details). There were instances when technical issues led to difficulties hearing and responding to the customer or to each other leading to confusions. Another constraint reported though occasionally was that the teams were unable to demonstrate work to the customer due to limitations of the webcam when done virtually.   5.4. ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,and their perceived effectiveness.  Standard practices  Daily stand-ups (DS)  Scrum board  Sprint length  Sprint meetings  Retrospective Cross-functionality  Scrum master (SM)  Product owners (PO)  ,Constraints  ,"Schedule, team communication, personal  Schedule, team communication  Schedule  Team communication  Schedule Technical  Schedule, team communication  Customer related issues  Main adaptations  Reduced frequency  Using virtual ","and their perceived effectiveness.  Standard practices  Daily stand-ups (DS)  Scrum board  Sprint length  Sprint meetings  Retrospective Cross-functionality  Scrum master (SM)  Product owners (PO)  Constraints  Schedule, team communication, personal  Schedule, team communication  Schedule  Team communication  Schedule Technical  Schedule, team communication  Customer related issues  Main adaptations  Reduced frequency  Using virtual ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,the write-in responses from the 2017 students did not result in any new categories. The constraints identified by the students in both years were:   5.1.1. Schedules ,constraints  ,"Some of the constraints related to schedules. For example, several students from 12 teams (80%) [T1-T3, T9-T14, T16T18] reported difficulty in setting up ","the write-in responses from the 2017 students did not result in any new categories. The constraints identified by the students in both years were:   5.1.1. Schedules constraints  Some of the constraints related to schedules. For example, several students from 12 teams (80%) [T1-T3, T9-T14, T16T18] reported difficulty in setting up ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,real-world project of 8 weeks to achieve project outcomes. Our data collection occurred through student surveys and analysis of student essays. The study identifies the ,constraints ,students faced and reports resulting deviations from standard ways to apply and follow agile methods in university settings. Not all adaptations proved useful to ,real-world project of 8 weeks to achieve project outcomes. Our data collection occurred through student surveys and analysis of student essays. The study identifies the constraints students faced and reports resulting deviations from standard ways to apply and follow agile methods in university settings. Not all adaptations proved useful to ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,on work (-) reduced velocity due to private reconciliations of (two) PO disagreements  (-) attrition over time (-) messy log (-) untimely reminders (-) notifications disabled Standard practices  Pair programming  ,Constraints  ,"Technical, schedule  Main adaptations  Remote pair programming  Online communication  Perceived effectiveness Positives (+ )  (+ ) knowledge transfer (+ ) collaborative learning (+ ) remote pair programming worked via screen sharing (+ ) combined ","on work (-) reduced velocity due to private reconciliations of (two) PO disagreements  (-) attrition over time (-) messy log (-) untimely reminders (-) notifications disabled Standard practices  Pair programming  Constraints  Technical, schedule  Main adaptations  Remote pair programming  Online communication  Perceived effectiveness Positives (+ )  (+ ) knowledge transfer (+ ) collaborative learning (+ ) remote pair programming worked via screen sharing (+ ) combined ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,be because Scrum practices generally involve the whole team and/or the customer. Since schedule conflicts and limited customer availability were some of the biggest ,"constraints, ",these collaborative Scrum practices were most affected and needed adaptations. Other reasons could be that XP practices may not require any drastic changes to ,"be because Scrum practices generally involve the whole team and/or the customer. Since schedule conflicts and limited customer availability were some of the biggest constraints, these collaborative Scrum practices were most affected and needed adaptations. Other reasons could be that XP practices may not require any drastic changes to ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"a lack of experience with XP practices, the teams might have felt it was risky to adapt them as doing so incorrectly could have a ",negative ,"impact on team performance and/or product quality. Future research should investigate this in greater depth.   6.2. Implications  Based on their experiences and lessons learned, ","a lack of experience with XP practices, the teams might have felt it was risky to adapt them as doing so incorrectly could have a negative impact on team performance and/or product quality. Future research should investigate this in greater depth.   6.2. Implications  Based on their experiences and lessons learned, ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"surveys and analysis of 75 student essays. We discuss the adaptations students made to fit their needs and their impact on practice, including both positive and ",negative. ,"Based on the lessons learned, recommendations are presented for educators and students interested in tailoring agile for a tertiary course. The remainder of the ","surveys and analysis of 75 student essays. We discuss the adaptations students made to fit their needs and their impact on practice, including both positive and negative. Based on the lessons learned, recommendations are presented for educators and students interested in tailoring agile for a tertiary course. The remainder of the ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"frequently, daily but virtually, physically once weekly accompanied with bi/tri-weekly virtually meetings, and only daily virtual meetings. These adaptations had both positive and ",negative ,"effects, some of which are shown in Fig. 2 (and also summarized in Table 2 earlier).   6. Discussion  Applying agile practices to university contexts is not a ","frequently, daily but virtually, physically once weekly accompanied with bi/tri-weekly virtually meetings, and only daily virtual meetings. These adaptations had both positive and negative effects, some of which are shown in Fig. 2 (and also summarized in Table 2 earlier).   6. Discussion  Applying agile practices to university contexts is not a ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,effectiveness of these adaptations as summarised in Table 2 and few elaborated below. It is evident from the results that the adaptations had both positive and ,negative ,"effects.  To address the problem of conflicting schedules and physically meeting each other every day, every team adapted daily stand-ups someway to fit ","effectiveness of these adaptations as summarised in Table 2 and few elaborated below. It is evident from the results that the adaptations had both positive and negative effects.  To address the problem of conflicting schedules and physically meeting each other every day, every team adapted daily stand-ups someway to fit ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,toward the end (+ ) having overseer with SM worked faster and efficiently  (+ ) short (2 minute) updates appreciated by PO over full SPM sprint planning meetings (+ ) combined meetings  ,Negatives (-) (-) ,obstacles reporting delayed in bi-weekly DS  (-) missing emotional information and interaction cues (-) missing/delayed responses (-) texting fatigue (-) time box overruns  (-) updating a challenge (-) ,toward the end (+ ) having overseer with SM worked faster and efficiently  (+ ) short (2 minute) updates appreciated by PO over full SPM sprint planning meetings (+ ) combined meetings  Negatives (-) (-) obstacles reporting delayed in bi-weekly DS  (-) missing emotional information and interaction cues (-) missing/delayed responses (-) texting fatigue (-) time box overruns  (-) updating a challenge (-) ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,effectiveness Positives (+ )  (+ ) knowledge transfer (+ ) collaborative learning (+ ) remote pair programming worked via screen sharing (+ ) combined with code review for improved code quality (+ ) easy approach to customer  ,Negatives (-) (-) ,scheduling common time  (-) confusion in remote pair programming sessions sometimes  (-) difficulties communicating with customer during sprints due to technical issues (-) Emailed tasks not accepted ,effectiveness Positives (+ )  (+ ) knowledge transfer (+ ) collaborative learning (+ ) remote pair programming worked via screen sharing (+ ) combined with code review for improved code quality (+ ) easy approach to customer  Negatives (-) (-) scheduling common time  (-) confusion in remote pair programming sessions sometimes  (-) difficulties communicating with customer during sprints due to technical issues (-) Emailed tasks not accepted ,2018
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"define learning as a holistic process of adaptation, in which involves the total integrated functions of people, such as thinking, feeling, perceiving and behaving for ",problem-,"solving, decision-making and creativity.  Nowadays, several methods to teach Scrum are presented, such as games [14], [15], simulators, virtual software [16], [17], video lessons, lectures, among others. ","define learning as a holistic process of adaptation, in which involves the total integrated functions of people, such as thinking, feeling, perceiving and behaving for problem-solving, decision-making and creativity.  Nowadays, several methods to teach Scrum are presented, such as games [14], [15], simulators, virtual software [16], [17], video lessons, lectures, among others. ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"memorized. For Prince and Felder [12] the teaching and learning process is based on a set of a variety of instructional methods, including question-based learning, ",problem-,"based learning, project-based learning, case-based teaching, discovery learning, and just-in-time teaching. Armstrong and Fukami [13] define learning as a holistic process ","memorized. For Prince and Felder [12] the teaching and learning process is based on a set of a variety of instructional methods, including question-based learning, problem-based learning, project-based learning, case-based teaching, discovery learning, and just-in-time teaching. Armstrong and Fukami [13] define learning as a holistic process ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"This learning process allows acquisition of new mental schemes, knowledge, skills, abilities, and among other, in which could be used to solve elementary or complex ","problems, ","making use of tools, simulators, mathematical equations, theories or analytical analyzes. Among the years, the learning process evolved in different ways. Felder and Silverman [11] ","This learning process allows acquisition of new mental schemes, knowledge, skills, abilities, and among other, in which could be used to solve elementary or complex problems, making use of tools, simulators, mathematical equations, theories or analytical analyzes. Among the years, the learning process evolved in different ways. Felder and Silverman [11] ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"students can be analyzed in this activity, i.e., Scrum master or leader team student, in order to manage the team, perform deadlines, fix construction ","problems, ","mitigate lower motivation of the team, or propose solutions for challenges. In order to evaluate specific topics of Scrum it is suggested to apply ","students can be analyzed in this activity, i.e., Scrum master or leader team student, in order to manage the team, perform deadlines, fix construction problems, mitigate lower motivation of the team, or propose solutions for challenges. In order to evaluate specific topics of Scrum it is suggested to apply ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"groups accepted each US requirement. In some cases, one group could accept US that required more effort than other teams, which did not represent a ",problem ,"since all teams were able to complete the full tasks.  During Sprints, each group started to build their respective US, with its progress being ","groups accepted each US requirement. In some cases, one group could accept US that required more effort than other teams, which did not represent a problem since all teams were able to complete the full tasks.  During Sprints, each group started to build their respective US, with its progress being ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,a process-centric development to a feature-driven and iterative one; 4) The existence of suitable technologies and tools. Scharff et al. [6] show that most development ,issues ,"are related to the different developing pace and the distance between stakeholders and culture. Still, Agile methodologies are being accepted among traditional organizations, most ","a process-centric development to a feature-driven and iterative one; 4) The existence of suitable technologies and tools. Scharff et al. [6] show that most development issues are related to the different developing pace and the distance between stakeholders and culture. Still, Agile methodologies are being accepted among traditional organizations, most ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,it is a challenging methodology to carry out since it tends to suffer resistance from all organizational levels [4]. Nerus et al. [5] indicate that four key ,issues ,"tend to encumber the migration to Agile Development: 1) Management and organizational culture, style and rewards system; 2) Employees team relationship and technical competence; 3) The change ","it is a challenging methodology to carry out since it tends to suffer resistance from all organizational levels [4]. Nerus et al. [5] indicate that four key issues tend to encumber the migration to Agile Development: 1) Management and organizational culture, style and rewards system; 2) Employees team relationship and technical competence; 3) The change ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"or leader team student, in order to manage the team, perform deadlines, fix construction problems, mitigate lower motivation of the team, or propose solutions for ",challenges. ,"In order to evaluate specific topics of Scrum it is suggested to apply tests to students using Scrum Certification exams, and not only evaluate ","or leader team student, in order to manage the team, perform deadlines, fix construction problems, mitigate lower motivation of the team, or propose solutions for challenges. In order to evaluate specific topics of Scrum it is suggested to apply tests to students using Scrum Certification exams, and not only evaluate ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"the possibility of selecting more than one option, the sum of values can be greater than 100%.  The variety of elements in Scrum can represent a ",challenge ,"for students. In questions 7 and 8, we evaluated which Scrum tools the students knew before participating. Students were able to choose more than one answer, ","the possibility of selecting more than one option, the sum of values can be greater than 100%.  The variety of elements in Scrum can represent a challenge for students. In questions 7 and 8, we evaluated which Scrum tools the students knew before participating. Students were able to choose more than one answer, ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"students were invited as well, to allow the understanding of the learning process in different knowledge levels.  After an introduction to Scrum, we presented the ",challenge ,of building a city using Lego Blocks by using the methodology. The sequence of steps performed in this workshop is shown in Figure 4. The ,"students were invited as well, to allow the understanding of the learning process in different knowledge levels.  After an introduction to Scrum, we presented the challenge of building a city using Lego Blocks by using the methodology. The sequence of steps performed in this workshop is shown in Figure 4. The ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,students got to build all US and were motivated to use Scrum concepts in order to create the Lego blocks city. One of the teaching ,challenges ,was to make students understand the importance of updating the Kanban. It was necessary to warn students not to forget to update the status (,students got to build all US and were motivated to use Scrum concepts in order to create the Lego blocks city. One of the teaching challenges was to make students understand the importance of updating the Kanban. It was necessary to warn students not to forget to update the status (,2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"solutions [2]. The main Agile methodologies used today are Scrum and Extreme Programming (XP) [3].  Agile Development is accepted by most technology companies, nevertheless, it is a ",challenging ,methodology to carry out since it tends to suffer resistance from all organizational levels [4]. Nerus et al. [5] indicate that four key issues tend to ,"solutions [2]. The main Agile methodologies used today are Scrum and Extreme Programming (XP) [3].  Agile Development is accepted by most technology companies, nevertheless, it is a challenging methodology to carry out since it tends to suffer resistance from all organizational levels [4]. Nerus et al. [5] indicate that four key issues tend to ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"are being accepted among traditional organizations, most of them indicating a preference for maintaining both styles of development [7].  Nowadays, professionals must be prepared to face ",challenges ,"within companies. In undergraduate courses, Scrum and XP are widely used in classes and both approaches focus on meeting the student learning needs [8]. Teaching ","are being accepted among traditional organizations, most of them indicating a preference for maintaining both styles of development [7].  Nowadays, professionals must be prepared to face challenges within companies. In undergraduate courses, Scrum and XP are widely used in classes and both approaches focus on meeting the student learning needs [8]. Teaching ",2020
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"allowed them to enhance Scrum comprehension. The survey indicated that the course offered useful non-technical skills for students, such as encouraging Scrum internalization, faster ",problem-,"solving, and encouragement through checkpoint meetings. The findings also showed that the students were comfortable about teamwork, communication, and management problems. Some limitations could ","allowed them to enhance Scrum comprehension. The survey indicated that the course offered useful non-technical skills for students, such as encouraging Scrum internalization, faster problem-solving, and encouragement through checkpoint meetings. The findings also showed that the students were comfortable about teamwork, communication, and management problems. Some limitations could ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"the first time. Results have revealed that agile-coached teams outperformed nonagile-coached ones. Furthermore, coached students gained valuable insight into the internalization of Scrum, ",problem-,"solving, and guidance through checkpoint meetings [24]. Unlike this previous work, in the current research, we focus on measuring how the coached students felt with ","the first time. Results have revealed that agile-coached teams outperformed nonagile-coached ones. Furthermore, coached students gained valuable insight into the internalization of Scrum, problem-solving, and guidance through checkpoint meetings [24]. Unlike this previous work, in the current research, we focus on measuring how the coached students felt with ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"development methodologies to different student groups at various universities. Based on the experience gained in teaching agile software development, they suggested how to solve possible ",problems. ,"Scrum has been a widespread used agile method, along with other agile approaches [19], [20]. The achievement of teaching goals and evaluation of students’ performance in ","development methodologies to different student groups at various universities. Based on the experience gained in teaching agile software development, they suggested how to solve possible problems. Scrum has been a widespread used agile method, along with other agile approaches [19], [20]. The achievement of teaching goals and evaluation of students’ performance in ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"encouraging Scrum internalization, faster problem-solving, and encouragement through checkpoint meetings. The findings also showed that the students were comfortable about teamwork, communication, and management ",problems. ,"Some limitations could compromise our case study’s validity. First, the results obtained could impact teachers with different backgrounds and expertise. Second, teachers with ","encouraging Scrum internalization, faster problem-solving, and encouragement through checkpoint meetings. The findings also showed that the students were comfortable about teamwork, communication, and management problems. Some limitations could compromise our case study’s validity. First, the results obtained could impact teachers with different backgrounds and expertise. Second, teachers with ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"Backlog. However, it is worth noting that most of the students felt that their Scrum Master failed to play its role well. To address this ",issue ,"in the future, we plan to adjust our training model and leave the role of Scrum Master to be played by a professor [15]. In ","Backlog. However, it is worth noting that most of the students felt that their Scrum Master failed to play its role well. To address this issue in the future, we plan to adjust our training model and leave the role of Scrum Master to be played by a professor [15]. In ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"along with daily and retrospective meetings, enable students to early provide insights about how agile practices are performed; they also allow the timely identification of ",issues ,"in the understanding of agile practices and the concept of corrective measures to be taken in subsequent sprints by students. Unlike waterfall-like approaches, ","along with daily and retrospective meetings, enable students to early provide insights about how agile practices are performed; they also allow the timely identification of issues in the understanding of agile practices and the concept of corrective measures to be taken in subsequent sprints by students. Unlike waterfall-like approaches, ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"Scrum software development teaching is successful when students are interested in the development of a project rather than traditional classes. In addition, solving software engineering ",issues ,in a regulated environment provided students with the skills needed to work in professional settings. We found that this teaching approach could promote the ,"Scrum software development teaching is successful when students are interested in the development of a project rather than traditional classes. In addition, solving software engineering issues in a regulated environment provided students with the skills needed to work in professional settings. We found that this teaching approach could promote the ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"and software engineering degree. For future research, we plan to replicate this course in other educational and professional contexts from different countries to address cultural ",issues ,that could impact on the outcomes. ,"and software engineering degree. For future research, we plan to replicate this course in other educational and professional contexts from different countries to address cultural issues that could impact on the outcomes. ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"training resources developed were ineffective. This could mean they felt comfortable with the tools and training received before the project development. However, there are some ",issues ,"that need to be tackled. For example, we should work to improve the perception of Weekly Meetings since they should be crucial to follow ","training resources developed were ineffective. This could mean they felt comfortable with the tools and training received before the project development. However, there are some issues that need to be tackled. For example, we should work to improve the perception of Weekly Meetings since they should be crucial to follow ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,both an effective and versatile structure for preparing students to incorporate qualified software engineering practices [1]. The teaching of Software Engineering has been a widely discussed ,issue; ,"Dawson [2] and Regev et al. [3] have stated that projects used in teaching move away from reality, thus forming students with limited preparation for their ","both an effective and versatile structure for preparing students to incorporate qualified software engineering practices [1]. The teaching of Software Engineering has been a widely discussed issue; Dawson [2] and Regev et al. [3] have stated that projects used in teaching move away from reality, thus forming students with limited preparation for their ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,usually conducted in the classroom and supervised by teachers. This project aims to increase students’ participation in the learning process and tackle not only common ,issues ,"found in the development of software but also other concepts suggested by the Agile Manifesto [11], [16]. In [17], 2 http://sites.computer.org/ccse/SE2004Volume.pdf ","usually conducted in the classroom and supervised by teachers. This project aims to increase students’ participation in the learning process and tackle not only common issues found in the development of software but also other concepts suggested by the Agile Manifesto [11], [16]. In [17], 2 http://sites.computer.org/ccse/SE2004Volume.pdf ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"along the project. Besides, the use of Planning Poker in refined user stories (a.k.a sub-stories) improved student engagement. However, there are two ",issues ,"on which we should focus to improve students’ perception of Scrum. Firstly, the Product Backlog evolution failed to be always clear, traceable and visible, ","along the project. Besides, the use of Planning Poker in refined user stories (a.k.a sub-stories) improved student engagement. However, there are two issues on which we should focus to improve students’ perception of Scrum. Firstly, the Product Backlog evolution failed to be always clear, traceable and visible, ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"practice using Scrum in a secure and controlled setting. In spite of the well-known benefits of coaching, effective agile coaching approaches have been proven",difficult,"to be applied even within academia [24]. Agile coaching involves taking into account important challenges inside and outside the teams of students, removing impediments and","practice using Scrum in a secure and controlled setting. In spite of the well-known benefits of coaching, effective agile coaching approaches have been provendifficultto be applied even within academia [24]. Agile coaching involves taking into account important challenges inside and outside the teams of students, removing impediments and",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"case study’s validity. First, the results obtained could impact teachers with different backgrounds and expertise. Second, teachers with limited coaching experience can find it",difficult,"to implement without impacting the team’s self-organization and may find themselves telling students the correct course of action, rather than encouraging them","case study’s validity. First, the results obtained could impact teachers with different backgrounds and expertise. Second, teachers with limited coaching experience can find itdifficultto implement without impacting the team’s self-organization and may find themselves telling students the correct course of action, rather than encouraging them",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"testing, and the inability to assess the quality of source code; for this reason, students with minimal background experience in software development may find it",difficult,"to understand the proposed training approach. For this reason, we suggest to offer our training model towards the end of the computer science and","testing, and the inability to assess the quality of source code; for this reason, students with minimal background experience in software development may find itdifficultto understand the proposed training approach. For this reason, we suggest to offer our training model towards the end of the computer science and",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"the correct course of action, rather than encouraging them to learn from their own errors. Third, it is worth noting that students have tackled many","difficulties,","such as the inability to make reasonable estimates of software requirements, the lack of training in software testing, and the inability to assess the","the correct course of action, rather than encouraging them to learn from their own errors. Third, it is worth noting that students have tackled manydifficulties,such as the inability to make reasonable estimates of software requirements, the lack of training in software testing, and the inability to assess the",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"students’ knowledge with training to provide necessary skills for software development demanded by the industry. According to Yamaguti et al. [5], nowadays, there is a significant ",challenge ,"in the teaching of Software Engineering, due to a demand for well-qualified professionals to develop software efficiently. According to Yamaguti et al., innovative ","students’ knowledge with training to provide necessary skills for software development demanded by the industry. According to Yamaguti et al. [5], nowadays, there is a significant challenge in the teaching of Software Engineering, due to a demand for well-qualified professionals to develop software efficiently. According to Yamaguti et al., innovative ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,and guidance using meetings as a means of checkpoints.  I. INTRODUCTION COURSE projects in Software Engineering education aims at training students to address situations and ,challenges ,"that they would face in professional contexts. Accordingly, undergraduate courses require continuous development and upgrading to meet the tech industry’s demands and guarantee ","and guidance using meetings as a means of checkpoints.  I. INTRODUCTION COURSE projects in Software Engineering education aims at training students to address situations and challenges that they would face in professional contexts. Accordingly, undergraduate courses require continuous development and upgrading to meet the tech industry’s demands and guarantee ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"known benefits of coaching, effective agile coaching approaches have been proven difficult to be applied even within academia [24]. Agile coaching involves taking into account important ",challenges ,"inside and outside the teams of students, removing impediments and promoting the implementation of agile concepts by teachers, team leaders, and Scrum Masters [23]. While ","known benefits of coaching, effective agile coaching approaches have been proven difficult to be applied even within academia [24]. Agile coaching involves taking into account important challenges inside and outside the teams of students, removing impediments and promoting the implementation of agile concepts by teachers, team leaders, and Scrum Masters [23]. While ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"for the presentation (Q22). In order to avoid students just tick the same Likert score as they complete the survey [26], we inverted the direction of ",negative ,"query items (Q1, Q3, Q5, Q10, Q12, Q14, Q17, Q20, and Q21). Table I shows the grouping of items organized according to the 5 events ","for the presentation (Q22). In order to avoid students just tick the same Likert score as they complete the survey [26], we inverted the direction of negative query items (Q1, Q3, Q5, Q10, Q12, Q14, Q17, Q20, and Q21). Table I shows the grouping of items organized according to the 5 events ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"of the students disagree or somewhat disagree with the ideas stated in Q1, Q2, Q3 and Q13. As Q1 and Q3 were formulated with a ",negative ,"sense, we can state that most of the students agree with the idea that User Stories were well clarified at the time of Product ","of the students disagree or somewhat disagree with the ideas stated in Q1, Q2, Q3 and Q13. As Q1 and Q3 were formulated with a negative sense, we can state that most of the students agree with the idea that User Stories were well clarified at the time of Product ",2021
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,to teach novices about the process of software development in order to enable them to follow organized steps to move toward a solution to a ,"problem, ","and that we must treat software development explicitly as a process that is carried out in stages and small steps, rather than the writing ","to teach novices about the process of software development in order to enable them to follow organized steps to move toward a solution to a problem, and that we must treat software development explicitly as a process that is carried out in stages and small steps, rather than the writing ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"decisions to be made will still be difficult. Some students will still have problems, but we believe that teaching a process can help with some ",problems ,"that students face and result in some meaningful improvement.    2. GROWING ISLANDS OF FUNCTIONALITY  In the 1970s and 1980s, Structured Programming (a.k.a. Stepwise ","decisions to be made will still be difficult. Some students will still have problems, but we believe that teaching a process can help with some problems that students face and result in some meaningful improvement.    2. GROWING ISLANDS OF FUNCTIONALITY  In the 1970s and 1980s, Structured Programming (a.k.a. Stepwise ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,in teaching situations by interested readers.  We do not mean to suggest that the introduction of a semiformal process for beginners will somehow remove all ,problems ,"that students have in developing software. Providing a process, even one that is lightweight and reasonably precise, will still leave plenty of grey areas ","in teaching situations by interested readers.  We do not mean to suggest that the introduction of a semiformal process for beginners will somehow remove all problems that students have in developing software. Providing a process, even one that is lightweight and reasonably precise, will still leave plenty of grey areas ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"year courses, while they were much less prominent a decade ago.  We can easily accept that most or all of the above contribute to the ",problems ,"that teachers currently experience. However, in our view, one of the main reasons for the increasing problems is a lack of recognition of process ","year courses, while they were much less prominent a decade ago.  We can easily accept that most or all of the above contribute to the problems that teachers currently experience. However, in our view, one of the main reasons for the increasing problems is a lack of recognition of process ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"If you write the same code segment twice, move the segment into a separate method.   Hard Problem Rule: If you need the answer to a ",problem ,"that you cannot immediately solve, make it a separate method.   Heavy Functionality Rule: If a sequence of statements or an expression becomes long or ","If you write the same code segment twice, move the segment into a separate method.   Hard Problem Rule: If you need the answer to a problem that you cannot immediately solve, make it a separate method.   Heavy Functionality Rule: If a sequence of statements or an expression becomes long or ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"or all of the above contribute to the problems that teachers currently experience. However, in our view, one of the main reasons for the increasing ",problems ,is a lack of recognition of process as an important topic in introductory programming courses.  Several aspects of programming courses have changed dramatically over ,"or all of the above contribute to the problems that teachers currently experience. However, in our view, one of the main reasons for the increasing problems is a lack of recognition of process as an important topic in introductory programming courses.  Several aspects of programming courses have changed dramatically over ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,seems to be swept under the carpet as if it was an embarrassing secret that must not be mentioned.  While the ultimate solution to the ,problem ,"is explained in detail, the process—how we go about developing the solution—is often entirely neglected in beginners’ courses.  Developing software is, by ","seems to be swept under the carpet as if it was an embarrassing secret that must not be mentioned.  While the ultimate solution to the problem is explained in detail, the process—how we go about developing the solution—is often entirely neglected in beginners’ courses.  Developing software is, by ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,be applied.   5.4 Alternative Representations for Date  The next step in our technique is to consider alternative representations (at least two).  An obvious representation for this ,problem ,"is to use three integer variables day, month, and year; we will denote this alternative R1. An alternative representation is to store the number ","be applied.   5.4 Alternative Representations for Date  The next step in our technique is to consider alternative representations (at least two).  An obvious representation for this problem is to use three integer variables day, month, and year; we will denote this alternative R1. An alternative representation is to store the number ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"zero, but should return 30—the approximation we have used previously.  The most important thing at this stage is that we have explicitly separated two independent ",problems: ,the correct use of this method and the implementation of the method. Separating these problems makes each half easier to solve.  Since our checkDayOverflow ,"zero, but should return 30—the approximation we have used previously.  The most important thing at this stage is that we have explicitly separated two independent problems: the correct use of this method and the implementation of the method. Separating these problems makes each half easier to solve.  Since our checkDayOverflow ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,and year) to illustrate these techniques in practice.   5. A FIRST EXAMPLE: DATE  We demonstrate the techniques discussed above in the context of a simple programming ,problem: ,"the implementation of a class representing a date.   5.1 Specification of Date  Here, we give the specification of the problem as a Java interface (see ","and year) to illustrate these techniques in practice.   5. A FIRST EXAMPLE: DATE  We demonstrate the techniques discussed above in the context of a simple programming problem: the implementation of a class representing a date.   5.1 Specification of Date  Here, we give the specification of the problem as a Java interface (see ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"have the many decades of teaching experience other subjects have gone through, some initial problems could be expected. This might have been viewed as teething ",problems.  ,"The worrying fact, however, is that this does not seem to be true. Many teachers now agree that the teaching of programming has recently ","have the many decades of teaching experience other subjects have gone through, some initial problems could be expected. This might have been viewed as teething problems.  The worrying fact, however, is that this does not seem to be true. Many teachers now agree that the teaching of programming has recently ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,only help those students who have fundamental problems arriving at any solution at all but should improve the quality of solutions of all students.  Another ,problem ,"with hiding the development process is the misleading impressions students develop about the nature of software development, which can lead to a discouraging experience. ","only help those students who have fundamental problems arriving at any solution at all but should improve the quality of solutions of all students.  Another problem with hiding the development process is the misleading impressions students develop about the nature of software development, which can lead to a discouraging experience. ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,find software development difficult. It would help them to know that most developers as a matter of course go through exactly the same experience.  The ,problem ,with teaching a formal process from the start in an introductory course is the overhead in time and complexity this imposes on the course.    ,find software development difficult. It would help them to know that most developers as a matter of course go through exactly the same experience.  The problem with teaching a formal process from the start in an introductory course is the overhead in time and complexity this imposes on the course.    ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"nontrivial systems [Caspersen 2007, p. 90-91]. Experience over time has shown that it presents a useful way to reason about the structure of a program, but is ",problematic ,"as a development process in practice, since it requires the developer to have the full (abstract) solution in mind before commencing the implementation.  The ","nontrivial systems [Caspersen 2007, p. 90-91]. Experience over time has shown that it presents a useful way to reason about the structure of a program, but is problematic as a development process in practice, since it requires the developer to have the full (abstract) solution in mind before commencing the implementation.  The ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"the context of a simple programming problem: the implementation of a class representing a date.   5.1 Specification of Date  Here, we give the specification of the ",problem ,as a Java interface (see Figure 7). It could easily be presented more informally; the introduction of interfaces is not a requirement for this process.   5.2 ,"the context of a simple programming problem: the implementation of a class representing a date.   5.1 Specification of Date  Here, we give the specification of the problem as a Java interface (see Figure 7). It could easily be presented more informally; the introduction of interfaces is not a requirement for this process.   5.2 ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,leave plenty of grey areas that students have to struggle with. Some decisions to be made will still be difficult. Some students will still have ,"problems, ",but we believe that teaching a process can help with some problems that students face and result in some meaningful improvement.    2. GROWING ISLANDS OF ,"leave plenty of grey areas that students have to struggle with. Some decisions to be made will still be difficult. Some students will still have problems, but we believe that teaching a process can help with some problems that students face and result in some meaningful improvement.    2. GROWING ISLANDS OF ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"as a verb.  A typical pattern of introducing material is the presentation of a problem, followed by the presentation of a program that solves the ","problem, ",followed by a detailed discussion of the language constructs and concepts or algorithms involved.  This pattern of introducing material creates—unintentionally—the illusion that ,"as a verb.  A typical pattern of introducing material is the presentation of a problem, followed by the presentation of a program that solves the problem, followed by a detailed discussion of the language constructs and concepts or algorithms involved.  This pattern of introducing material creates—unintentionally—the illusion that ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"computer programs. “Program,” in short, is treated as a noun, not as a verb.  A typical pattern of introducing material is the presentation of a ","problem, ","followed by the presentation of a program that solves the problem, followed by a detailed discussion of the language constructs and concepts or algorithms ","computer programs. “Program,” in short, is treated as a noun, not as a verb.  A typical pattern of introducing material is the presentation of a problem, followed by the presentation of a program that solves the problem, followed by a detailed discussion of the language constructs and concepts or algorithms ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"literal 30 with the correct number of days in every month. Here, the Manana Principle comes in again, this time in the form of the Hard ",Problem ,"rule: If we need some information that we do not have, we pretend we have a method that gives us the answer. Thus, we ","literal 30 with the correct number of days in every month. Here, the Manana Principle comes in again, this time in the form of the Hard Problem rule: If we need some information that we do not have, we pretend we have a method that gives us the answer. Thus, we ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"inner loop into a separate method.   Code Duplication Rule: If you write the same code segment twice, move the segment into a separate method.   Hard ",Problem ,"Rule: If you need the answer to a problem that you cannot immediately solve, make it a separate method.   Heavy Functionality Rule: If a ","inner loop into a separate method.   Code Duplication Rule: If you write the same code segment twice, move the segment into a separate method.   Hard Problem Rule: If you need the answer to a problem that you cannot immediately solve, make it a separate method.   Heavy Functionality Rule: If a ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,programmer) in a single step from the problem formulation. The fact that we all start with incomplete and incorrect programs when we start addressing a ,"problem, ","which we then slowly modify to improve and extend our implementation until we arrive at an acceptable solution, seems to be swept under the ","programmer) in a single step from the problem formulation. The fact that we all start with incomplete and incorrect programs when we start addressing a problem, which we then slowly modify to improve and extend our implementation until we arrive at an acceptable solution, seems to be swept under the ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"at all that it does not occur to them to investigate alternatives. Thus, a systematic process should not only help those students who have fundamental ",problems ,arriving at any solution at all but should improve the quality of solutions of all students.  Another problem with hiding the development process is ,"at all that it does not occur to them to investigate alternatives. Thus, a systematic process should not only help those students who have fundamental problems arriving at any solution at all but should improve the quality of solutions of all students.  Another problem with hiding the development process is ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"to the relative immaturity of our discipline: since we do not have the many decades of teaching experience other subjects have gone through, some initial ",problems ,"could be expected. This might have been viewed as teething problems.  The worrying fact, however, is that this does not seem to be true. ","to the relative immaturity of our discipline: since we do not have the many decades of teaching experience other subjects have gone through, some initial problems could be expected. This might have been viewed as teething problems.  The worrying fact, however, is that this does not seem to be true. ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,more detail using an example in the following section. Our techniques do not address the analysis phase or the finding of the classes from the ,problem ,"domain. This may be achieved by using the noun/verb method or other simple methodologies. More likely, in very early student exercises, the teacher ","more detail using an example in the following section. Our techniques do not address the analysis phase or the finding of the classes from the problem domain. This may be achieved by using the noun/verb method or other simple methodologies. More likely, in very early student exercises, the teacher ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"Experts, when given a task in a familiar area, work forward from the givens and develop subgoals in a hierarchical manner, but given an unfamiliar ","problem, ","fall back on general (opportunistic) problem solving” [Winslow 1996, p. 18].  This preliminary study shows that our teaching of STREAM had a positive effect on the ","Experts, when given a task in a familiar area, work forward from the givens and develop subgoals in a hierarchical manner, but given an unfamiliar problem, fall back on general (opportunistic) problem solving” [Winslow 1996, p. 18].  This preliminary study shows that our teaching of STREAM had a positive effect on the ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,involved.  This pattern of introducing material creates—unintentionally—the illusion that these programs were developed (by an expert programmer) in a single step from the ,problem ,"formulation. The fact that we all start with incomplete and incorrect programs when we start addressing a problem, which we then slowly modify to ","involved.  This pattern of introducing material creates—unintentionally—the illusion that these programs were developed (by an expert programmer) in a single step from the problem formulation. The fact that we all start with incomplete and incorrect programs when we start addressing a problem, which we then slowly modify to ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,this stage is that we have explicitly separated two independent problems: the correct use of this method and the implementation of the method. Separating these ,problems ,"makes each half easier to solve.  Since our checkDayOverflow method is now complete, we might now proceed to implement checkMonthOverflow. In the general case, ","this stage is that we have explicitly separated two independent problems: the correct use of this method and the implementation of the method. Separating these problems makes each half easier to solve.  Since our checkDayOverflow method is now complete, we might now proceed to implement checkMonthOverflow. In the general case, ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,STREAM: A First Programming Process   Programming is recognized as one of seven grand challenges in computing education. Decades of research have shown that the major ,problems ,"novices experience are composition-based—they may know what the individual programming language constructs are, but they do not know how to put them ","STREAM: A First Programming Process   Programming is recognized as one of seven grand challenges in computing education. Decades of research have shown that the major problems novices experience are composition-based—they may know what the individual programming language constructs are, but they do not know how to put them ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,is to invite the students for a random walk in the 3D space. Students are shown a few finished programs and told to solve programming ,problems ,"on their own. Our approach to programming education offers an alternative to random walks. Instead, we suggest guided tours. By providing guidance and scaffolding1 ","is to invite the students for a random walk in the 3D space. Students are shown a few finished programs and told to solve programming problems on their own. Our approach to programming education offers an alternative to random walks. Instead, we suggest guided tours. By providing guidance and scaffolding1 ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"be displayed differently depending on their type or state, we might introduce a getDisplayChar method in the Actor class as an application of the Hard ",Problem ,"rule while implementing the simulator’s displayActor method.  In early exercises, we usually start with problems where the methods that naturally develop are in ","be displayed differently depending on their type or state, we might introduce a getDisplayChar method in the Actor class as an application of the Hard Problem rule while implementing the simulator’s displayActor method.  In early exercises, we usually start with problems where the methods that naturally develop are in ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"a familiar area, work forward from the givens and develop subgoals in a hierarchical manner, but given an unfamiliar problem, fall back on general (opportunistic) ",problem ,"solving” [Winslow 1996, p. 18].  This preliminary study shows that our teaching of STREAM had a positive effect on the development of our students’ process competences. ","a familiar area, work forward from the givens and develop subgoals in a hierarchical manner, but given an unfamiliar problem, fall back on general (opportunistic) problem solving” [Winslow 1996, p. 18].  This preliminary study shows that our teaching of STREAM had a positive effect on the development of our students’ process competences. ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"own implicit process.  Some of the first group, those students we lose, might have been saved had we given them better techniques to address this ",problem.  ,"Students in the second group can also greatly benefit from a systematic process, since the techniques they discover and apply in an ad-hoc ","own implicit process.  Some of the first group, those students we lose, might have been saved had we given them better techniques to address this problem.  Students in the second group can also greatly benefit from a systematic process, since the techniques they discover and apply in an ad-hoc ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"the Actor class as an application of the Hard Problem rule while implementing the simulator’s displayActor method.  In early exercises, we usually start with ",problems ,where the methods that naturally develop are in the same class. This can then—a bit later—be extended and linked to a discussion ,"the Actor class as an application of the Hard Problem rule while implementing the simulator’s displayActor method.  In early exercises, we usually start with problems where the methods that naturally develop are in the same class. This can then—a bit later—be extended and linked to a discussion ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"nontrivial systems [Caspersen 2007, p. 90-91]. Experience over time has shown that it presents a useful way to reason about the structure of a program, but is ",problematic ,"as a development process in practice, since it requires the developer to have the full (abstract) solution in mind before commencing the implementation.  The ","nontrivial systems [Caspersen 2007, p. 90-91]. Experience over time has shown that it presents a useful way to reason about the structure of a program, but is problematic as a development process in practice, since it requires the developer to have the full (abstract) solution in mind before commencing the implementation.  The ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,manifests itself in the classroom as pair programming [Williams and Kessler 2001; Bergin et al. 2004; Hanks 2008]. Agile software development in education is covered by a special ,issue ,of Computer Science Education [Williams and Tomayko 2002]; practical software engineering education was the topic for another special issue of the same journal in 2001 [Saiedian 2001].  ,manifests itself in the classroom as pair programming [Williams and Kessler 2001; Bergin et al. 2004; Hanks 2008]. Agile software development in education is covered by a special issue of Computer Science Education [Williams and Tomayko 2002]; practical software engineering education was the topic for another special issue of the same journal in 2001 [Saiedian 2001].  ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"constructs are, but they do not know how to put them together. Despite this fact, textbooks, educational practice, and programming education research hardly address the ",issue ,"of teaching the skills needed for systematic development of programs.  We provide a conceptual framework for incremental program development, called Stepwise Improvement, which unifies ","constructs are, but they do not know how to put them together. Despite this fact, textbooks, educational practice, and programming education research hardly address the issue of teaching the skills needed for systematic development of programs.  We provide a conceptual framework for incremental program development, called Stepwise Improvement, which unifies ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,in education is covered by a special issue of Computer Science Education [Williams and Tomayko 2002]; practical software engineering education was the topic for another special ,issue ,of the same journal in 2001 [Saiedian 2001].  Test-driven development. The strategy of test-driven development [Beck 2003; Hunt and Thomas 2003] relates closely to Step 2 in ,in education is covered by a special issue of Computer Science Education [Williams and Tomayko 2002]; practical software engineering education was the topic for another special issue of the same journal in 2001 [Saiedian 2001].  Test-driven development. The strategy of test-driven development [Beck 2003; Hunt and Thomas 2003] relates closely to Step 2 in ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,addition to the traditional discussion of algorithms and data structures at the heart of the course is the coverage of real world (large) software systems. ,Issues ,"such as code quality, maintainability, extendibility, testing, modularization, group work, etc., have gained prominence. With this, the programs under investigation are often larger (not ","addition to the traditional discussion of algorithms and data structures at the heart of the course is the coverage of real world (large) software systems. Issues such as code quality, maintainability, extendibility, testing, modularization, group work, etc., have gained prominence. With this, the programs under investigation are often larger (not ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,now look back at the days of teaching Pascal and mourn the relative simplicity of teaching in those days. Some attribute the increased level of,difficulty,"to intrinsic characteristics of new paradigms used in teaching, such as object orientation, some attribute it rather to our relatively naıve treatment of object","now look back at the days of teaching Pascal and mourn the relative simplicity of teaching in those days. Some attribute the increased level ofdifficultyto intrinsic characteristics of new paradigms used in teaching, such as object orientation, some attribute it rather to our relatively naıve treatment of object",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"bugs, getting stuck, and tearing their hair out before finishing an assignment, they often think that they are inadequate programmers because they find software development",difficult.,It would help them to know that most developers as a matter of course go through exactly the same experience. The problem with teaching,"bugs, getting stuck, and tearing their hair out before finishing an assignment, they often think that they are inadequate programmers because they find software developmentdifficult.It would help them to know that most developers as a matter of course go through exactly the same experience. The problem with teaching",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"though, is that the task of teaching programming did not become easier over the last decades. Initially, one might have claimed that much of the",difficulty,could be related to the relative immaturity of our discipline: since we do not have the many decades of teaching experience other subjects have,"though, is that the task of teaching programming did not become easier over the last decades. Initially, one might have claimed that much of thedifficultycould be related to the relative immaturity of our discipline: since we do not have the many decades of teaching experience other subjects have",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"R1 being O(n), where n denotes the number of actors in the simulation, while R2 is O(1). However, our concern here is exclusively implementation",difficulty;,"efficiency should not greatly influence our discussion at this stage.) We might assign an REM value of Trivial to R2, while R1 is slightly","R1 being O(n), where n denotes the number of actors in the simulation, while R2 is O(1). However, our concern here is exclusively implementationdifficulty;efficiency should not greatly influence our discussion at this stage.) We might assign an REM value of Trivial to R2, while R1 is slightly",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"described in writing. We label our candidate representations R1 to Rn. 4.4 Step 4: Evaluation (Evaluate the Alternative Representations) Next, we evaluate each representation with respect to",difficulty,"of implementation. To do this, we create a Representation Evaluation Matrix (REM). A REM is a table with one column for each candidate representation,","described in writing. We label our candidate representations R1 to Rn. 4.4 Step 4: Evaluation (Evaluate the Alternative Representations) Next, we evaluate each representation with respect todifficultyof implementation. To do this, we create a Representation Evaluation Matrix (REM). A REM is a table with one column for each candidate representation,",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"worrying fact, however, is that this does not seem to be true. Many teachers now agree that the teaching of programming has recently become more","difficult,","rather than easier, as it should have been had maturity of the discipline been the significant factor. Instructors now look back at the days","worrying fact, however, is that this does not seem to be true. Many teachers now agree that the teaching of programming has recently become moredifficult,rather than easier, as it should have been had maturity of the discipline been the significant factor. Instructors now look back at the days",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"lightweight and reasonably precise, will still leave plenty of grey areas that students have to struggle with. Some decisions to be made will still be",difficult.,"Some students will still have problems, but we believe that teaching a process can help with some problems that students face and result in","lightweight and reasonably precise, will still leave plenty of grey areas that students have to struggle with. Some decisions to be made will still bedifficult.Some students will still have problems, but we believe that teaching a process can help with some problems that students face and result in",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"the development of students’ process competences. 1. INTRODUCTION Teaching beginners to program is hard. Many teachers agree that this always has been, and remains, a very",difficult,"task that has no quick solutions. What is especially worrying, though, is that the task of teaching programming did not become easier over the","the development of students’ process competences. 1. INTRODUCTION Teaching beginners to program is hard. Many teachers agree that this always has been, and remains, a verydifficulttask that has no quick solutions. What is especially worrying, though, is that the task of teaching programming did not become easier over the",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,STREAM: A First Programming Process   Programming is recognized as one of seven grand ,challenges ,in computing education. Decades of research have shown that the major problems novices experience are composition-based—they may know what the individual programming ,STREAM: A First Programming Process   Programming is recognized as one of seven grand challenges in computing education. Decades of research have shown that the major problems novices experience are composition-based—they may know what the individual programming ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"or not. If we do not explicitly teach the programming process, we end up with two groups of students: those who cannot cope with the ",challenge ,"of development and those who can and who discover their own implicit process.  Some of the first group, those students we lose, might have ","or not. If we do not explicitly teach the programming process, we end up with two groups of students: those who cannot cope with the challenge of development and those who can and who discover their own implicit process.  Some of the first group, those students we lose, might have ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"to implement each method using a particular object representation. As values, we use a small ordered set of effort qualifiers. They are Trivial, Easy, Average, ","Challenging, ","and Hard (the “TEACH scale”).  In later exercises, different REMs may be used for other criteria that are explicitly mentioned in the task specification. ","to implement each method using a particular object representation. As values, we use a small ordered set of effort qualifiers. They are Trivial, Easy, Average, Challenging, and Hard (the “TEACH scale”).  In later exercises, different REMs may be used for other criteria that are explicitly mentioned in the task specification. ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,complete date as a string.)   5.5 Evaluation of Alternative Representations for Date  R1 simplifies the implementation of toString whereas the implementation of setToNextDate will be more ,"challenging, ",since it must deal with the special case of the last day of a month.  R2 leads to a simple implementation of setToNextDate (a ,"complete date as a string.)   5.5 Evaluation of Alternative Representations for Date  R1 simplifies the implementation of toString whereas the implementation of setToNextDate will be more challenging, since it must deal with the special case of the last day of a month.  R2 leads to a simple implementation of setToNextDate (a ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,R1: a short description of the first representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  ,Challenging  ,"Trivial  method2 ()  Trivial  Hard  method3 ()  Easy  Hard   4.5 Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our ","R1: a short description of the first representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  Challenging  Trivial  method2 ()  Trivial  Hard  method3 ()  Easy  Hard   4.5 Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"the tests because they had to, not because they needed it to understand the task or to ensure that the production code worked. It is ",hard ,"to blame students for this since their behavior mirrors expert behavior [Caspersen 2007, Section 6.3.2].  We refrain from drawing overly strong conclusions from this experiment, since ","the tests because they had to, not because they needed it to understand the task or to ensure that the production code worked. It is hard to blame students for this since their behavior mirrors expert behavior [Caspersen 2007, Section 6.3.2].  We refrain from drawing overly strong conclusions from this experiment, since ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"the inner loop into a separate method.   Code Duplication Rule: If you write the same code segment twice, move the segment into a separate method.   ",Hard ,"Problem Rule: If you need the answer to a problem that you cannot immediately solve, make it a separate method.   Heavy Functionality Rule: If ","the inner loop into a separate method.   Code Duplication Rule: If you write the same code segment twice, move the segment into a separate method.   Hard Problem Rule: If you need the answer to a problem that you cannot immediately solve, make it a separate method.   Heavy Functionality Rule: If ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"the literal 30 with the correct number of days in every month. Here, the Manana Principle comes in again, this time in the form of the ",Hard ,"Problem rule: If we need some information that we do not have, we pretend we have a method that gives us the answer. Thus, ","the literal 30 with the correct number of days in every month. Here, the Manana Principle comes in again, this time in the form of the Hard Problem rule: If we need some information that we do not have, we pretend we have a method that gives us the answer. Thus, ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"to be displayed differently depending on their type or state, we might introduce a getDisplayChar method in the Actor class as an application of the ",Hard ,"Problem rule while implementing the simulator’s displayActor method.  In early exercises, we usually start with problems where the methods that naturally develop are ","to be displayed differently depending on their type or state, we might introduce a getDisplayChar method in the Actor class as an application of the Hard Problem rule while implementing the simulator’s displayActor method.  In early exercises, we usually start with problems where the methods that naturally develop are ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"special case of the last day of a month.  R2 leads to a simple implementation of setToNextDate (a simple increment), whereas implementing toString will be ",hard.  ,"The result of this analysis is the Effort REM for Date (see Table II).  We choose to use R1 for our class, since it ","special case of the last day of a month.  R2 leads to a simple implementation of setToNextDate (a simple increment), whereas implementing toString will be hard.  The result of this analysis is the Effort REM for Date (see Table II).  We choose to use R1 for our class, since it ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"and therefore classified as Average again. For R1, the task is considerable harder, since the list has no particular order. We consider this to be ",Hard. ,The result of the analysis is summarized in the Effort REM for class Simulator (see Table III).   Table III. Estimate of Required Effort to ,"and therefore classified as Average again. For R1, the task is considerable harder, since the list has no particular order. We consider this to be Hard. The result of the analysis is summarized in the Effort REM for class Simulator (see Table III).   Table III. Estimate of Required Effort to ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"individual programming language constructs are, but they do not know how to put them together. Despite this fact, textbooks, educational practice, and programming education research ",hardly ,"address the issue of teaching the skills needed for systematic development of programs.  We provide a conceptual framework for incremental program development, called Stepwise ","individual programming language constructs are, but they do not know how to put them together. Despite this fact, textbooks, educational practice, and programming education research hardly address the issue of teaching the skills needed for systematic development of programs.  We provide a conceptual framework for incremental program development, called Stepwise ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() Trivial Trivial getActor() Easy Trivial act() Easy Average display() ,Hard ,"Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our stub version of Simulator (see Figure 15). Again, the work ","list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() Trivial Trivial getActor() Easy Trivial act() Easy Average display() Hard Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our stub version of Simulator (see Figure 15). Again, the work ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,the learning outcome of teaching STREAM. The study indicates a positive effect on the development of students’ process competences.     1. INTRODUCTION  Teaching beginners to program is ,hard. ,"Many teachers agree that this always has been, and remains, a very difficult task that has no quick solutions. What is especially worrying, though, ","the learning outcome of teaching STREAM. The study indicates a positive effect on the development of students’ process competences.     1. INTRODUCTION  Teaching beginners to program is hard. Many teachers agree that this always has been, and remains, a very difficult task that has no quick solutions. What is especially worrying, though, ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,of the first representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  Challenging  Trivial  method2 ()  Trivial  ,Hard  ,"method3 ()  Easy  Hard   4.5 Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our implementation class.  We now ","of the first representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  Challenging  Trivial  method2 ()  Trivial  Hard  method3 ()  Easy  Hard   4.5 Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our implementation class.  We now ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,year rule: a year is a leap year if the year is divisible by four but not by 100 or if it is divisible by 400.  The ,hardest ,"part of this calculation is the check whether a number can be divided by another so, again, following the Manana Principle, we use a ","year rule: a year is a leap year if the year is divisible by four but not by 100 or if it is divisible by 400.  The hardest part of this calculation is the check whether a number can be divided by another so, again, following the Manana Principle, we use a ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"grid variant, R2, this is similar to the previous method—a nested loop—and therefore classified as Average again. For R1, the task is considerable ","harder, ",since the list has no particular order. We consider this to be Hard. The result of the analysis is summarized in the Effort REM ,"grid variant, R2, this is similar to the previous method—a nested loop—and therefore classified as Average again. For R1, the task is considerable harder, since the list has no particular order. We consider this to be Hard. The result of the analysis is summarized in the Effort REM ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  Challenging  Trivial  method2 ()  Trivial  Hard  method3 ()  Easy  ,Hard   4.5 ,"Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our implementation class.  We now define the fields ","representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  Challenging  Trivial  method2 ()  Trivial  Hard  method3 ()  Easy  Hard   4.5 Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our implementation class.  We now define the fields ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"representation); others require much practice (creating tests, implementing methods).  The detailed discussion of the method implementation has shown that, at least in this case, the ",harder ,tasks can also be broken down into small parts. This technique can be applied to any implementation of a method.   6. A SECOND EXAMPLE: A ,"representation); others require much practice (creating tests, implementing methods).  The detailed discussion of the method implementation has shown that, at least in this case, the harder tasks can also be broken down into small parts. This technique can be applied to any implementation of a method.   6. A SECOND EXAMPLE: A ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"classify a simple iterator loop as Easy. Using R2, this method requires a traversal of the grid, which includes a nested loop. Since this is ",harder ,"than a single sweep, we might classify this as Average.  The last method, display, is intended to print a representation of the current world ","classify a simple iterator loop as Easy. Using R2, this method requires a traversal of the grid, which includes a nested loop. Since this is harder than a single sweep, we might classify this as Average.  The last method, display, is intended to print a representation of the current world ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"each method using a particular object representation. As values, we use a small ordered set of effort qualifiers. They are Trivial, Easy, Average, Challenging, and ",Hard (,"the “TEACH scale”).  In later exercises, different REMs may be used for other criteria that are explicitly mentioned in the task specification. For example, ","each method using a particular object representation. As values, we use a small ordered set of effort qualifiers. They are Trivial, Easy, Average, Challenging, and Hard (the “TEACH scale”).  In later exercises, different REMs may be used for other criteria that are explicitly mentioned in the task specification. For example, ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"However, many important fields are derived from the implementation representation.) The field definitions may include their role (in the form of a comment) and possible ",constraints ,"on their values (also in comment form).  At this stage, we also provide appropriate initialisations for the fields, either in the form of default ","However, many important fields are derived from the implementation representation.) The field definitions may include their role (in the form of a comment) and possible constraints on their values (also in comment form).  At this stage, we also provide appropriate initialisations for the fields, either in the form of default ",2009
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"ASD practices have much in common with similar well-proven practices in other disciplines. For example, modern architecture design studio courses are structured by projects, ","problems, ",and inquiry [29]. They rely on the use of professional practice project “problems” to stimulate students to discover and explore key disciplinary concepts and skills. ,"ASD practices have much in common with similar well-proven practices in other disciplines. For example, modern architecture design studio courses are structured by projects, problems, and inquiry [29]. They rely on the use of professional practice project “problems” to stimulate students to discover and explore key disciplinary concepts and skills. ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,resulting effects can be rewarding.  Eliminate major difficulties early. It is helpful if considerable time is dedicated in the beginning of the course to the ,problems ,"of refactoring, testing, and emerging design since these appear to be the major obstacles to adopting ASD (see Tables I and III).  Iterations should ","resulting effects can be rewarding.  Eliminate major difficulties early. It is helpful if considerable time is dedicated in the beginning of the course to the problems of refactoring, testing, and emerging design since these appear to be the major obstacles to adopting ASD (see Tables I and III).  Iterations should ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"on development tasks. Such activities can be organized as individual projects that contribute to the final grades.  Note, however, that pairing can be a critical ",problem ,"in an ASD course. On the one hand, it can boost knowledge harmonization inside the team, as long as the rotation of students between ","on development tasks. Such activities can be organized as individual projects that contribute to the final grades.  Note, however, that pairing can be a critical problem in an ASD course. On the one hand, it can boost knowledge harmonization inside the team, as long as the rotation of students between ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"on the experience acquired, analyses and evaluations conducted, and current pedagogical trends at relevant university departments, the authors provide recommendations on how to overcome potential ",problems ,"in teaching agile software development and make their adoption more effective.  Index Terms—Agile software development (ASD), computer science education, Extreme Programming (XP), Scrum.   ","on the experience acquired, analyses and evaluations conducted, and current pedagogical trends at relevant university departments, the authors provide recommendations on how to overcome potential problems in teaching agile software development and make their adoption more effective.  Index Terms—Agile software development (ASD), computer science education, Extreme Programming (XP), Scrum.   ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,been correlated with too much mentoring. Mentoring has proven effective only if limited to stimuli and indications for individual and/or team exploration of relevant ,problems.  ,"Teams should be small. Teams of four to five students, as well as some kind of fair competition between them, are well suited for ","been correlated with too much mentoring. Mentoring has proven effective only if limited to stimuli and indications for individual and/or team exploration of relevant problems.  Teams should be small. Teams of four to five students, as well as some kind of fair competition between them, are well suited for ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"other disciplines. For example, modern architecture design studio courses are structured by projects, problems, and inquiry [29]. They rely on the use of professional practice project “",problems” ,to stimulate students to discover and explore key disciplinary concepts and skills. Students work in small teams and focus on intensive team communication and ,"other disciplines. For example, modern architecture design studio courses are structured by projects, problems, and inquiry [29]. They rely on the use of professional practice project “problems” to stimulate students to discover and explore key disciplinary concepts and skills. Students work in small teams and focus on intensive team communication and ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,are focused on team/customer relationship management in ASD and on ever-changing requirements that necessarily feature in any real-world software development.   B. Pedagogical ,Issues  ,"In cases when ASD is not practiced in the organizations in which the students work, they are encouraged to articulate their views of changes ","are focused on team/customer relationship management in ASD and on ever-changing requirements that necessarily feature in any real-world software development.   B. Pedagogical Issues  In cases when ASD is not practiced in the organizations in which the students work, they are encouraged to articulate their views of changes ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,and engineering values of the entire course will drop dramatically. Ensuring that the pace is kept up in the students’ projects is essential to this ,issue ,in terms of the Drop-out rate and Quit rate (Table II).  Practice increases commitment and helps overcome skepticism. There are always skeptical students ,and engineering values of the entire course will drop dramatically. Ensuring that the pace is kept up in the students’ projects is essential to this issue in terms of the Drop-out rate and Quit rate (Table II).  Practice increases commitment and helps overcome skepticism. There are always skeptical students ,2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"to improvements in software quality (such as refactoring and test suits [3]) and the ease of maintenance. Other topics such as software metrics, CMM [18], and standardization ",issues ,"are sometimes taught in the context of ASD as well. Fewer labs are organized, and the students are supposed to work on their assignments ","to improvements in software quality (such as refactoring and test suits [3]) and the ease of maintenance. Other topics such as software metrics, CMM [18], and standardization issues are sometimes taught in the context of ASD as well. Fewer labs are organized, and the students are supposed to work on their assignments ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,maintaining software quality and flexibility; and 3) increase the organization’s responsiveness while decreasing development overhead [1]. ASD fits small development teams well. Some of the key ,issues ,"and practices in ASD are: very short development cycles (called iterations, or “sprints”) resulting in many small, incremental software releases; continuous involvement of customers; ","maintaining software quality and flexibility; and 3) increase the organization’s responsiveness while decreasing development overhead [1]. ASD fits small development teams well. Some of the key issues and practices in ASD are: very short development cycles (called iterations, or “sprints”) resulting in many small, incremental software releases; continuous involvement of customers; ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,several weeks. The teachers/tutors ensure that each student takes a different role in their team each time they are in the lab.   C. Pedagogical ,Issues  ,An important pedagogical objective in teaching ASD is to let the students adopt the working style typical for software development in small teams. Given ,several weeks. The teachers/tutors ensure that each student takes a different role in their team each time they are in the lab.   C. Pedagogical Issues  An important pedagogical objective in teaching ASD is to let the students adopt the working style typical for software development in small teams. Given ,2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"context (two to six classes a week, 15 weeks per semester, simple projects), even short iterations (one to two weeks each) are often sufficient (Table I, ",Issue ,"i).  Agile works with agile students. Not all students are well motivated initially, and they have different capabilities. Pairing up more agile students with ","context (two to six classes a week, 15 weeks per semester, simple projects), even short iterations (one to two weeks each) are often sufficient (Table I, Issue i).  Agile works with agile students. Not all students are well motivated initially, and they have different capabilities. Pairing up more agile students with ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,Rotating the roles between students in a team makes the development process more dynamic and lets everybody have a taste of each role.  Another important ,issue ,"is that of keeping up the pace. Given the individuality of the teams and the variations between projects, the teacher/tutor should carefully monitor ","Rotating the roles between students in a team makes the development process more dynamic and lets everybody have a taste of each role.  Another important issue is that of keeping up the pace. Given the individuality of the teams and the variations between projects, the teacher/tutor should carefully monitor ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"At the end of each course given, the students were asked to evaluate ASD as the course topic and as a development practice and pedagogical ",issues ,related to teaching ASD. Tables II and III show typical excerpts from these evaluations. Much of the contents of Tables II and III are ,"At the end of each course given, the students were asked to evaluate ASD as the course topic and as a development practice and pedagogical issues related to teaching ASD. Tables II and III show typical excerpts from these evaluations. Much of the contents of Tables II and III are ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"called project/team velocity) throughout the project; and rigorous and continuous code testing and integration. The Agile Manifesto [2] clearly stipulates ASD objectives, approaches, practices, and ",issues. ,"See, for example, [3] for a more detailed introduction to ASD concepts. Recently, ASD seems to be beginning to find its place in computing curricula (","called project/team velocity) throughout the project; and rigorous and continuous code testing and integration. The Agile Manifesto [2] clearly stipulates ASD objectives, approaches, practices, and issues. See, for example, [3] for a more detailed introduction to ASD concepts. Recently, ASD seems to be beginning to find its place in computing curricula (",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"an available guide; for much of the time, the teams work intensively on their own, consulting the teacher only when they are uncertain about an ",issue. ,The teacher/tutor monitors the teams’ activities both in the class/lab and off-hours. The latter is enabled because project-related interaction between ,"an available guide; for much of the time, the teams work intensively on their own, consulting the teacher only when they are uncertain about an issue. The teacher/tutor monitors the teams’ activities both in the class/lab and off-hours. The latter is enabled because project-related interaction between ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"of “the agile way.” This breaks with traditional class management and requires the students’ self-control and self-management. At first, teachers may find it",difficult,"to conduct classes/labs this way, but the students’ greater involvement and greater level of interaction come as a reward. Unmanageable impediments. Personal relations","of “the agile way.” This breaks with traditional class management and requires the students’ self-control and self-management. At first, teachers may find itdifficultto conduct classes/labs this way, but the students’ greater involvement and greater level of interaction come as a reward. Unmanageable impediments. Personal relations",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"Unmanageable impediments. Personal relations among some students, lack of knowledge/experience, and the university (non-industry) setting can sometimes introduce extra inefficiency. These factors are",difficult,"to eliminate, but teachers should still enforce skill and knowledge building through ASD practices. VIII. DISCUSSION The authors are not aware of another similar","Unmanageable impediments. Personal relations among some students, lack of knowledge/experience, and the university (non-industry) setting can sometimes introduce extra inefficiency. These factors aredifficultto eliminate, but teachers should still enforce skill and knowledge building through ASD practices. VIII. DISCUSSION The authors are not aware of another similar",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"of four to five students, as well as some kind of fair competition between them, are well suited for labs/tutorials. Large teams are more",difficult,"to manage, especially if the students are inexperienced. As indicated in Table II, larger teams have featured in earlier course implementations. However, lower values","of four to five students, as well as some kind of fair competition between them, are well suited for labs/tutorials. Large teams are moredifficultto manage, especially if the students are inexperienced. As indicated in Table II, larger teams have featured in earlier course implementations. However, lower values",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,the contents of Tables II and III are self-explanatory. It can be noted from Table II that cautious and negative comments result mainly from,difficulties,"the students experience in adopting ASD practices related to testing and refactoring, as well as the fact that design is not emphasized in ASD","the contents of Tables II and III are self-explanatory. It can be noted from Table II that cautious and negative comments result mainly fromdifficultiesthe students experience in adopting ASD practices related to testing and refactoring, as well as the fact that design is not emphasized in ASD",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"replace, the set of development practices featuring ASD approaches. They do require some discipline to implement, but the resulting effects can be rewarding. Eliminate major",difficulties,"early. It is helpful if considerable time is dedicated in the beginning of the course to the problems of refactoring, testing, and emerging design","replace, the set of development practices featuring ASD approaches. They do require some discipline to implement, but the resulting effects can be rewarding. Eliminate majordifficultiesearly. It is helpful if considerable time is dedicated in the beginning of the course to the problems of refactoring, testing, and emerging design",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,pair programming practices. VI. EXPERIENCES AND EVALUATIONS Weaving together two or more ASD approaches (such as Scrum and XP) in a single course is not,difficult,"if the teachers do not make strict distinctions between practices drawn from different approaches. Moreover, allowing a lot of tolerance in the terminology used","pair programming practices. VI. EXPERIENCES AND EVALUATIONS Weaving together two or more ASD approaches (such as Scrum and XP) in a single course is notdifficultif the teachers do not make strict distinctions between practices drawn from different approaches. Moreover, allowing a lot of tolerance in the terminology used",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,in terms of the Drop-out rate and Quit rate (Table II).  Practice increases commitment and helps overcome skepticism. There are always skeptical students who ,challenge ,"the opinions of the others in the team. Too much theoretical discussion introduces doubt, and direct involvement of these students in practical activities must ","in terms of the Drop-out rate and Quit rate (Table II).  Practice increases commitment and helps overcome skepticism. There are always skeptical students who challenge the opinions of the others in the team. Too much theoretical discussion introduces doubt, and direct involvement of these students in practical activities must ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"time is dedicated in the beginning of the course to the problems of refactoring, testing, and emerging design since these appear to be the major ",obstacles ,to adopting ASD (see Tables I and III).  Iterations should be rather short. Long iterations mean less iteration. Given the typical course context (two ,"time is dedicated in the beginning of the course to the problems of refactoring, testing, and emerging design since these appear to be the major obstacles to adopting ASD (see Tables I and III).  Iterations should be rather short. Long iterations mean less iteration. Given the typical course context (two ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,from these evaluations. Much of the contents of Tables II and III are self-explanatory. It can be noted from Table II that cautious and ,negative ,"comments result mainly from difficulties the students experience in adopting ASD practices related to testing and refactoring, as well as the fact that design ","from these evaluations. Much of the contents of Tables II and III are self-explanatory. It can be noted from Table II that cautious and negative comments result mainly from difficulties the students experience in adopting ASD practices related to testing and refactoring, as well as the fact that design ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,to other important topics is invaluable. Starting from qualitative course evaluations and trying to minimize the confusion of some students and their cautious and/or ,negative ,"comments (see Table III), several other topics variations have been tried in this case study. The most effective ones proved to be the ever-","to other important topics is invaluable. Starting from qualitative course evaluations and trying to minimize the confusion of some students and their cautious and/or negative comments (see Table III), several other topics variations have been tried in this case study. The most effective ones proved to be the ever-",2011
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"much responsibility and freedom as possible. Therefore, the supervisors monitored the behavior of the students in the team and only intervened in case of serious ",problems (,"e.g., infrastructure problems, misunderstanding of an XP practice, etc., which did not happen too often. The students had used the practice of on-","much responsibility and freedom as possible. Therefore, the supervisors monitored the behavior of the students in the team and only intervened in case of serious problems (e.g., infrastructure problems, misunderstanding of an XP practice, etc., which did not happen too often. The students had used the practice of on-",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"software development. Thus, one major question remains: Can novice developers (e.g., students) successfully perform an XP project? This leads also to another, although related, ",problem: ,How can we train students in using XP?  * Main parts of this work were conducted while the author was employed by the University of ,"software development. Thus, one major question remains: Can novice developers (e.g., students) successfully perform an XP project? This leads also to another, although related, problem: How can we train students in using XP?  * Main parts of this work were conducted while the author was employed by the University of ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"XP has shown the need for lightweight (i.e., flexible) approaches which allow the rapid development of software systems. However, lightweight approaches share one fundamental ",problem: ,"lack of guidance. Although, often claimed that practices such as 'Pair Programming' are an ideal means for teaching novices, an agile project heavily depends ","XP has shown the need for lightweight (i.e., flexible) approaches which allow the rapid development of software systems. However, lightweight approaches share one fundamental problem: lack of guidance. Although, often claimed that practices such as 'Pair Programming' are an ideal means for teaching novices, an agile project heavily depends ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"as possible. Therefore, the supervisors monitored the behavior of the students in the team and only intervened in case of serious problems (e.g., infrastructure ","problems, ","misunderstanding of an XP practice, etc., which did not happen too often. The students had used the practice of on-site customer. Furthermore, the ","as possible. Therefore, the supervisors monitored the behavior of the students in the team and only intervened in case of serious problems (e.g., infrastructure problems, misunderstanding of an XP practice, etc., which did not happen too often. The students had used the practice of on-site customer. Furthermore, the ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"and lively approach. Thus, a 'simple' lecture would miss out the important practical part. Consequently, we chose a more practice oriented (i.e., programming and ",problem ,oriented) way of teaching XP. In the winter term 2002/2003 we organized a seminar 'Agile Software Development Using XP as part of the official course ,"and lively approach. Thus, a 'simple' lecture would miss out the important practical part. Consequently, we chose a more practice oriented (i.e., programming and problem oriented) way of teaching XP. In the winter term 2002/2003 we organized a seminar 'Agile Software Development Using XP as part of the official course ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"developers, since they were working in the next room and seemed not to be permanently present in person. Another example for the importance of organizational ",issues ,in XP projects is reflected by our last example out of the collected LL: LL Example 3 Name: User stories (organization) Situation: During complete project ,"developers, since they were working in the next room and seemed not to be permanently present in person. Another example for the importance of organizational issues in XP projects is reflected by our last example out of the collected LL: LL Example 3 Name: User stories (organization) Situation: During complete project ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"and/or inexperienced development teams tend to ignore process restrictions and (methodological) requirements. Of course these observations are not specific to XP projects. However, they ",issue ,"a higher risk factor for a project when, as with agile methods, there is already a lack of guidance. Our observations seem to further ","and/or inexperienced development teams tend to ignore process restrictions and (methodological) requirements. Of course these observations are not specific to XP projects. However, they issue a higher risk factor for a project when, as with agile methods, there is already a lack of guidance. Our observations seem to further ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"changes to the code several times a day. In addition they used the practice of short increments, manual (i.e., not automated) acceptance tests, were ",issued ,"programming standards, which they adapted for their needs, and used simple design in the sense that they did not include unnecessary code. For unit ","changes to the code several times a day. In addition they used the practice of short increments, manual (i.e., not automated) acceptance tests, were issued programming standards, which they adapted for their needs, and used simple design in the sense that they did not include unnecessary code. For unit ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"of the XP process is often missing [15]. As a consequence, the development team has to define its own (implicit) rules and guidelines which is quite",difficult,"for developers who do not have experience in software development. Thus, one major question remains: Can novice developers (e.g., students) successfully perform an","of the XP process is often missing [15]. As a consequence, the development team has to define its own (implicit) rules and guidelines which is quitedifficultfor developers who do not have experience in software development. Thus, one major question remains: Can novice developers (e.g., students) successfully perform an",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"Maryland. Again, students did not use the on-site customer intensively. Also the supervisors had some interesting observations: • Observation 1: For an inexperienced team it is ",hard ,to give precise estimations regarding the complexity of a task and the effort needed for it's realization. • Observation 2: Undisciplined and/or inexperienced development ,"Maryland. Again, students did not use the on-site customer intensively. Also the supervisors had some interesting observations: • Observation 1: For an inexperienced team it is hard to give precise estimations regarding the complexity of a task and the effort needed for it's realization. • Observation 2: Undisciplined and/or inexperienced development ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"about 2500 lines of code in 27 classes. Concerning the negative properties of the system, there are two major drawbacks. First, the system was judged to be ",hard ,"to maintain by other people than the current team. Second, the usability of the system is quite bad. The bad maintainability was due to ","about 2500 lines of code in 27 classes. Concerning the negative properties of the system, there are two major drawbacks. First, the system was judged to be hard to maintain by other people than the current team. Second, the usability of the system is quite bad. The bad maintainability was due to ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,develop a project management system. The analysis of the developed system showed that although it runs and offers most of the required functionality it is ,hard ,to use and not easy to maintain. This is supported by the subjective experience of the participating students. They liked the way the system ,develop a project management system. The analysis of the developed system showed that although it runs and offers most of the required functionality it is hard to use and not easy to maintain. This is supported by the subjective experience of the participating students. They liked the way the system ,2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"experienced with the agile development methodology. Second, the user stories for release one were estimated with too low effort because they were intertwined. It was ",hard ,"for an inexperienced development team to estimate the user stories, especially the ones for the basic functionality. For release two and three, the failed ","experienced with the agile development methodology. Second, the user stories for release one were estimated with too low effort because they were intertwined. It was hard for an inexperienced development team to estimate the user stories, especially the ones for the basic functionality. For release two and three, the failed ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"agile project heavily depends on the discipline and experience of its developers [11]. Thus, although students can easily learn the practices of XP, it might be ",hard ,for them to successfully apply them. This paper reports on the experiences made at the University of Kaiserslautern during a seminar on software development. ,"agile project heavily depends on the discipline and experience of its developers [11]. Thus, although students can easily learn the practices of XP, it might be hard for them to successfully apply them. This paper reports on the experiences made at the University of Kaiserslautern during a seminar on software development. ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"programming. To give an impression on the overall size of the developed tool, the source code contains about 2500 lines of code in 27 classes. Concerning the ",negative ,"properties of the system, there are two major drawbacks. First, the system was judged to be hard to maintain by other people than the ","programming. To give an impression on the overall size of the developed tool, the source code contains about 2500 lines of code in 27 classes. Concerning the negative properties of the system, there are two major drawbacks. First, the system was judged to be hard to maintain by other people than the ",2004
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,against 255 billion in project spending on failed and poorly run software projects in 2002 according to the Standish Group 2003 CHAOS Report 15 These,failures,can be traced to a lack of understanding of the business issues being addressed and the failure to use appropriate implementation methodologies The solution is,against 255 billion in project spending on failed and poorly run software projects in 2002 according to the Standish Group 2003 CHAOS Report 15 These failures can be traced to a lack of understanding of the business issues being addressed and the failure to use appropriate implementation methodologies The solution is,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,methods have shown strength in recent years and more and more people in industry are convinced that agile methods are viable solutions to the software,crisis,that has been building over the last forty years However as with most technology related approaches many academics are behind the curve on agile development,methods have shown strength in recent years and more and more people in industry are convinced that agile methods are viable solutions to the software crisis that has been building over the last forty years However as with most technology related approaches many academics are behind the curve on agile development,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,is previous experience in software engineering which can be satisfied either by previous coursework in software engineering or equivalent work experience upon instructor approval This,restriction,is intended to allow the instructor to omit explanations of the basics of the software development life cycle or details of various traditional software processes,is previous experience in software engineering which can be satisfied either by previous coursework in software engineering or equivalent work experience upon instructor approval This restriction is intended to allow the instructor to omit explanations of the basics of the software development life cycle or details of various traditional software processes,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,However the customer finally gave up on the project and the team had their first failed project in the real world Fortunately there were no,hard,feelings since we did explain to the customers at the beginning of each project that there were risks involved due to student learning The Billing,However the customer finally gave up on the project and the team had their first failed project in the real world Fortunately there were no hard feelings since we did explain to the customers at the beginning of each project that there were risks involved due to student learning The Billing,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,Billing System team unwisely committed to more than ten weeks worth of work thinking that they could do it in four weeks if they worked,hard,enough The instructor observed the situation and decided not to interfere at that point The team of six bright students worked extremely hard on the,Billing System team unwisely committed to more than ten weeks worth of work thinking that they could do it in four weeks if they worked hard enough The instructor observed the situation and decided not to interfere at that point The team of six bright students worked extremely hard on the,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,customers was the one thing that they did not want to see changed in this course Other comments were also positive such as working on,problems,for real clients gives us experience on real world issues and working with real clients gives us an early exposure to real life work environments,customers was the one thing that they did not want to see changed in this course Other comments were also positive such as working on problems for real clients gives us experience on real world issues and working with real clients gives us an early exposure to real life work environments,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,exposure to real life work environments As much as they valued real customers students lacked the experience of working and communicating with them One major,issue,was that unlike a controlled classroom project there was no clear scope on any of the projects Without prior real customer experience it was difficult,exposure to real life work environments As much as they valued real customers students lacked the experience of working and communicating with them One major issue was that unlike a controlled classroom project there was no clear scope on any of the projects Without prior real customer experience it was difficult,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,were chosen through the combined efforts of the students and the instructor The final seven topics were as follows Better ways to deal with the,issues,of personality traits in pair programming Automated GUI testing The effectiveness of refactoring in an XP environment Agile modeling its viability and adaptability What is,were chosen through the combined efforts of the students and the instructor The final seven topics were as follows Better ways to deal with the issues of personality traits in pair programming Automated GUI testing The effectiveness of refactoring in an XP environment Agile modeling its viability and adaptability What is,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,of the semester titled teamwork is an individual skill based on 2 Teamwork seemed to improve considerably after the lecture Another reason that students had,problems,with the workload was their lack of real customer experience Since a major portion of the project grades were based on customer satisfaction students felt,of the semester titled teamwork is an individual skill based on 2 Teamwork seemed to improve considerably after the lecture Another reason that students had problems with the workload was their lack of real customer experience Since a major portion of the project grades were based on customer satisfaction students felt,2005
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,Using Scrum for Software Engineering Class Projects Abstract Imparting industry relevant skills and knowledge for the graduating students in the field of Software Engineering is,difficult,but is necessary to make the students employable and productive right from the joining With outdated curriculum and slow process of revision of syllabi it,Using Scrum for Software Engineering Class Projects Abstract Imparting industry relevant skills and knowledge for the graduating students in the field of Software Engineering is difficult but is necessary to make the students employable and productive right from the joining With outdated curriculum and slow process of revision of syllabi it,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,is necessary to make the students employable and productive right from the joining With outdated curriculum and slow process of revision of syllabi it is,difficult,to achieve this objective This paper discusses how one of the popular agile project management frameworks Scrum can be taught and used to teach basic,is necessary to make the students employable and productive right from the joining With outdated curriculum and slow process of revision of syllabi it is difficult to achieve this objective This paper discusses how one of the popular agile project management frameworks Scrum can be taught and used to teach basic,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,by not offering any practical case study component for SE courses It is true that given the limited time available within a semester it is,difficult,to apply the traditional project management approach to implement a course project What is needed is a lightweight adaptive approach that can be tailored to,by not offering any practical case study component for SE courses It is true that given the limited time available within a semester it is difficult to apply the traditional project management approach to implement a course project What is needed is a lightweight adaptive approach that can be tailored to,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,of India in order to fill the gap of software professionals by allowing non engineering graduates to pursue software development Our MCA programme offers basic,problem,solving and programming courses as well as the other fundamental computer science courses such as DBMS Networks in the first four semesters Fifth semester has,of India in order to fill the gap of software professionals by allowing non engineering graduates to pursue software development Our MCA programme offers basic problem solving and programming courses as well as the other fundamental computer science courses such as DBMS Networks in the first four semesters Fifth semester has,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,implementation and how a team should carry out the various tasks required to implement the functionality were a grey area As a result it was,difficult,to monitor the project progress as well as to ensure that the team as a whole is involved 3 DESIGNING THE COURSE WORK This year,implementation and how a team should carry out the various tasks required to implement the functionality were a grey area As a result it was difficult to monitor the project progress as well as to ensure that the team as a whole is involved 3 DESIGNING THE COURSE WORK This year,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,5 6 students per group who were assigned separate projects They had worked on use case modeling followed by analysis and design for a given,problem,Every group was given a different problem related to business applications development They were told that project will be implemented in the forthcoming semester In,5 6 students per group who were assigned separate projects They had worked on use case modeling followed by analysis and design for a given problem Every group was given a different problem related to business applications development They were told that project will be implemented in the forthcoming semester In,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,followed by sessions on requirements engineering using 6 With this by using activities and exercises various groups came up with a vision statement outlining the,problem,and requisite features to solve the problems Simultaneously in the lab pair programming was introduced and design problems were given for which they have to,followed by sessions on requirements engineering using 6 With this by using activities and exercises various groups came up with a vision statement outlining the problem and requisite features to solve the problems Simultaneously in the lab pair programming was introduced and design problems were given for which they have to,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,patterns such as strategy observer adapter composite decorator proxy factory singleton 9 were learnt by the students in context Faculty approach was to give a,problem,For which students will provide a solution which would be then gradually enhanced using an appropriate design pattern They were also taught how to use,patterns such as strategy observer adapter composite decorator proxy factory singleton 9 were learnt by the students in context Faculty approach was to give a problem For which students will provide a solution which would be then gradually enhanced using an appropriate design pattern They were also taught how to use,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,worked upon other aspects such as use of DBMS etc As the teams went on implementing the user stories in the first sprint backlog various,issues,technical as well as non technical started interfering with the project implementation On the technical front the teams were asked to implement project using Eclipse,worked upon other aspects such as use of DBMS etc As the teams went on implementing the user stories in the first sprint backlog various issues technical as well as non technical started interfering with the project implementation On the technical front the teams were asked to implement project using Eclipse,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,document Initially the teams struggled to learn Spring 21 and Hibernate 22 framework on Eclipse and spent lot of time But due to lot of,problems,related to configuration faced by the teams as there was no expertise available to sort them out all the teams finally abandoned the idea of,document Initially the teams struggled to learn Spring 21 and Hibernate 22 framework on Eclipse and spent lot of time But due to lot of problems related to configuration faced by the teams as there was no expertise available to sort them out all the teams finally abandoned the idea of,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,6 LESSONS LEARNT AND FUTURE WORK Focus of this paper was on how to use Scrum by adapting it to the classroom situation wherein such,difficulties,and impediments come up regularly Our earlier approach of giving students a free hand in deciding on how to complete the assigned task was not,6 LESSONS LEARNT AND FUTURE WORK Focus of this paper was on how to use Scrum by adapting it to the classroom situation wherein such difficulties and impediments come up regularly Our earlier approach of giving students a free hand in deciding on how to complete the assigned task was not,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,using the activity based approach We tried to use Scrum by following the bare essential things and modifying and adopting it to suit the classroom,limitations,but highlighting the best aspects of scrum In the future more quantitative data about how effective this approach is will be collected and analyzed We,using the activity based approach We tried to use Scrum by following the bare essential things and modifying and adopting it to suit the classroom limitations but highlighting the best aspects of scrum In the future more quantitative data about how effective this approach is will be collected and analyzed We,2012
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,motivation and team cohesiveness No process is optimal for every situation good software engineers are always looking to improve the process by focusing on the,weaknesses,of the current process While this change was successful 5 due to informal discussions with the students we had some concerns with the sequential nature,motivation and team cohesiveness No process is optimal for every situation good software engineers are always looking to improve the process by focusing on the weaknesses of the current process While this change was successful 5 due to informal discussions with the students we had some concerns with the sequential nature,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,waterfall paper 4 The students have seen the waterfall model what CS 1 text does not include it They are quite surprised to find its,weaknesses,and the fact that those weaknesses were recognized so long ago This is the beginning of encouraging them to question the process The next paper,waterfall paper 4 The students have seen the waterfall model what CS 1 text does not include it They are quite surprised to find its weaknesses and the fact that those weaknesses were recognized so long ago This is the beginning of encouraging them to question the process The next paper,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,many computers as seats However this pairing was done with little planning or training of the students This meant that we encountered all of the,weaknesses,this can bring pairs who are unevenly participating students who are uninvolved and pairs that become too dependent on each other Our initial motivation for,many computers as seats However this pairing was done with little planning or training of the students This meant that we encountered all of the weaknesses this can bring pairs who are unevenly participating students who are uninvolved and pairs that become too dependent on each other Our initial motivation for,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,for these pairings was pedagogical At the time we were part of the Mathematics department and our colleagues were very interested in using small group,problem,solving activities to increase the engagement of the students and their analytical skills We used programming together for similar reasons The XP literature is very,for these pairings was pedagogical At the time we were part of the Mathematics department and our colleagues were very interested in using small group problem solving activities to increase the engagement of the students and their analytical skills We used programming together for similar reasons The XP literature is very,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,system did not improve student performance as initially expected 2 As will be explained below when the process was analyzed more closely a number of,problems,were discovered with it There were some key differences between this course and the test driven development TDD approach which based on student assessment contributed,system did not improve student performance as initially expected 2 As will be explained below when the process was analyzed more closely a number of problems were discovered with it There were some key differences between this course and the test driven development TDD approach which based on student assessment contributed,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,with it There were some key differences between this course and the test driven development TDD approach which based on student assessment contributed to a,negative,outcome In this approach students were assigned a series of labs Each lab defined a problem and a set of criteria For example one program,with it There were some key differences between this course and the test driven development TDD approach which based on student assessment contributed to a negative outcome In this approach students were assigned a series of labs Each lab defined a problem and a set of criteria For example one program,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,each time modifying the return value of getDimes by one in hopes of passing the tests By allowing students a true test first approach these,mistakes,can be avoided 2 4 3 Test Driven Development in CS I From prep work done to teach the new XP course one of our,each time modifying the return value of getDimes by one in hopes of passing the tests By allowing students a true test first approach these mistakes can be avoided 2 4 3 Test Driven Development in CS I From prep work done to teach the new XP course one of our,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,students are free to generate tests for methods and instance variables without worrying about generating code This is important for those students who are having,difficulty,as it enables them to think about the behavior and not worry about the implementation 2 5 The Future of Agility in our Program While,students are free to generate tests for methods and instance variables without worrying about generating code This is important for those students who are having difficulty as it enables them to think about the behavior and not worry about the implementation 2 5 The Future of Agility in our Program While,2006
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,ability had better productivity and website quality I SOFTWARE ENGINEERING EDUCATION The term software engineering was coined in 1968 as a result of the software,crisis,or demand for software by the U S military along with difficulty of fulfilling that demand Computer programmers began to be referred to as software,ability had better productivity and website quality I SOFTWARE ENGINEERING EDUCATION The term software engineering was coined in 1968 as a result of the software crisis or demand for software by the U S military along with difficulty of fulfilling that demand Computer programmers began to be referred to as software,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,often online universities gravitated towards masters degrees in software engineering II IMPETUS FOR CHANGE UMUC with 170 000 full and part time students undertook the,challenge,of teaching agile methods as part of its capstone course towards a masters degree in software engineering The stewards of UMUCs masters degree program in,often online universities gravitated towards masters degrees in software engineering II IMPETUS FOR CHANGE UMUC with 170 000 full and part time students undertook the challenge of teaching agile methods as part of its capstone course towards a masters degree in software engineering The stewards of UMUCs masters degree program in,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,A single customer was assigned to each of the three teams Historically the students were asked to find their own customers This led to several,problems,such as finding a customer getting adequate requirements and maintaining a consistent level of customer involvement throughout the capstone course Since our primary objective was,A single customer was assigned to each of the three teams Historically the students were asked to find their own customers This led to several problems such as finding a customer getting adequate requirements and maintaining a consistent level of customer involvement throughout the capstone course Since our primary objective was,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,an electronic retailing website or storefront similar to Amazon com where consumers can search for products and identify and purchase the products they desire One,constraint,is that the website will be for digital media products such as e books market studies white papers company briefings and other forms of digital,an electronic retailing website or storefront similar to Amazon com where consumers can search for products and identify and purchase the products they desire One constraint is that the website will be for digital media products such as e books market studies white papers company briefings and other forms of digital,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,to a shopping cart create user accounts with personal information order products using credit cards and obtain customer services such as rating transaction quality reporting,problems,or resolving account disputes The seller should also have features and functions such as an attractive website that presents a pleasant shopping experience that encourages,to a shopping cart create user accounts with personal information order products using credit cards and obtain customer services such as rating transaction quality reporting problems or resolving account disputes The seller should also have features and functions such as an attractive website that presents a pleasant shopping experience that encourages,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,lead the rest of the team felt more involved and they were eventually able to complete their tasks Its not unusual for academic teams to,struggle,with the concept of cooperation and this team was certainly one of those This team required a lot of extra coaching and mentoring to reinforce,lead the rest of the team felt more involved and they were eventually able to complete their tasks Its not unusual for academic teams to struggle with the concept of cooperation and this team was certainly one of those This team required a lot of extra coaching and mentoring to reinforce,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,teams demonstrated a fully operational e commerce website The teams were encouraged to perform a dry run of their iteration demonstrations to head off any,issues,before acceptance testing All user stories were agreed upon and prioritized before during and after the iterations The teams were encouraged to use WebEx to,teams demonstrated a fully operational e commerce website The teams were encouraged to perform a dry run of their iteration demonstrations to head off any issues before acceptance testing All user stories were agreed upon and prioritized before during and after the iterations The teams were encouraged to use WebEx to,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,purpose of this capstone course was to introduce the use of agile methods in software engineering education The use of agile methods is a formidable,challenge,It took two years to instill the principles of traditional methods in our students We attempted to instill the principles of agile methods in our,purpose of this capstone course was to introduce the use of agile methods in software engineering education The use of agile methods is a formidable challenge It took two years to instill the principles of traditional methods in our students We attempted to instill the principles of agile methods in our,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,struck a good balance between the agile methods process and proficiency in implementing web technologies performed better overall However our success was not without its,challenges,We could have all benefitted from earlier coursework in agile methods and more emphasis on technical proficiency virtual collaboration coaching and mentoring knowledgeable customers feedback,struck a good balance between the agile methods process and proficiency in implementing web technologies performed better overall However our success was not without its challenges We could have all benefitted from earlier coursework in agile methods and more emphasis on technical proficiency virtual collaboration coaching and mentoring knowledgeable customers feedback,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,Authorized licensed use limited to Te Herenga Waka Victoria University of Wellington Downloaded on March 10 2024 at 23 53 54 UTC from IEEE Xplore,restrictions,apply Virtual collaboration Unlike traditional universities non traditional programs often involve students in different time zones This presents some technical challenges Teams within the same,Authorized licensed use limited to Te Herenga Waka Victoria University of Wellington Downloaded on March 10 2024 at 23 53 54 UTC from IEEE Xplore restrictions apply Virtual collaboration Unlike traditional universities non traditional programs often involve students in different time zones This presents some technical challenges Teams within the same,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,within the same time zone were able to successfully use WebEx and Skype to perform virtual pair programming to share the workload However this proved,difficult,with other teams Coaching and mentoring The importance of coaching and mentoring cannot be emphasized enough Coaches and mentors were required to train the faculty,within the same time zone were able to successfully use WebEx and Skype to perform virtual pair programming to share the workload However this proved difficult with other teams Coaching and mentoring The importance of coaching and mentoring cannot be emphasized enough Coaches and mentors were required to train the faculty,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,also have training and experience in agile methods Many developers are just starting to gain knowledge and experience with agile methods Teams will have a,hard,time succeeding with agile methods unless both developers and customers understand the principles of agile methods and how to apply them correctly Constructive feedback Customers,also have training and experience in agile methods Many developers are just starting to gain knowledge and experience with agile methods Teams will have a hard time succeeding with agile methods unless both developers and customers understand the principles of agile methods and how to apply them correctly Constructive feedback Customers,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,to suggest process improvements and make radical course corrections if necessary Teamwork The lack of teamwork in both academia and industry continues to be a,problem,Fierce individualism is a common characteristic of Western culture This proved to be the case among the faculty staff and students The teams who cooperated,to suggest process improvements and make radical course corrections if necessary Teamwork The lack of teamwork in both academia and industry continues to be a problem Fierce individualism is a common characteristic of Western culture This proved to be the case among the faculty staff and students The teams who cooperated,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,customer satisfaction if they utilize commercially available web services Aesthetic design Developers should be provided with training and education in the principles of aesthetic design,poor,website quality costs billions of dollars in lost e commerce revenues each year Literature is starting to emerge which attributes poor aesthetic design to agile,customer satisfaction if they utilize commercially available web services Aesthetic design Developers should be provided with training and education in the principles of aesthetic design poor website quality costs billions of dollars in lost e commerce revenues each year Literature is starting to emerge which attributes poor aesthetic design to agile,2009
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,expertise is available and greater opportunities for coordinated team work and to appreciate how disciplines interact A disadvantage is scheduling and managing class activities and,risk,to assure that useful project work is done at a pace benefiting both classes This paper describes an experience in which an Agile approach was,expertise is available and greater opportunities for coordinated team work and to appreciate how disciplines interact A disadvantage is scheduling and managing class activities and risk to assure that useful project work is done at a pace benefiting both classes This paper describes an experience in which an Agile approach was,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,complete substantial projects until the course is near its end by then there is little time left to complete a project In some curriculums this,problem,is addressed by a two course sequence a design is created in the first course and then implemented in the second Regardless of the merits,complete substantial projects until the course is near its end by then there is little time left to complete a project In some curriculums this problem is addressed by a two course sequence a design is created in the first course and then implemented in the second Regardless of the merits,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,sequence a design is created in the first course and then implemented in the second Regardless of the merits of this approach many institutions have,constraints,which do not permit the two course solution Agile programming methods provide another possibility In this approach only minimal up front planning is required allowing,sequence a design is created in the first course and then implemented in the second Regardless of the merits of this approach many institutions have constraints which do not permit the two course solution Agile programming methods provide another possibility In this approach only minimal up front planning is required allowing,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,prerequisites but does not require specific skills such as database or artificial intelligence which might be taken by only a subset of our students This,limitation,reduces the scope of projects which might be appropriate for the class We try to incorporate the principle of shared ownership and want all students,prerequisites but does not require specific skills such as database or artificial intelligence which might be taken by only a subset of our students This limitation reduces the scope of projects which might be appropriate for the class We try to incorporate the principle of shared ownership and want all students,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,oriented approach In user interaction design the emphasis is on understanding the user and designing an appropriate interface While some instruction is provided on development,issues,the main emphasis is on the design process Working on teams and with outside users is important in this class as well 2 Course Descriptions,oriented approach In user interaction design the emphasis is on understanding the user and designing an appropriate interface While some instruction is provided on development issues the main emphasis is on the design process Working on teams and with outside users is important in this class as well 2 Course Descriptions,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,Motivations and Concerns Sharing a common project across multiple concurrent classes would not have been attempted unless significant benefits were expected There was also a,risk,that the project a central part of both courses would become a failure due to unanticipated problems introduced by the additional collaborative elements It would,Motivations and Concerns Sharing a common project across multiple concurrent classes would not have been attempted unless significant benefits were expected There was also a risk that the project a central part of both courses would become a failure due to unanticipated problems introduced by the additional collaborative elements It would,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,project a central part of both courses would become a failure due to unanticipated problems introduced by the additional collaborative elements It would be very,difficult,to coordinate scheduling between classes even if two very like minded and motivated professors were involved In Spring of 2005 I was given the assignment,project a central part of both courses would become a failure due to unanticipated problems introduced by the additional collaborative elements It would be very difficult to coordinate scheduling between classes even if two very like minded and motivated professors were involved In Spring of 2005 I was given the assignment,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,other For instance coupling interaction design with software development is the subject of recent research 2 5 7 9 Rather than just lecturing about the,issues,in class students can experience them first hand during project interactions We have been exploring the idea of a capstone project course which would require,other For instance coupling interaction design with software development is the subject of recent research 2 5 7 9 Rather than just lecturing about the issues in class students can experience them first hand during project interactions We have been exploring the idea of a capstone project course which would require,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,the students in both classes would have an acceptable project experience Coordinating the communications and work products expected between the courses was expected to be,difficult,A major component for both classes is to experience the process of design The UI contribution was expected to focus on interaction design and evaluation,the students in both classes would have an acceptable project experience Coordinating the communications and work products expected between the courses was expected to be difficult A major component for both classes is to experience the process of design The UI contribution was expected to focus on interaction design and evaluation,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,be implemented Scope was adjusted to provide a useful subset of features and the interface design had to be adjusted to reduce its scope and,complexity,It also became apparent that uncertainty existed regarding some behavioral aspects of the program as well as other details The original groups were dissolved and,be implemented Scope was adjusted to provide a useful subset of features and the interface design had to be adjusted to reduce its scope and complexity It also became apparent that uncertainty existed regarding some behavioral aspects of the program as well as other details The original groups were dissolved and,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,dissolved and groups specializing on particular aspects of the emerging program were formed Completeness and Utility Navigation Appearance and Layout Task Specifics Help and Documentation,error,Prevention and Recovery Towards the end of the semester these groups were merged into 3 groups for summary activities directed at evaluating the usability of,dissolved and groups specializing on particular aspects of the emerging program were formed Completeness and Utility Navigation Appearance and Layout Task Specifics Help and Documentation error Prevention and Recovery Towards the end of the semester these groups were merged into 3 groups for summary activities directed at evaluating the usability of,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,A draft design was presented for iteration 2 along with its corresponding stories SD students worked to complete this iteration with some details default values,error,situations wording of messages etc to be assisted by the UI students Students enrolled in both classes made valuable contributions Executable jar files were made,A draft design was presented for iteration 2 along with its corresponding stories SD students worked to complete this iteration with some details default values error situations wording of messages etc to be assisted by the UI students Students enrolled in both classes made valuable contributions Executable jar files were made,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,team experiences and a greater chance to explore the details of their subject and its interaction with another Sharing a project across courses does add,complexity,to course planning The biggest problems encountered in this experience was helping everyone to find something useful to do without forcing them into rigid roles,team experiences and a greater chance to explore the details of their subject and its interaction with another Sharing a project across courses does add complexity to course planning The biggest problems encountered in this experience was helping everyone to find something useful to do without forcing them into rigid roles,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,do without forcing them into rigid roles Additionally students often fail to communicate with each other or show a lack of initiative in exploring creative,problems,Similar problems are encountered in the software development course Regularly scheduled lab meetings in the SD course and class project time in the UI course,do without forcing them into rigid roles Additionally students often fail to communicate with each other or show a lack of initiative in exploring creative problems Similar problems are encountered in the software development course Regularly scheduled lab meetings in the SD course and class project time in the UI course,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,course communication If scheduling allows regular joint meeting times for all students seemingly would enhance whole group communications Strategies used here to help minimize these,problems,sought to actively engage students Active Learning 4 For instance by encouraging students with questions to speak up and get help from team mates using,course communication If scheduling allows regular joint meeting times for all students seemingly would enhance whole group communications Strategies used here to help minimize these problems sought to actively engage students Active Learning 4 For instance by encouraging students with questions to speak up and get help from team mates using,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,extreme programming practice of stand up meetings forming students into discussion groups with a specific purpose presenting questions and exercises in class which relate to,problems,seen in the project Active involvement by the instructor with code examples pair programming with students and direct modifications of the project code can also,extreme programming practice of stand up meetings forming students into discussion groups with a specific purpose presenting questions and exercises in class which relate to problems seen in the project Active involvement by the instructor with code examples pair programming with students and direct modifications of the project code can also,2006
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,Integrating Lean Thinking into Design Thinking With First Year Engineering Design Course Abstract Engineering design is a process aimed at addressing a,problem,in a systematic way It starts with this fundamental question that what is the human necessity behind a design Design Thinking helps students to be,Integrating Lean Thinking into Design Thinking With First Year Engineering Design Course Abstract Engineering design is a process aimed at addressing a problem in a systematic way It starts with this fundamental question that what is the human necessity behind a design Design Thinking helps students to be,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,first year Introduction to Engineering Design course we have combined Design Thinking with Lean Thinking to provide students with more effective tools necessary for any,problem,solving process This attempt appears to have energized the students and helped them with the understanding of the difference between value added and wasteful activities,first year Introduction to Engineering Design course we have combined Design Thinking with Lean Thinking to provide students with more effective tools necessary for any problem solving process This attempt appears to have energized the students and helped them with the understanding of the difference between value added and wasteful activities,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,importance of the engineering design approach SECTION I Introduction As technology advances with exceedingly high speed society faces demands with increasing complexities The 21 century,challenges,require multidisciplinary or interdisciplinary approaches to address them For example recently developed concepts are being are being integrated into everyday life such as microgrids Internet,importance of the engineering design approach SECTION I Introduction As technology advances with exceedingly high speed society faces demands with increasing complexities The 21 century challenges require multidisciplinary or interdisciplinary approaches to address them For example recently developed concepts are being are being integrated into everyday life such as microgrids Internet,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,accuracy agility resilience and reliability These processes should also address climate change pandemics and social unrest which deepen the intricate demands faced by society These,challenges,call for a new generation of designers and problem solvers those who understand innovation well and can apply critical thinking in an insightful and nuanced,accuracy agility resilience and reliability These processes should also address climate change pandemics and social unrest which deepen the intricate demands faced by society These challenges call for a new generation of designers and problem solvers those who understand innovation well and can apply critical thinking in an insightful and nuanced,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,design process Details of the steps in the engineering design process have many variations but all describe the interactive process of 1 Needs assessment 2,problem,formulation 3 Abstraction 4 Analysis and 5 Implementation see Fig 1 Fig 1 Five stages of the design process This iterative process that can be,design process Details of the steps in the engineering design process have many variations but all describe the interactive process of 1 Needs assessment 2 problem formulation 3 Abstraction 4 Analysis and 5 Implementation see Fig 1 Fig 1 Five stages of the design process This iterative process that can be,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,Analysis and 5 Implementation see Fig 1 Fig 1 Five stages of the design process This iterative process that can be applied to almost any,challenge,starts with needs assessment to understate the unsatisfactory situation and the process continues through implementation Lean Thinking is another problem solving approach that has a,Analysis and 5 Implementation see Fig 1 Fig 1 Five stages of the design process This iterative process that can be applied to almost any challenge starts with needs assessment to understate the unsatisfactory situation and the process continues through implementation Lean Thinking is another problem solving approach that has a,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,Design to Lean Thinking The Lean Thinking was used to enhance what the students were learning about Design Thinking Design Thinking is useful in tackling,problems,that are illdefined or unknown by re framing the problem in humancentric ways creating many ideas in brainstorming sessions and adopting a hands on approach,Design to Lean Thinking The Lean Thinking was used to enhance what the students were learning about Design Thinking Design Thinking is useful in tackling problems that are illdefined or unknown by re framing the problem in humancentric ways creating many ideas in brainstorming sessions and adopting a hands on approach,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,many ideas in brainstorming sessions and adopting a hands on approach in prototyping and testing 4 This method of thinking helps engineering students to approach,problems,in such a way that is different from traditional methods One of the key aspects of Design Thinking is to incorporate empathy into the process,many ideas in brainstorming sessions and adopting a hands on approach in prototyping and testing 4 This method of thinking helps engineering students to approach problems in such a way that is different from traditional methods One of the key aspects of Design Thinking is to incorporate empathy into the process,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,pieces of data At our institution the Introduction to Engineering Design is a freshman course whose main mission is to strengthen students critical thinking and,problem,solving skills Students are encouraged to be innovative in proposing solutions or designing products that address a societal or customer demand Innovation problem solving and,pieces of data At our institution the Introduction to Engineering Design is a freshman course whose main mission is to strengthen students critical thinking and problem solving skills Students are encouraged to be innovative in proposing solutions or designing products that address a societal or customer demand Innovation problem solving and,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,a learning process embeds Design Thinking It allows those who are not trained as designers to utilize creative tools to address a vast range of,challenges,Additionally it strengthen them to accept possible repeated failures When boundaries are not set students force themselves to use their creative thinking This first year,a learning process embeds Design Thinking It allows those who are not trained as designers to utilize creative tools to address a vast range of challenges Additionally it strengthen them to accept possible repeated failures When boundaries are not set students force themselves to use their creative thinking This first year,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,starts with students understanding their natural learning preference s 5 Students knowing their learning preference is useful when working in teams and trouble shooting engineering,problems,that are convergent and divergent in nature It also helps students in recognizing their peers learning styles which leads to constructive dialogue and increases collaboration,starts with students understanding their natural learning preference s 5 Students knowing their learning preference is useful when working in teams and trouble shooting engineering problems that are convergent and divergent in nature It also helps students in recognizing their peers learning styles which leads to constructive dialogue and increases collaboration,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,divided into 8 categories see Fig 2 1 Overproduction doing work before it is needed 2 Inventory Items or information not being processed 3 Defects,mistakes,and errors that need to be reworked 4 Transportation unnecessary movements of items or information 5 Waiting wasted time waiting for information or items to,divided into 8 categories see Fig 2 1 Overproduction doing work before it is needed 2 Inventory Items or information not being processed 3 Defects mistakes and errors that need to be reworked 4 Transportation unnecessary movements of items or information 5 Waiting wasted time waiting for information or items to,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,many details such as organizing thoughts managing time and maintaining a direction that leads toward an attainable measurable and time bound goal These would be,challenging,tasks for an experienced professional let alone for freshman students whose high school academic backgrounds fills a wide spectrum Teaching students useful and tangible techniques,many details such as organizing thoughts managing time and maintaining a direction that leads toward an attainable measurable and time bound goal These would be challenging tasks for an experienced professional let alone for freshman students whose high school academic backgrounds fills a wide spectrum Teaching students useful and tangible techniques,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,of Design Thinking terminologies In our pilot trial students were observed to relate to the Lean methodology more naturally Lean Thinking encouraged critical thinking and,problem,solving skills like Design Thinking does but in a different and relatively easier way to understand manner In addition one of the two guided principals,of Design Thinking terminologies In our pilot trial students were observed to relate to the Lean methodology more naturally Lean Thinking encouraged critical thinking and problem solving skills like Design Thinking does but in a different and relatively easier way to understand manner In addition one of the two guided principals,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,engineering related work whether analytical or design focused For this reason the combination of Design Thinking and Lean Thinking prepares engineering students to address lifes,challenges,more efficiently and successfully,engineering related work whether analytical or design focused For this reason the combination of Design Thinking and Lean Thinking prepares engineering students to address lifes challenges more efficiently and successfully,2020
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,Scrum to Support Mobile Application Development Projects in a Just in time Learning Context ABSTRACT Developing mobile applications is a,challenging,endeavor where technology and creativity are essential Agile methodologies seem to be particularly adapted to the development of mobile applications mobile applications have a limited,Scrum to Support Mobile Application Development Projects in a Just in time Learning Context ABSTRACT Developing mobile applications is a challenging endeavor where technology and creativity are essential Agile methodologies seem to be particularly adapted to the development of mobile applications mobile applications have a limited,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,real product owner The mobile application that was developed targeted the growing mobile market in Africa We explored the overall experience adoption of Scrum and,difficulties,encountered by teams using Scrum for the first time The paper reports on our findings and summarizes guidelines for instructors interested in replicating our work,real product owner The mobile application that was developed targeted the growing mobile market in Africa We explored the overall experience adoption of Scrum and difficulties encountered by teams using Scrum for the first time The paper reports on our findings and summarizes guidelines for instructors interested in replicating our work,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,agriculture The industry follows a strict time to market requirement orchestrated by a fierce competition where standards are not stable Developing mobile applications is a,challenging,endeavor where technology and creativity are crucial Applications are developed on one platform and need to be deployed on other ones i e mobile phones,agriculture The industry follows a strict time to market requirement orchestrated by a fierce competition where standards are not stable Developing mobile applications is a challenging endeavor where technology and creativity are crucial Applications are developed on one platform and need to be deployed on other ones i e mobile phones,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,crucial Applications are developed on one platform and need to be deployed on other ones i e mobile phones Each device comes with specificities and,constraints,that have to be accounted for during application development Mobile phones have physical characteristics e g device and screen size and data input mechanism and,crucial Applications are developed on one platform and need to be deployed on other ones i e mobile phones Each device comes with specificities and constraints that have to be accounted for during application development Mobile phones have physical characteristics e g device and screen size and data input mechanism and,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,Product Owner is responsible for achieving business value and is in charge of the product vision represented by a prioritized list of evolving requirements tasks,constraints,and bugs organized in a Product Backlog Requirements are generally described by User Stories The Scrum Delivery team from three to fifteen people develop the,Product Owner is responsible for achieving business value and is in charge of the product vision represented by a prioritized list of evolving requirements tasks constraints and bugs organized in a Product Backlog Requirements are generally described by User Stories The Scrum Delivery team from three to fifteen people develop the,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,Delivery team from three to fifteen people develop the software The Scrum Master guides the team through the process and helps the team to resolve,issues,At the beginning of each Sprint during the Sprint Planning the team commits to complete a certain number of tasks established from the Product Backlog,Delivery team from three to fifteen people develop the software The Scrum Master guides the team through the process and helps the team to resolve issues At the beginning of each Sprint during the Sprint Planning the team commits to complete a certain number of tasks established from the Product Backlog,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,three questions what he she has done since the last meeting what he she hopes to do until the next meeting and what are any,impediments,to achieving the goal The amount of time required to complete each of the tasks is updated in the Sprint Backlog The Scrum Master maintains,three questions what he she has done since the last meeting what he she hopes to do until the next meeting and what are any impediments to achieving the goal The amount of time required to complete each of the tasks is updated in the Sprint Backlog The Scrum Master maintains,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,be developed and provide all developers with the same Scrum experience Three teams of students developed the same application The model was tailored to the,constraints,of the classroom setting e g impossibility of a Daily Scrum Meeting and loss of face to face communications The mobile application to be developed,be developed and provide all developers with the same Scrum experience Three teams of students developed the same application The model was tailored to the constraints of the classroom setting e g impossibility of a Daily Scrum Meeting and loss of face to face communications The mobile application to be developed,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,and loss of face to face communications The mobile application to be developed targeted the African market The study explored the learning curve perception and,difficulties,with Scrum encountered by students who were exposed to Scrum for the first time It drew conclusions on the appropriateness of Scrum in mobile application,and loss of face to face communications The mobile application to be developed targeted the African market The study explored the learning curve perception and difficulties with Scrum encountered by students who were exposed to Scrum for the first time It drew conclusions on the appropriateness of Scrum in mobile application,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,the lecture introducing Scrum one of the Sprint Demo Reviews and Sprint Retrospectives and the final demonstrations Tooling Introducing Scrum into a classroom setting has,constraints,to be accounted for and tooling is crucial to support its efficient implementation For example the Daily Scrum Meetings cannot take place daily and teams,the lecture introducing Scrum one of the Sprint Demo Reviews and Sprint Retrospectives and the final demonstrations Tooling Introducing Scrum into a classroom setting has constraints to be accounted for and tooling is crucial to support its efficient implementation For example the Daily Scrum Meetings cannot take place daily and teams,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,of the team members with the number of hours they will be available during the Sprint user stories decomposed into tasks other tasks related to,bugs,and constraints the estimated time for each task and the time remaining to complete each task Figure 1 presents the Sprint Backlog of one of,of the team members with the number of hours they will be available during the Sprint user stories decomposed into tasks other tasks related to bugs and constraints the estimated time for each task and the time remaining to complete each task Figure 1 presents the Sprint Backlog of one of,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,paper or in Word Sun java net project repository http java net was chosen for its ready to use Subversion capability for version control and,issue,tracking facilities to ensure quality Students created screen capture videos of their software in use using Camstudio http camstudio org Software to be developed To,paper or in Word Sun java net project repository http java net was chosen for its ready to use Subversion capability for version control and issue tracking facilities to ensure quality Students created screen capture videos of their software in use using Camstudio http camstudio org Software to be developed To,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,of the day to a manager Monitoring of the Teams In this study we were interested in exploring the overall experience learning curve perception and,difficulties,with Scrum encountered by teams exposed to Scrum for the first time We also looked at the main difficulties teams faced in mobile application development,of the day to a manager Monitoring of the Teams In this study we were interested in exploring the overall experience learning curve perception and difficulties with Scrum encountered by teams exposed to Scrum for the first time We also looked at the main difficulties teams faced in mobile application development,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,Scrum was perceived as the main reason of the success of the project by all the Scrum roles of the project when time was a,constraint,and mobile application development was learned just in time 3 1 Perspective of the Scrum Master Scrum Learning Curve and Adoption Students were introduced to,Scrum was perceived as the main reason of the success of the project by all the Scrum roles of the project when time was a constraint and mobile application development was learned just in time 3 1 Perspective of the Scrum Master Scrum Learning Curve and Adoption Students were introduced to,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,to Scrum during a two hour lecture by the Scrum Master and applied it directly on project During the first Sprint Planning the teams had,difficulties,decomposing user stories into tasks They did not consider research environment setup design proof of concept testing and code refactoring as tasks Giving examples of,to Scrum during a two hour lecture by the Scrum Master and applied it directly on project During the first Sprint Planning the teams had difficulties decomposing user stories into tasks They did not consider research environment setup design proof of concept testing and code refactoring as tasks Giving examples of,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,responsible for a task whereas in Scrum responsibility is individual and the task owner can seek help from within or outside the team It was,difficult,for the teams to estimate the duration of the tasks in general because of their unfamiliarity with mobile application development and the difficulties of some,responsible for a task whereas in Scrum responsibility is individual and the task owner can seek help from within or outside the team It was difficult for the teams to estimate the duration of the tasks in general because of their unfamiliarity with mobile application development and the difficulties of some,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,what the done status refers to Teams took the notion of commitment very seriously and put all effort in accomplishing their tasks on time The,issue,was on the estimation of the time to accomplish them 3 2 Perspective of the Product Owner Teams did not ask many questions about the,what the done status refers to Teams took the notion of commitment very seriously and put all effort in accomplishing their tasks on time The issue was on the estimation of the time to accomplish them 3 2 Perspective of the Product Owner Teams did not ask many questions about the,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,done and Scrum forced us to stay on track it made us focus on the features we were committed to implementing The most commonly encountered,difficulties,with Scrum were in estimating the time to complete particular tasks and the gap between the Scrum meetings due to the classroom constraints I had,done and Scrum forced us to stay on track it made us focus on the features we were committed to implementing The most commonly encountered difficulties with Scrum were in estimating the time to complete particular tasks and the gap between the Scrum meetings due to the classroom constraints I had,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,with Scrum were in estimating the time to complete particular tasks and the gap between the Scrum meetings due to the classroom constraints I had,problems,evaluating the time of my user stories I guess this is something you improve with experience 3 4 Perspective of the Instructor It was important,with Scrum were in estimating the time to complete particular tasks and the gap between the Scrum meetings due to the classroom constraints I had problems evaluating the time of my user stories I guess this is something you improve with experience 3 4 Perspective of the Instructor It was important,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,the teams were new to Scrum and could not meet often outside class Being the Product Owner and the Instructor of the class was not,problematic,but it would have been better for the students to be able to distinguish the Product Owner from the instructor Students asked lots of technical,the teams were new to Scrum and could not meet often outside class Being the Product Owner and the Instructor of the class was not problematic but it would have been better for the students to be able to distinguish the Product Owner from the instructor Students asked lots of technical,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,be developed to the Product Owner 3 5 Mobile Application Development with Scrum Overall Experience of the Students in Mobile Application Development One of the,difficulties,encountered by the teams was with getting familiar and comfortable with mobile software development which was a new programming area from a technical and usability,be developed to the Product Owner 3 5 Mobile Application Development with Scrum Overall Experience of the Students in Mobile Application Development One of the difficulties encountered by the teams was with getting familiar and comfortable with mobile software development which was a new programming area from a technical and usability,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,with getting familiar and comfortable with mobile software development which was a new programming area from a technical and usability point of view The most,difficult,topics for the students were the implementation linked with record stores that required knowledge of hash tables for efficiency purposes Going from Web application design,with getting familiar and comfortable with mobile software development which was a new programming area from a technical and usability point of view The most difficult topics for the students were the implementation linked with record stores that required knowledge of hash tables for efficiency purposes Going from Web application design,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,knowledge of hash tables for efficiency purposes Going from Web application design to mobile application design requires a paradigm shift in the way to solve,problems,Constraints linked with the screen size have to be accounted for as well as the mobile usability standards Simplicity is particularly important During the first,knowledge of hash tables for efficiency purposes Going from Web application design to mobile application design requires a paradigm shift in the way to solve problems Constraints linked with the screen size have to be accounted for as well as the mobile usability standards Simplicity is particularly important During the first,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,study the use of Scrum was perceived as the main reason of the success of the project by all Scrum roles when time was a,constraint,and mobile application development was learned just in time Scrum permitted teams to focus their work an idea emphasized by the notion of commitment 4,study the use of Scrum was perceived as the main reason of the success of the project by all Scrum roles when time was a constraint and mobile application development was learned just in time Scrum permitted teams to focus their work an idea emphasized by the notion of commitment 4,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,to students of the Scrum teams and that the involvement of a certified Scrum Master is a positive investment Select a real project Identify the,constraints,and assess the risks related to the implementation of such model for the course Select a tooling environment composed of tools for Scrum artifacts development,to students of the Scrum teams and that the involvement of a certified Scrum Master is a positive investment Select a real project Identify the constraints and assess the risks related to the implementation of such model for the course Select a tooling environment composed of tools for Scrum artifacts development,2010
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,approach of learning the agile Scrum methodology provides the students with greater opportunities to work as team communicate and discuss with each other solving the,problem,and designing an acceptable solution in a limited time The successful implementation of this practical approach based on Trello is demonstrated in the next section,approach of learning the agile Scrum methodology provides the students with greater opportunities to work as team communicate and discuss with each other solving the problem and designing an acceptable solution in a limited time The successful implementation of this practical approach based on Trello is demonstrated in the next section,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,working on this extended project and that academic standards and a suitable learning environment is provided to allow the students to investigate an engaging complex,problem,in a safe learning environment This Project Based Learning PBL method assists students in developing teamwork and problem solving skills in addition to the ability,working on this extended project and that academic standards and a suitable learning environment is provided to allow the students to investigate an engaging complex problem in a safe learning environment This Project Based Learning PBL method assists students in developing teamwork and problem solving skills in addition to the ability,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,effectively with a variety of stakeholders at varying levels within the organisation 6 7 The agile Scrum development methodology is selected due to the time,constraint,for the development of the project During this development students are required to maintain a number of records in a collaborative working environment Having been,effectively with a variety of stakeholders at varying levels within the organisation 6 7 The agile Scrum development methodology is selected due to the time constraint for the development of the project During this development students are required to maintain a number of records in a collaborative working environment Having been,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,the progress to date as Trello constantly sends updates of the progress made to the project team This leads to more targeted meetings addressing meaningful,issues,thus reducing wasted time in the meetings As soon as they start their project development and build their user stories as a part of their,the progress to date as Trello constantly sends updates of the progress made to the project team This leads to more targeted meetings addressing meaningful issues thus reducing wasted time in the meetings As soon as they start their project development and build their user stories as a part of their,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,information efficiently and effortlessly 8 Furthermore Students make use of Trello to maintain their Project Development Records PDR which are records of progress thoughts and,issues,held on Trello these can easily be compiled into their PDR for presentation on project completion In addition internal and external tutor contact is maintained,information efficiently and effortlessly 8 Furthermore Students make use of Trello to maintain their Project Development Records PDR which are records of progress thoughts and issues held on Trello these can easily be compiled into their PDR for presentation on project completion In addition internal and external tutor contact is maintained,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,where coaching intervention is required by academic staff it can be provided promptly through Trello Overall the experience of using Trello for managing a complex,problem,solving challenge has been successful with overall project marks improving from one year to the next Moreover it has brought together skills they have learned,where coaching intervention is required by academic staff it can be provided promptly through Trello Overall the experience of using Trello for managing a complex problem solving challenge has been successful with overall project marks improving from one year to the next Moreover it has brought together skills they have learned,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,between the students education and the real practical experiences in the industry Software engineering students in universities or colleges have to be prepared for real,challenges,they may face in developing web applications as many other engineering disciplines 18 19 Web application encompasses everything from a simple Web page to a,between the students education and the real practical experiences in the industry Software engineering students in universities or colleges have to be prepared for real challenges they may face in developing web applications as many other engineering disciplines 18 19 Web application encompasses everything from a simple Web page to a,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,application is crucial in the current market 3 6 Agile approaches have proved their applicability and efficiency for this class of applications due to the,challenges,associated with Web based applications development such as short development life cycle times small multidisciplinary development teams continuous evolution immediacy and cost of change 7,application is crucial in the current market 3 6 Agile approaches have proved their applicability and efficiency for this class of applications due to the challenges associated with Web based applications development such as short development life cycle times small multidisciplinary development teams continuous evolution immediacy and cost of change 7,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,rabidly web application project by simulation a modern real world environment This would help students to distinguish between various developments processes and identify the possible,drawbacks,and problems The project takes place over the 12 weeks of course term includes multiple releases and students should work in teams of Three members,rabidly web application project by simulation a modern real world environment This would help students to distinguish between various developments processes and identify the possible drawbacks and problems The project takes place over the 12 weeks of course term includes multiple releases and students should work in teams of Three members,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,engineering 3 Rapid development for web application through simulating a real world environment 4 Distinguish between various development approaches and identify the possible benefits and,drawbacks,for each Web engineering process 6 involves set of activities that are applicable to all Web application projects the activities are iterated and repeated for,engineering 3 Rapid development for web application through simulating a real world environment 4 Distinguish between various development approaches and identify the possible benefits and drawbacks for each Web engineering process 6 involves set of activities that are applicable to all Web application projects the activities are iterated and repeated for,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,students results V IMPACT OF AGILE METHODS IN EDUCATION Teaching Software Engineering has never been a straightforward process traditional teaching and educational methods have certain,limitations,for interactive courses such as programming or software development After years of exploring industry requirements it has been notices that agile approach possesses significant characteristics,students results V IMPACT OF AGILE METHODS IN EDUCATION Teaching Software Engineering has never been a straightforward process traditional teaching and educational methods have certain limitations for interactive courses such as programming or software development After years of exploring industry requirements it has been notices that agile approach possesses significant characteristics,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,appropriate for software development done in universities and colleges as course or final year graduation projects Students in programming courses develop programs for a specific,problems,besides in most universitys projects a good quality working software that is delivered in tight time is a must In these scenarios agile practices help,appropriate for software development done in universities and colleges as course or final year graduation projects Students in programming courses develop programs for a specific problems besides in most universitys projects a good quality working software that is delivered in tight time is a must In these scenarios agile practices help,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,studies observe Agile practices used in education and explore its impact to learning the results indicate positive influence on students skill specially on students with,weak,programming skills Moreover it has a big effect on average variance between their project mates skills In addition it positively influences on higher marks for,studies observe Agile practices used in education and explore its impact to learning the results indicate positive influence on students skill specially on students with weak programming skills Moreover it has a big effect on average variance between their project mates skills In addition it positively influences on higher marks for,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,approaches respectively Both teams have positive feedbacks regarding the communication between team members organization to work and the methodology efficiency which helped to find out,bugs,easily and work with high degree of autonomy Most XP team members felt it was enjoyable learning way while around Half of scrum members have,approaches respectively Both teams have positive feedbacks regarding the communication between team members organization to work and the methodology efficiency which helped to find out bugs easily and work with high degree of autonomy Most XP team members felt it was enjoyable learning way while around Half of scrum members have,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,approach in a way that students can effectively employ in their final project requires the use of some additional practical aid which is always a,challenging,task for teaching staff Employing commercial tools may not be suitable due to additional financial cost time and learning curve for students This paper proposes,approach in a way that students can effectively employ in their final project requires the use of some additional practical aid which is always a challenging task for teaching staff Employing commercial tools may not be suitable due to additional financial cost time and learning curve for students This paper proposes,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,SE module but for use in the development of their final year software project during the course Software project development is a demanding precise and,challenging,phase for students who are undertaking their courses at university Moreover they are always time constrained with limited time from design of their projects to,SE module but for use in the development of their final year software project during the course Software project development is a demanding precise and challenging phase for students who are undertaking their courses at university Moreover they are always time constrained with limited time from design of their projects to,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,Scrum in a way that students can effectively employ in their final project requires some additional creativity fun and practical aids which is always a,challenging,task for teaching staff 6 7 8 Employing commercial tools may not be suitable due to many reasons such as adaptability additional financial cost time,Scrum in a way that students can effectively employ in their final project requires some additional creativity fun and practical aids which is always a challenging task for teaching staff 6 7 8 Employing commercial tools may not be suitable due to many reasons such as adaptability additional financial cost time,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,the background when producing a software development project These include user experiences and UIs being designed roadmaps are planned backlogs are built code is written,bugs,are caught and fixed However students as engineers learn to identify problems and design solutions to ensure everything works when required During the sprints it,the background when producing a software development project These include user experiences and UIs being designed roadmaps are planned backlogs are built code is written bugs are caught and fixed However students as engineers learn to identify problems and design solutions to ensure everything works when required During the sprints it,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,yet another last minute request for a quick change to the plan They utilise Trello to set sprint tasks and run efficient retrospectives collaborate on,bug,fixes to celebrating product deployments taking part in the daily ceremonies conducted by the scrum master Students can easily monitor product development through collaborative communication,yet another last minute request for a quick change to the plan They utilise Trello to set sprint tasks and run efficient retrospectives collaborate on bug fixes to celebrating product deployments taking part in the daily ceremonies conducted by the scrum master Students can easily monitor product development through collaborative communication,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,final presentation of their developed software project in Trello is organised as a game competition to offer them some incentives and encouraging them to work,hard,as a team and learn from each others work The students are given the opportunity to act in the different roles during the scrum development,final presentation of their developed software project in Trello is organised as a game competition to offer them some incentives and encouraging them to work hard as a team and learn from each others work The students are given the opportunity to act in the different roles during the scrum development,2019
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,combining them The authors present ideas in how to combine them in an even more powerful development method called Extreme Usability XU The most important,issue,of this paper is that the authors have embedded their ideas into Software Engineering education 1 Extreme Programming XP XP is a software development process,combining them The authors present ideas in how to combine them in an even more powerful development method called Extreme Usability XU The most important issue of this paper is that the authors have embedded their ideas into Software Engineering education 1 Extreme Programming XP XP is a software development process,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,have embedded their ideas into Software Engineering education 1 Extreme Programming XP XP is a software development process which aims to solve frequent software development,problems,The extreme in the name refers to the fact that well known best practices in software development are brought to an extreme if testing is,have embedded their ideas into Software Engineering education 1 Extreme Programming XP XP is a software development process which aims to solve frequent software development problems The extreme in the name refers to the fact that well known best practices in software development are brought to an extreme if testing is,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,specific task is presented and examined how long does it take the end user to complete the task Time to perform a Task and which,difficulties,arise during the interaction cognitive overload Investigations showed that the end users make more statements when working with such paper pencil models than when they,specific task is presented and examined how long does it take the end user to complete the task Time to perform a Task and which difficulties arise during the interaction cognitive overload Investigations showed that the end users make more statements when working with such paper pencil models than when they,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,with a model on the computer or with a running system 8 The results from these early usability tests with which approximately 80 of all,difficulties,are discovered 9 10 flow immediately into the development 11 12 From the beginning analysis design rough conception prototyping usability testing close communication is achieved,with a model on the computer or with a running system 8 The results from these early usability tests with which approximately 80 of all difficulties are discovered 9 10 flow immediately into the development 11 12 From the beginning analysis design rough conception prototyping usability testing close communication is achieved,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,present in the traditional sequential software development model as documentation are actually implemented and tested This early testing leads to a high probability of early,error,recognition which lowers the cost of subsequent error correction enormously The cyclic iterative procedure brings the software developers rapidly examinable results more motivation and finally,present in the traditional sequential software development model as documentation are actually implemented and tested This early testing leads to a high probability of early error recognition which lowers the cost of subsequent error correction enormously The cyclic iterative procedure brings the software developers rapidly examinable results more motivation and finally,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,in the quality of the software process by way of immediate end user feedback The productivity of the team is thereby increased Above all the,risk,of a project failure is reduced since experimentally confirmed results also offer a measure of security However the danger with this method lays in the,in the quality of the software process by way of immediate end user feedback The productivity of the team is thereby increased Above all the risk of a project failure is reduced since experimentally confirmed results also offer a measure of security However the danger with this method lays in the,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,for the courage to build imperfect prototypes On the other hand there is a danger that certain details which can only be implemented with great,difficulty,are omitted because they appear trivial and subsequently increase development costs Another disadvantage with this method is the difficulty in creating requirement specifications since these,for the courage to build imperfect prototypes On the other hand there is a danger that certain details which can only be implemented with great difficulty are omitted because they appear trivial and subsequently increase development costs Another disadvantage with this method is the difficulty in creating requirement specifications since these,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,method is the difficulty in creating requirement specifications since these would have to be adapted after each cycle which can make fashioning a contract extremely,difficult,3 Extreme Usability XU In XP this danger of dissipating ones energies in details developers are particularly susceptible and the clients becomes caught up in,method is the difficulty in creating requirement specifications since these would have to be adapted after each cycle which can make fashioning a contract extremely difficult 3 Extreme Usability XU In XP this danger of dissipating ones energies in details developers are particularly susceptible and the clients becomes caught up in,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,Extreme Usability XU could become such that all the best practices of UE are kept in the XP process during the planning games with a,restriction,of the usability aspects in the next iteration and the equal treatment of Usability and Functionality The advantage would be that with the XP process,Extreme Usability XU could become such that all the best practices of UE are kept in the XP process during the planning games with a restriction of the usability aspects in the next iteration and the equal treatment of Usability and Functionality The advantage would be that with the XP process,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,the On Site Customer XP principle Obviously UE experience for all developers is an advantage in every project A practice of XP which is often,difficult,to achieve in a realistic setting is the customer on site because of the heavy time restraints this poses on the customer In XU this,the On Site Customer XP principle Obviously UE experience for all developers is an advantage in every project A practice of XP which is often difficult to achieve in a realistic setting is the customer on site because of the heavy time restraints this poses on the customer In XU this,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,to achieve in a realistic setting is the customer on site because of the heavy time restraints this poses on the customer In XU this,difficulty,could be transformed into an advantage by allowing different customers to take part in different iterations if not releases thus solving two problems at once,to achieve in a realistic setting is the customer on site because of the heavy time restraints this poses on the customer In XU this difficulty could be transformed into an advantage by allowing different customers to take part in different iterations if not releases thus solving two problems at once,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,aspect but is slightly different for each team in two releases the first corresponding to two iterations the second to only one due to time,limitations,They will work together in approximately 8 blocks of 8 hours each Customers will be represented by students that are particularly creative in defining new,aspect but is slightly different for each team in two releases the first corresponding to two iterations the second to only one due to time limitations They will work together in approximately 8 blocks of 8 hours each Customers will be represented by students that are particularly creative in defining new,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,real life customers into the software engineering education This would be a breakthrough due to the fact that the students would get immense insight into,problems,involved with real life customers Teams will observe all 12 XP practices adapted to the short time available for the overall project e g the,real life customers into the software engineering education This would be a breakthrough due to the fact that the students would get immense insight into problems involved with real life customers Teams will observe all 12 XP practices adapted to the short time available for the overall project e g the,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,assess as many of the teams as possible 4 XU in Software Engineering Education In order to create awareness of the importance of integrating Usability,issues,into Software Engineering SE education much research is necessary Most of all we must breach the gap between theory and practice by application of real,assess as many of the teams as possible 4 XU in Software Engineering Education In order to create awareness of the importance of integrating Usability issues into Software Engineering SE education much research is necessary Most of all we must breach the gap between theory and practice by application of real,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,learn pure development of systems using different development processes from the V Model to RUP 13 After these two years of programming it is very,hard,to sensitize the students for any sustainable software features such as quality aspects and especially usability Software quality assurance includes much more than software testing,learn pure development of systems using different development processes from the V Model to RUP 13 After these two years of programming it is very hard to sensitize the students for any sustainable software features such as quality aspects and especially usability Software quality assurance includes much more than software testing,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,more than software testing 14 To improve this situation we suggest a two step iteration of the computer science curricula in Austria 1 Explain potential,risks,of a lack of usability Risks can be seen from a technical perspective e g necessary redesign if the customer refuses to accept the software,more than software testing 14 To improve this situation we suggest a two step iteration of the computer science curricula in Austria 1 Explain potential risks of a lack of usability Risks can be seen from a technical perspective e g necessary redesign if the customer refuses to accept the software,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,of a lack of usability Risks can be seen from a technical perspective e g necessary redesign if the customer refuses to accept the software,risks,can also be seen from a business perspective including loss of sale loss of brand reputation and market share 15 2 Integrating UE in the,of a lack of usability Risks can be seen from a technical perspective e g necessary redesign if the customer refuses to accept the software risks can also be seen from a business perspective including loss of sale loss of brand reputation and market share 15 2 Integrating UE in the,2005
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,semester long group project work to provide several practice opportunities Instructors often find that the students are not enthusiastic about learning complex SE concepts and,problems,1 Instructors also encounter challenges concerning using case studies project work topic selection keeping up with technology changes setting up a development environment and conveying,semester long group project work to provide several practice opportunities Instructors often find that the students are not enthusiastic about learning complex SE concepts and problems 1 Instructors also encounter challenges concerning using case studies project work topic selection keeping up with technology changes setting up a development environment and conveying,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,in Section 4 The remaining two sections explain the feedback received from students and lessons learned 3 PROPOSED APPROACH The proposed approach attempts to address,challenges,that often arise in teaching and learning SE courses with a greater emphasis on team project work following agile methodologies Typical SE courses are offered,in Section 4 The remaining two sections explain the feedback received from students and lessons learned 3 PROPOSED APPROACH The proposed approach attempts to address challenges that often arise in teaching and learning SE courses with a greater emphasis on team project work following agile methodologies Typical SE courses are offered,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,environment and possibly interact with other existing information systems Table 3 Revised course structure with a weekly lesson plan Week Topics covered W1 Introduction SE,challenges,in SE Types of software systems Agile project management and Scrum Team processes and responsibilities Scrum roles User stories Writing user stories Development tools W2,environment and possibly interact with other existing information systems Table 3 Revised course structure with a weekly lesson plan Week Topics covered W1 Introduction SE challenges in SE Types of software systems Agile project management and Scrum Team processes and responsibilities Scrum roles User stories Writing user stories Development tools W2,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,concepts validation verification type of testing Test cases and data Equivalence partitioning Decision tables Test case and data preparation W11 Software testing unit testing cyclomatic,complexity,integration testing Integration testing strategies Interface testing Acceptance testing Regression testing Testing tools Testing web and mobile apps software quality assurance vs software quality control,concepts validation verification type of testing Test cases and data Equivalence partitioning Decision tables Test case and data preparation W11 Software testing unit testing cyclomatic complexity integration testing Integration testing strategies Interface testing Acceptance testing Regression testing Testing tools Testing web and mobile apps software quality assurance vs software quality control,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,feedback indicated that a team size of five average team size response of 4 851 is a good size for the project work considering the,challenges,in collaboration and coordination among the team members Three sprints with a three week sprint duration were deemed adequate for project work Table 4 Feedback,feedback indicated that a team size of five average team size response of 4 851 is a good size for the project work considering the challenges in collaboration and coordination among the team members Three sprints with a three week sprint duration were deemed adequate for project work Table 4 Feedback,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,three week sprint duration were deemed adequate for project work Table 4 Feedback on the project work Questionnaire item Mean Std Dev Project work was,challenging,4 255 0 820 I enjoyed working on the project 4 404 0 742 Three week duration for each sprint is appropriate 3 787 1,three week sprint duration were deemed adequate for project work Table 4 Feedback on the project work Questionnaire item Mean Std Dev Project work was challenging 4 255 0 820 I enjoyed working on the project 4 404 0 742 Three week duration for each sprint is appropriate 3 787 1,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,to such course offerings Although the content and sequence of topics covered were found to be appropriate and well appreciated by the students the real,difficulty,was in effectively aligning course material with the project work schedule During the first quarter the emphasis was on covering the essentials appropriately to enable,to such course offerings Although the content and sequence of topics covered were found to be appropriate and well appreciated by the students the real difficulty was in effectively aligning course material with the project work schedule During the first quarter the emphasis was on covering the essentials appropriately to enable,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,the instructor was helpful Expectations of system functionality to be delivered after each sprint as described in the above section turned out to be quite,challenging,to meet by most teams Regarding the design and implementation of the project work the following suggestions are made Given the open ended nature of,the instructor was helpful Expectations of system functionality to be delivered after each sprint as described in the above section turned out to be quite challenging to meet by most teams Regarding the design and implementation of the project work the following suggestions are made Given the open ended nature of,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,the design and implementation of the project work the following suggestions are made Given the open ended nature of projects some teams may venture into,challenging,projects that need significant development effort Since the typical focus of most SE courses is to ensure that the students learn and practice a development,the design and implementation of the project work the following suggestions are made Given the open ended nature of projects some teams may venture into challenging projects that need significant development effort Since the typical focus of most SE courses is to ensure that the students learn and practice a development,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,regard can be i basic set up of the development and deployment environment with basic CRUD functionality of two to four simple classes from the,problem,domain in the first sprint ii implementation of transaction functionality with business logic in the second sprint and c implementation of reporting and dashboarding functionality,regard can be i basic set up of the development and deployment environment with basic CRUD functionality of two to four simple classes from the problem domain in the first sprint ii implementation of transaction functionality with business logic in the second sprint and c implementation of reporting and dashboarding functionality,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,set up an online discussion forum to provide answers to frequently asked questions on the usage of various tools and to respond to any specific,difficulties,It is possible to encourage students to provide guidance and support via such a forum especially in large classes by offering incentives such as marks,set up an online discussion forum to provide answers to frequently asked questions on the usage of various tools and to respond to any specific difficulties It is possible to encourage students to provide guidance and support via such a forum especially in large classes by offering incentives such as marks,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,equally toward the project work in practice some teams may have one or two members contributing very little One possible way of preventing such a,problem,is to inform the students that the students of a team may contribute at different levels in different sprints e g those who contribute less,equally toward the project work in practice some teams may have one or two members contributing very little One possible way of preventing such a problem is to inform the students that the students of a team may contribute at different levels in different sprints e g those who contribute less,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,the second sprint may contribute more in the last sprint In addition the instructor may privately and in confidence meet the students of teams expressing,poor,contributions to determine specific contributions and adjust the project scores for students of such teams 6 CONCLUSION The findings from implementing the restructuring of an,the second sprint may contribute more in the last sprint In addition the instructor may privately and in confidence meet the students of teams expressing poor contributions to determine specific contributions and adjust the project scores for students of such teams 6 CONCLUSION The findings from implementing the restructuring of an,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,visibility into the progress of various groups will benefit the instructors both in continual monitoring progress and in feedback provision Although there will be some,challenges,in implementing the proposed structure the benefits of improved student engagement and learning outweigh the costs of addressing the challenges,visibility into the progress of various groups will benefit the instructors both in continual monitoring progress and in feedback provision Although there will be some challenges in implementing the proposed structure the benefits of improved student engagement and learning outweigh the costs of addressing the challenges,2022
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,This study discusses how games can help classroom teaching Also how the concepts that are taught through games can be used to solve real world,problems,Agile software development has been taught to graduate students in the Software Engineering program using games The games used in this study are the ones,This study discusses how games can help classroom teaching Also how the concepts that are taught through games can be used to solve real world problems Agile software development has been taught to graduate students in the Software Engineering program using games The games used in this study are the ones,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,Can game based teaching happen in a classroom environment RQ 2 Can students understand and apply the concepts taught through games to solve real world,problems,IV TEACHING METHODOLOGY The pedagogy used in teaching this class was a unique combination of using games and Agile principles There are four games discussed,Can game based teaching happen in a classroom environment RQ 2 Can students understand and apply the concepts taught through games to solve real world problems IV TEACHING METHODOLOGY The pedagogy used in teaching this class was a unique combination of using games and Agile principles There are four games discussed,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,the end of each iteration students had two minutes of retrospective discussion While passing the ball if it was dropped that was considered as a,bug,and the ball had to start all over again The results of ballpoint game are presented in table II B LegoGame Lego were used to,the end of each iteration students had two minutes of retrospective discussion While passing the ball if it was dropped that was considered as a bug and the ball had to start all over again The results of ballpoint game are presented in table II B LegoGame Lego were used to,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,Minute Sprint Game to Develop a Retail Calculator The game involved developing a retail calculator using the iterative and incremental process It involved splitting the,problem,into eight sprints of eight minutes each delivering a feature after each iteration Students were divided in groups of three The specifications of the calculator,Minute Sprint Game to Develop a Retail Calculator The game involved developing a retail calculator using the iterative and incremental process It involved splitting the problem into eight sprints of eight minutes each delivering a feature after each iteration Students were divided in groups of three The specifications of the calculator,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,helping them to remember the concepts that were taught in class Most students easily learned Agile concepts through games and even the ones who had,difficulty,grasping the concepts at first ended up finding the games valuable One student said the different set up took a little while to get the,helping them to remember the concepts that were taught in class Most students easily learned Agile concepts through games and even the ones who had difficulty grasping the concepts at first ended up finding the games valuable One student said the different set up took a little while to get the,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,not look or feel like a traditional classroom Students were ready to team up for the game which means they enjoyed it and had no,problems,working in teams The following comments from students answers RQ1 Allows and encourages class participation Relates every topic to real world scenarios which helps understand,not look or feel like a traditional classroom Students were ready to team up for the game which means they enjoyed it and had no problems working in teams The following comments from students answers RQ1 Allows and encourages class participation Relates every topic to real world scenarios which helps understand,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,concepts and skills better than the traditional way of teaching RQ2 Can students understand and apply the concepts taught through games to solve real world,problems,Students were asked questions in class related to the concepts and they were prepared to answer Students were able to relate the concepts with real,concepts and skills better than the traditional way of teaching RQ2 Can students understand and apply the concepts taught through games to solve real world problems Students were asked questions in class related to the concepts and they were prepared to answer Students were able to relate the concepts with real,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,were asked questions in class related to the concepts and they were prepared to answer Students were able to relate the concepts with real world,problems,through their final project and lighting talks Fig 1 Shows the performance of the class in their writing project and game based projects Fig 1,were asked questions in class related to the concepts and they were prepared to answer Students were able to relate the concepts with real world problems through their final project and lighting talks Fig 1 Shows the performance of the class in their writing project and game based projects Fig 1,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,various learning aids The feedback from students showed that they enjoyed the course and would use the concepts taught through games to solve real world,problems,such as The variety of exercises and learning modes helped to apply for practical application The games conducted in the class were highly relevant to,various learning aids The feedback from students showed that they enjoyed the course and would use the concepts taught through games to solve real world problems such as The variety of exercises and learning modes helped to apply for practical application The games conducted in the class were highly relevant to,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,game 8 minute sprint game Walk up game Lightening talks Midterm Discussion board Final presentation Agile Terminology Scrum estimation scrum retrospective sprint review meeting and,bug,fixes Team dynamic team work trust and transparency Customer satisfaction sprint review sprint retrospective sprint planning User story slicing time management customer satisfaction test driven,game 8 minute sprint game Walk up game Lightening talks Midterm Discussion board Final presentation Agile Terminology Scrum estimation scrum retrospective sprint review meeting and bug fixes Team dynamic team work trust and transparency Customer satisfaction sprint review sprint retrospective sprint planning User story slicing time management customer satisfaction test driven,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,are as follows First the assignment questions need to change Although most of the assignments were used from their textbook students did not find them,challenging,Second the students did not like the discussion board DB They thought it was too much work in comparison to the credit they received In,are as follows First the assignment questions need to change Although most of the assignments were used from their textbook students did not find them challenging Second the students did not like the discussion board DB They thought it was too much work in comparison to the credit they received In,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,reminders still tried to complete the DBs requirement in one sitting Third the students did not do well in listing the working agreement They had,difficulties,understanding the concept that a software team could be flexible Spring 2019 was the first semester this course was offered for an 8 week session,reminders still tried to complete the DBs requirement in one sitting Third the students did not do well in listing the working agreement They had difficulties understanding the concept that a software team could be flexible Spring 2019 was the first semester this course was offered for an 8 week session,2019
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,how XP in particular can be made more secure This topic generates a lot of enthusiasm among the students The students seem to enjoy the,challenge,of creating new ideas to improve the manner in which XP addresses security issues Students have come up with many creative and stimulating ideas about,how XP in particular can be made more secure This topic generates a lot of enthusiasm among the students The students seem to enjoy the challenge of creating new ideas to improve the manner in which XP addresses security issues Students have come up with many creative and stimulating ideas about,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,necessity for what some have called big up front design This paper presents some of the creative ideas students have come up with regarding this,issue,and discusses the team projects that give students the opportunity to explore security issues for agile processes in some depth 1 Introduction Around the turn,necessity for what some have called big up front design This paper presents some of the creative ideas students have come up with regarding this issue and discusses the team projects that give students the opportunity to explore security issues for agile processes in some depth 1 Introduction Around the turn,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,basic goals of this course were to introduce students to a variety of software processes and to get students to think about the strengths and,weaknesses,of the various processes that are discussed However within a year or two after he introduced eXtreme Programming into his software engineering course the author,basic goals of this course were to introduce students to a variety of software processes and to get students to think about the strengths and weaknesses of the various processes that are discussed However within a year or two after he introduced eXtreme Programming into his software engineering course the author,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,shortfalls and also to think about ways to improve XP so that the shortfalls might be overcome The author believes that this is an interesting,problem,and he has seen that it generates a lot of interest in our classroom discussion as we shall see later in this paper First this,shortfalls and also to think about ways to improve XP so that the shortfalls might be overcome The author believes that this is an interesting problem and he has seen that it generates a lot of interest in our classroom discussion as we shall see later in this paper First this,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,overview of the course in order to provide the context in which this discussion takes place The paper then turns its attention to how security,issues,are introduced into the course The main focus shall be on how the course gets students to think about how XP might be made more,overview of the course in order to provide the context in which this discussion takes place The paper then turns its attention to how security issues are introduced into the course The main focus shall be on how the course gets students to think about how XP might be made more,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,and Abdelshafi 6 discuss how Scrum was successfully introduced into their corporate environment with the help of their Scrum mentor Ken Schwaber Because of time,limitations,we discuss TSP only briefly and then move on to discuss the SEIs CMM now the CMMI framework for evaluating process maturity An excellent paper,and Abdelshafi 6 discuss how Scrum was successfully introduced into their corporate environment with the help of their Scrum mentor Ken Schwaber Because of time limitations we discuss TSP only briefly and then move on to discuss the SEIs CMM now the CMMI framework for evaluating process maturity An excellent paper,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,discussion of software processes with a brief introduction to Open Source software development After completing our discussion of software processes we move on to professional,issues,for software engineers We discuss well known software disasters like the Therac 25 accidents discussed by Leveson et al 8 and why software fails using,discussion of software processes with a brief introduction to Open Source software development After completing our discussion of software processes we move on to professional issues for software engineers We discuss well known software disasters like the Therac 25 accidents discussed by Leveson et al 8 and why software fails using,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,make an effort to provide software that is secure or perhaps we should say reasonably secure The course then moves on to discuss work culture,issues,in software engineering with an emphasis on the ideas of McLendon and Weinberg 11 relating to incongruent work cultures and blaming in the software development,make an effort to provide software that is secure or perhaps we should say reasonably secure The course then moves on to discuss work culture issues in software engineering with an emphasis on the ideas of McLendon and Weinberg 11 relating to incongruent work cultures and blaming in the software development,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,Weinberg 11 relating to incongruent work cultures and blaming in the software development workplace The course then moves on to a discussion of quality assurance,issues,An important paper that we use in the quality assurance section of the course is Talby et al 12 Talby and his co authors describe,Weinberg 11 relating to incongruent work cultures and blaming in the software development workplace The course then moves on to a discussion of quality assurance issues An important paper that we use in the quality assurance section of the course is Talby et al 12 Talby and his co authors describe,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,this XP project in a rigorous and intense manner The article by Talby et al provides a good segue into a discussion of how security,issues,can be integrated into a software process which then leads into our discussion of how agile processes XP in particular can be made more secure,this XP project in a rigorous and intense manner The article by Talby et al provides a good segue into a discussion of how security issues can be integrated into a software process which then leads into our discussion of how agile processes XP in particular can be made more secure,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,which then leads into our discussion of how agile processes XP in particular can be made more secure However before moving on to how these,issues,are treated in the course in Sections 4 5 and 6 lets put in a few words about the War 3 The War The diverse,which then leads into our discussion of how agile processes XP in particular can be made more secure However before moving on to how these issues are treated in the course in Sections 4 5 and 6 lets put in a few words about the War 3 The War The diverse,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,6 lets put in a few words about the War 3 The War The diverse software processes that are discussed in this course are central,issues,in what some software engineers are calling the War The War is the conflict between the hard core data collection and documentation folks on one,6 lets put in a few words about the War 3 The War The diverse software processes that are discussed in this course are central issues in what some software engineers are calling the War The War is the conflict between the hard core data collection and documentation folks on one,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,the great burden they placed on developers and indicated that workplace dissatisfaction was one of the consequences of the need to create massive documents that,hardly,anyone would ever read The arguments and counterarguments relating to the War are discussed in several web sites including 14 The war also manifested in,the great burden they placed on developers and indicated that workplace dissatisfaction was one of the consequences of the need to create massive documents that hardly anyone would ever read The arguments and counterarguments relating to the War are discussed in several web sites including 14 The war also manifested in,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,better the resulting system Unfortunately extreme programming XP seems to run counter to this old fashioned view In our opinion XP will probably have a,negative,impact on software security 16 p 35 4 Introducing security into the course Students are introduced to the War early on in the course As,better the resulting system Unfortunately extreme programming XP seems to run counter to this old fashioned view In our opinion XP will probably have a negative impact on software security 16 p 35 4 Introducing security into the course Students are introduced to the War early on in the course As,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,previous section an important point of contention in this War is whether agile processes are appropriate for building secure software Before we can explore this,issue,in depth we need to look at what various experts have to say about incorporating security concerns into the software development process Viega and McGraw,previous section an important point of contention in this War is whether agile processes are appropriate for building secure software Before we can explore this issue in depth we need to look at what various experts have to say about incorporating security concerns into the software development process Viega and McGraw,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,a correlation between low defect densities in the code and good security Viega and McGraw in 16 provide an excellent framework for discussing how security,issues,can be integrated into the software development process They discuss the importance of developing a security policy early on in the requirements analysis phase They,a correlation between low defect densities in the code and good security Viega and McGraw in 16 provide an excellent framework for discussing how security issues can be integrated into the software development process They discuss the importance of developing a security policy early on in the requirements analysis phase They,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,integrated into the software development process They discuss the importance of developing a security policy early on in the requirements analysis phase They discuss how,risk,assessment needs to be integrated into the requirements analysis phase so that a complete risk assessment is completed before the project can move on to,integrated into the software development process They discuss the importance of developing a security policy early on in the requirements analysis phase They discuss how risk assessment needs to be integrated into the requirements analysis phase so that a complete risk assessment is completed before the project can move on to,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,our next topic agile processes and security 5 Agile processes and security the Matrix The author does his best to get students to see the,issue,of agile processes and security as an interesting one In particular looking at this issue gives us an opportunity to be creative in the sense,our next topic agile processes and security 5 Agile processes and security the Matrix The author does his best to get students to see the issue of agile processes and security as an interesting one In particular looking at this issue gives us an opportunity to be creative in the sense,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,By the time we get to the class that is devoted specifically to this topic many students do seem to be generally interested in this,issue,and try to contribute creative ideas to our in class discussion The initial discussion centers around a handout that the author calls the Matrix The,By the time we get to the class that is devoted specifically to this topic many students do seem to be generally interested in this issue and try to contribute creative ideas to our in class discussion The initial discussion centers around a handout that the author calls the Matrix The,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,In addition students might see situations in which the security principles and XP practices are in synch The author has found that students sometimes have,difficulty,seeing these relationships They seem to get more turned on when the discussion turns to suggesting ways in which XP can be improved in terms,In addition students might see situations in which the security principles and XP practices are in synch The author has found that students sometimes have difficulty seeing these relationships They seem to get more turned on when the discussion turns to suggesting ways in which XP can be improved in terms,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,One goal of the security engineer would be to educate both the developers and the customer about how the project would be impacted by security,issues,and concerns This kind of input from the security engineer would occur during all of the phases of the project Another interesting idea that students,One goal of the security engineer would be to educate both the developers and the customer about how the project would be impacted by security issues and concerns This kind of input from the security engineer would occur during all of the phases of the project Another interesting idea that students,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,might be developed by the customer as a result of the customers interaction with the security engineer The security engineer could see the implicit security,issues,involved in the functionality that the customer describes and thus the security engineer could develop security stories as a way of specifying the projects security,might be developed by the customer as a result of the customers interaction with the security engineer The security engineer could see the implicit security issues involved in the functionality that the customer describes and thus the security engineer could develop security stories as a way of specifying the projects security,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,specifying the projects security policy In other words security stories would play a major role in determining the security policy for the project A big,issue,for XP Secure is how project planning would be conducted Here is the basic framework that emerges from our in class discussion of project planning,specifying the projects security policy In other words security stories would play a major role in determining the security policy for the project A big issue for XP Secure is how project planning would be conducted Here is the basic framework that emerges from our in class discussion of project planning,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,Secure First of all user stories and security stories would need to be prioritized which is the usual practice at the release planning meeting However,risk,assessment must be part of this process of prioritizing the user stories and the security stories The security stories that are agreed upon during the,Secure First of all user stories and security stories would need to be prioritized which is the usual practice at the release planning meeting However risk assessment must be part of this process of prioritizing the user stories and the security stories The security stories that are agreed upon during the,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,process of prioritizing the user stories and the security stories The security stories that are agreed upon during the release planning meeting with the appropriate,risk,assessment having been performed will constitute the security policy for the project just as the user stories will define the functionality of the project One,process of prioritizing the user stories and the security stories The security stories that are agreed upon during the release planning meeting with the appropriate risk assessment having been performed will constitute the security policy for the project just as the user stories will define the functionality of the project One,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,having been performed will constitute the security policy for the project just as the user stories will define the functionality of the project One important,issue,that gets raised at this point in the discussion is whether the security policy can be decided upon up front at the release planning meeting,having been performed will constitute the security policy for the project just as the user stories will define the functionality of the project One important issue that gets raised at this point in the discussion is whether the security policy can be decided upon up front at the release planning meeting,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,front design process Also will the security policy make demands upon the developers that will make the traditional XP design process inappropriate Will larger architectural,issues,need to be discussed right up front in the XP Secure process or can these decisions be made later on as in the usual XP,front design process Also will the security policy make demands upon the developers that will make the traditional XP design process inappropriate Will larger architectural issues need to be discussed right up front in the XP Secure process or can these decisions be made later on as in the usual XP,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,the project as described in the afore mentioned paper by Apvrille et al 18 Students wonder whether XP allows for adequate attention being paid to,issues,in software architecture that relate to trust assumptions and relationships between the software components They question whether a highly iterative process can handle these problems,the project as described in the afore mentioned paper by Apvrille et al 18 Students wonder whether XP allows for adequate attention being paid to issues in software architecture that relate to trust assumptions and relationships between the software components They question whether a highly iterative process can handle these problems,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,product release 7 Conclusions Agile processes are increasingly important in the world of software development especially in this age of Net oriented software An important,issue,is how agile processes like eXtreme Programming and Scrum can be modified to address important security issues This paper looked at how the author gets,product release 7 Conclusions Agile processes are increasingly important in the world of software development especially in this age of Net oriented software An important issue is how agile processes like eXtreme Programming and Scrum can be modified to address important security issues This paper looked at how the author gets,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,can be modified to address important security issues This paper looked at how the author gets students in his software engineering class to consider these,issues,and how he encourages them to see ways in which agile processes might be made more secure,can be modified to address important security issues This paper looked at how the author gets students in his software engineering class to consider these issues and how he encourages them to see ways in which agile processes might be made more secure,2008
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,Reviewing the Curriculum of Software Engineering Undergraduate Courses to Incorporate Communication and Interpersonal Skills Teaching Abstract The major,problems,of software development projects are not so much technical as sociological in nature The industry seems to agree very much with this statement while the,Reviewing the Curriculum of Software Engineering Undergraduate Courses to Incorporate Communication and Interpersonal Skills Teaching Abstract The major problems of software development projects are not so much technical as sociological in nature The industry seems to agree very much with this statement while the,2003
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,Science courses is the development of technical skills by students undertaking the course IEEE ACM cited in Pham 1997 This focus on technical skills poses,problems,for future professionals when they are supposed to build information systems where their activities are part of a team effort According to DeMarco et al,Science courses is the development of technical skills by students undertaking the course IEEE ACM cited in Pham 1997 This focus on technical skills poses problems for future professionals when they are supposed to build information systems where their activities are part of a team effort According to DeMarco et al,2003
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,7 5 8 3 4 6 1 Capacity to learn new skills and procedures Capacity for cooperation and teamwork Capacity to make decision and solve,problems,Ability to apply knowledge to workplace Capacity to work with minimum supervision Theoretical knowledge in a professional field Capacity to use computer technology Understanding of,7 5 8 3 4 6 1 Capacity to learn new skills and procedures Capacity for cooperation and teamwork Capacity to make decision and solve problems Ability to apply knowledge to workplace Capacity to work with minimum supervision Theoretical knowledge in a professional field Capacity to use computer technology Understanding of,2003
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,of some authors like DeMarco and Lister 1 Goguen and Linde 15 and Goguen 9 They state that software development is strongly affected by social,issues,So it cannot be treated in a purely technological way Other researchers have been studying methods to improve the education of software engineering in order,of some authors like DeMarco and Lister 1 Goguen and Linde 15 and Goguen 9 They state that software development is strongly affected by social issues So it cannot be treated in a purely technological way Other researchers have been studying methods to improve the education of software engineering in order,2003
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,treated in a purely technological way Other researchers have been studying methods to improve the education of software engineering in order to address these social,issues,In this paper the authors review some recent developments in this area and propose a review in the computer science curriculum in order to accommodate,treated in a purely technological way Other researchers have been studying methods to improve the education of software engineering in order to address these social issues In this paper the authors review some recent developments in this area and propose a review in the computer science curriculum in order to accommodate,2003
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,As in the case described by Williams the students didnt work at all times co located and with a customer on site which brought some,problems,The proposal of this paper tries to overcome the problems found in both cases Firstly it focuses only in one methodology the extreme programming Secondly,As in the case described by Williams the students didnt work at all times co located and with a customer on site which brought some problems The proposal of this paper tries to overcome the problems found in both cases Firstly it focuses only in one methodology the extreme programming Secondly,2003
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,development Another phenomenon which was found was that distributed development either with near shore or off shore teams has become standard This makes collaboration more,challenging,and makes it important to work with appropriate collaboration tools The studies delivered excellent input for further evolution of undergraduate and graduate software engineering education,development Another phenomenon which was found was that distributed development either with near shore or off shore teams has become standard This makes collaboration more challenging and makes it important to work with appropriate collaboration tools The studies delivered excellent input for further evolution of undergraduate and graduate software engineering education,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,to use more collaboration practices Unfortunately this transition to more and better collaboration tends to take many years This raises two questions What are the,barriers,and can this transition to maturity be accelerated TABLE II BARRIERS AND DIFFICULTIES Comp Prof Ability to change organizational culture Availability of personnel with necessary,to use more collaboration practices Unfortunately this transition to more and better collaboration tends to take many years This raises two questions What are the barriers and can this transition to maturity be accelerated TABLE II BARRIERS AND DIFFICULTIES Comp Prof Ability to change organizational culture Availability of personnel with necessary,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,to maturity be accelerated TABLE II BARRIERS AND DIFFICULTIES Comp Prof Ability to change organizational culture Availability of personnel with necessary skills Customer collaboration Project,complexity,or size General resistance to change Lack of management support Budget constraints Confidence in ability to scale agile 29 37 18 14 16 14 22,to maturity be accelerated TABLE II BARRIERS AND DIFFICULTIES Comp Prof Ability to change organizational culture Availability of personnel with necessary skills Customer collaboration Project complexity or size General resistance to change Lack of management support Budget constraints Confidence in ability to scale agile 29 37 18 14 16 14 22,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,4 1 3 Table II gives some hints to the first question In the Swiss Agile Study 1 the participants were asked about the top,barrier,in their company Item What are the current barriers and difficulties to further adopt agile software development in your company As can be seen culture,4 1 3 Table II gives some hints to the first question In the Swiss Agile Study 1 the participants were asked about the top barrier in their company Item What are the current barriers and difficulties to further adopt agile software development in your company As can be seen culture,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,the current barriers and difficulties to further adopt agile software development in your company As can be seen culture skills and customers are the top,barriers,In the following paragraphs we present answers to the second question 2 Educational Software Development Project In an educational software project we are in a,the current barriers and difficulties to further adopt agile software development in your company As can be seen culture skills and customers are the top barriers In the following paragraphs we present answers to the second question 2 Educational Software Development Project In an educational software project we are in a,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,present answers to the second question 2 Educational Software Development Project In an educational software project we are in a privileged situation because all the,barriers,listed in Table II are either irrelevant or can be minimized by choosing the project setup properly Still professional and educational projects differ in many,present answers to the second question 2 Educational Software Development Project In an educational software project we are in a privileged situation because all the barriers listed in Table II are either irrelevant or can be minimized by choosing the project setup properly Still professional and educational projects differ in many,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,an educational setup are x Students can choose a project vision together with the coach x Project has a small scope and no real budget,constraints,x Students can collaborate with an ideal customer since the coach acts as customer x Students can apply all technical and collaboration practices x Students,an educational setup are x Students can choose a project vision together with the coach x Project has a small scope and no real budget constraints x Students can collaborate with an ideal customer since the coach acts as customer x Students can apply all technical and collaboration practices x Students,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,can experience agile values x Students neither have to work with legacy code nor worry about the intricacies of a production environment Some of the,impediments,in an educational setup are x Students usually only have one project meeting per week x Students only work sporadically on the project x Students,can experience agile values x Students neither have to work with legacy code nor worry about the intricacies of a production environment Some of the impediments in an educational setup are x Students usually only have one project meeting per week x Students only work sporadically on the project x Students,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,up meeting is not feasible x Students are less experienced In the classroom it is possible to set up an environment with little or no,impediments,which makes this transition much easier and faster The reminder of this chapter describes the setup of the student projects and the experience made in,up meeting is not feasible x Students are less experienced In the classroom it is possible to set up an environment with little or no impediments which makes this transition much easier and faster The reminder of this chapter describes the setup of the student projects and the experience made in,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,or minus two4 16 Fewer than five team members decrease interaction and collaboration which might result in smaller productivity Smaller teams might also encounter skill,constraints,More than nine members require too much coordination Large development teams generate too much complexity for an empirical process like Scrum to manage What about,or minus two4 16 Fewer than five team members decrease interaction and collaboration which might result in smaller productivity Smaller teams might also encounter skill constraints More than nine members require too much coordination Large development teams generate too much complexity for an empirical process like Scrum to manage What about,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,size of student teams The authors had best results when the team size was at the upper limit In smaller student teams there is a,risk,that the students do not realize the necessity of proper project management Much too often project management is seen as an overhead and in the,size of student teams The authors had best results when the team size was at the upper limit In smaller student teams there is a risk that the students do not realize the necessity of proper project management Much too often project management is seen as an overhead and in the,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,size is between seven and nine members Automatic Testing Next to team size we demand that the teams do rigorous automatic testing Automatic testing is,difficult,but in combination with refactoring it has a profound effect on the code quality It is important that the students have a test concept and,size is between seven and nine members Automatic Testing Next to team size we demand that the teams do rigorous automatic testing Automatic testing is difficult but in combination with refactoring it has a profound effect on the code quality It is important that the students have a test concept and,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,simplifies Collaboration In the educational student project the team is mostly not co located Additionally the students often work at different times This makes collaboration,difficult,because face to face communication is not easily possible Furthermore the teams cannot use physical task boards either Fortunately there are online task boards which,simplifies Collaboration In the educational student project the team is mostly not co located Additionally the students often work at different times This makes collaboration difficult because face to face communication is not easily possible Furthermore the teams cannot use physical task boards either Fortunately there are online task boards which,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,task boards which can be a good substitute for physical ones In this chapter we will present some collaboration tools which help to circumvent the,impediments,in distributed student teams An agile project rapidly and reliably produces new know how and new knowledge Good collaboration tools make the exchange of new,task boards which can be a good substitute for physical ones In this chapter we will present some collaboration tools which help to circumvent the impediments in distributed student teams An agile project rapidly and reliably produces new know how and new knowledge Good collaboration tools make the exchange of new,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,distributed student teams would not be feasible The tools simplify collaboration among students and make progress visible for the coach The same is true for,problems,and difficulties 1 Jenkins CI Server Jenkins 25 is an open source continuous integration server It provides immediate feedback of the build status and the,distributed student teams would not be feasible The tools simplify collaboration among students and make progress visible for the coach The same is true for problems and difficulties 1 Jenkins CI Server Jenkins 25 is an open source continuous integration server It provides immediate feedback of the build status and the,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,GitHub 27 is a web based Git repository which is often used for hosting open source software projects GitHub provides several collaboration features such as,bug,tracking feature requests task management and wikis for every project 3 Trello Trello is a very simple collaboration tool for all kind of projects Its,GitHub 27 is a web based Git repository which is often used for hosting open source software projects GitHub provides several collaboration features such as bug tracking feature requests task management and wikis for every project 3 Trello Trello is a very simple collaboration tool for all kind of projects Its,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,the team members was possible in an efficient and transparent manner projects With respect to evaluation and assessment of the individual students it is very,hard,to find out who did what and how much in the project The team setup is critical with respect to finding a well balanced team,the team members was possible in an efficient and transparent manner projects With respect to evaluation and assessment of the individual students it is very hard to find out who did what and how much in the project The team setup is critical with respect to finding a well balanced team,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,project The team setup is critical with respect to finding a well balanced team with the necessary level of knowhow motivation and commitment Another critical,issue,are the Product Owner and Scrum Master roles We let the students themselves overtake these roles But they usually lack the necessary experience to fulfill,project The team setup is critical with respect to finding a well balanced team with the necessary level of knowhow motivation and commitment Another critical issue are the Product Owner and Scrum Master roles We let the students themselves overtake these roles But they usually lack the necessary experience to fulfill,2016
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,it remotely as a way to enlarge critically small departments We show how to teach XP using class projects We also discuss some of the,problems,brought to effective distance education by this method and their solutions We essentially find in this case study that XP can be studied remotely and,it remotely as a way to enlarge critically small departments We show how to teach XP using class projects We also discuss some of the problems brought to effective distance education by this method and their solutions We essentially find in this case study that XP can be studied remotely and,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,study that XP can be studied remotely and that distance education can be used to staff software engineering programs This paper tries to attack two,problems,shortcomings in the teaching of Agile Methods and shortages of software engineering staff 1 Teaching agile methods We have frequently taught software engineering using practical,study that XP can be studied remotely and that distance education can be used to staff software engineering programs This paper tries to attack two problems shortcomings in the teaching of Agile Methods and shortages of software engineering staff 1 Teaching agile methods We have frequently taught software engineering using practical,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,television One reason for this prototype class besides the content was to explore the possibility of creating a virtual computer science department There is tremendous,difficulty,recruiting suitable faculty for the computer science departments of small primarily liberal arts colleges One solution may be to combine several departments of computer science,television One reason for this prototype class besides the content was to explore the possibility of creating a virtual computer science department There is tremendous difficulty recruiting suitable faculty for the computer science departments of small primarily liberal arts colleges One solution may be to combine several departments of computer science,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,consortium that coordinates small college computing of which it is an important member This recounts the prototype course Initially it discusses the topics of institutional,issues,handling different calendars equipment staffing patterns student course evaluations and future funding later we will talk again about teaching XP 2 Institutional issues These include,consortium that coordinates small college computing of which it is an important member This recounts the prototype course Initially it discusses the topics of institutional issues handling different calendars equipment staffing patterns student course evaluations and future funding later we will talk again about teaching XP 2 Institutional issues These include,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,should be outgoing no easy task to find this type of person in many computer science departments comfortable with the technology and willing to work,hard,at contacts with the remote students They should also expect to work harder at teaching in general It is widely recognized that distance education instructors,should be outgoing no easy task to find this type of person in many computer science departments comfortable with the technology and willing to work hard at contacts with the remote students They should also expect to work harder at teaching in general It is widely recognized that distance education instructors,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,courses are generally the ones in which the professors impart a particular institutions style of programming and documenting This of course makes it a little,harder,on the distance instructor in that they have to be aware of different styles but it is easier than teaching them or reaching a multi,courses are generally the ones in which the professors impart a particular institutions style of programming and documenting This of course makes it a little harder on the distance instructor in that they have to be aware of different styles but it is easier than teaching them or reaching a multi,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,during the course to a room too small for the class and is currently in an ugly substandard location One session was affected by equipment,failure,The CMU system was unplugged from its ISDN lines by a janitor and not plugged back in The instructor not knowing where the ISDN lines,during the course to a room too small for the class and is currently in an ugly substandard location One session was affected by equipment failure The CMU system was unplugged from its ISDN lines by a janitor and not plugged back in The instructor not knowing where the ISDN lines,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,its ISDN lines by a janitor and not plugged back in The instructor not knowing where the ISDN lines were merely thought he had a,failure,to connect He arranged for a chat room to be established for the course and informed the students that if there was another equipment failure,its ISDN lines by a janitor and not plugged back in The instructor not knowing where the ISDN lines were merely thought he had a failure to connect He arranged for a chat room to be established for the course and informed the students that if there was another equipment failure,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,the low fours of a maximum of five in each question The previous course was approximately equal to the CMU average and shows how much,worse,the instructor got over one semester Of course this could merely reveal a poorly designed and presented course but evaluations of those topics were similar,the low fours of a maximum of five in each question The previous course was approximately equal to the CMU average and shows how much worse the instructor got over one semester Of course this could merely reveal a poorly designed and presented course but evaluations of those topics were similar,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,advanced and application classes offered by the Departments lay the foundation for students to become formidable computer scientists that can truly analyze communicate and solve,problems,with computers and software From the advent of computing software has played an important role in harnessing the power of computer hardware Since the essence,advanced and application classes offered by the Departments lay the foundation for students to become formidable computer scientists that can truly analyze communicate and solve problems with computers and software From the advent of computing software has played an important role in harnessing the power of computer hardware Since the essence,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,14 January 2002 Course Mechanics CMU 16 January 2002 Agile Methods and XP Plus Tomayko02 and Course Mechanics Allegheny 21 January 2002 The Role of,risk,and the Economics of Software Development Beck00 Ch 1 3 23 January 2002 Getting a Grip on Software Development Beck00 Ch 4 6 28 January,14 January 2002 Course Mechanics CMU 16 January 2002 Agile Methods and XP Plus Tomayko02 and Course Mechanics Allegheny 21 January 2002 The Role of risk and the Economics of Software Development Beck00 Ch 1 3 23 January 2002 Getting a Grip on Software Development Beck00 Ch 4 6 28 January,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,Adopting and Adapting XP Beck00 Ch 19 20 18 February 2002 Lifecycle of XP and People Roles Beck00 Ch 21 22 20 February 2002 The,difficulties,of XP Beck00 Ch 23 24 25 February 2002 When You Shouldnt Use XP Beck 00 Ch 25 27 27 February 2002 Criticisms of XP,Adopting and Adapting XP Beck00 Ch 19 20 18 February 2002 Lifecycle of XP and People Roles Beck00 Ch 21 22 20 February 2002 The difficulties of XP Beck00 Ch 23 24 25 February 2002 When You Shouldnt Use XP Beck 00 Ch 25 27 27 February 2002 Criticisms of XP,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,divide into groups of five being careful to choose people with similar schedules so as to facilitate pair programming Second find the requirements for the,problem,in xpdata distance cmu edu papers index html the paper on Problem Frames Base your story development p 88 of Beck00 on the last iteration,divide into groups of five being careful to choose people with similar schedules so as to facilitate pair programming Second find the requirements for the problem in xpdata distance cmu edu papers index html the paper on Problem Frames Base your story development p 88 of Beck00 on the last iteration,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,Decompose further if possible Third program a solution using XP while tracking the following metrics 1 Time on task i e hours and minutes doing,problem,work 2 Time on course i e all the time spent on the course including readings and class 3 Defects i e any failure noticed,Decompose further if possible Third program a solution using XP while tracking the following metrics 1 Time on task i e hours and minutes doing problem work 2 Time on course i e all the time spent on the course including readings and class 3 Defects i e any failure noticed,2005
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,by handling the many software requests that regularly arrive in the department In pursuit of these goals the ASF has had many successes and faced,challenges,in a variety of areas This paper describes the history of the ASF along with the multiple successes and challenges that it has faced over,by handling the many software requests that regularly arrive in the department In pursuit of these goals the ASF has had many successes and faced challenges in a variety of areas This paper describes the history of the ASF along with the multiple successes and challenges that it has faced over,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,world clients community members and researchers across campus kept arriving in the department but could only be pursued on occasion due to time and resource,constraints,To handle these requests the Agile Software Factory ASF was created with a 21 000 startup fund from the Agile Alliance 1 To serve as,world clients community members and researchers across campus kept arriving in the department but could only be pursued on occasion due to time and resource constraints To handle these requests the Agile Software Factory ASF was created with a 21 000 startup fund from the Agile Alliance 1 To serve as,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,growing the ASF at the Department of Computer Science at BGSU by discussing the general operating model of the ASF reflecting on various accomplishments and,challenges,experienced and concluding with a discussion of the road ahead II OPERATING MODEL The ASF follows a clean operating model that combines personnel projects and,growing the ASF at the Department of Computer Science at BGSU by discussing the general operating model of the ASF reflecting on various accomplishments and challenges experienced and concluding with a discussion of the road ahead II OPERATING MODEL The ASF follows a clean operating model that combines personnel projects and,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,sources paid projects grant funding donations etc that began with a 21 000 grant from the Agile Alliance As maintaining continuous funding has become a,challenge,this issue will be discussed in detail in Section IV It should be noted that the ASF does not market the service directly to for,sources paid projects grant funding donations etc that began with a 21 000 grant from the Agile Alliance As maintaining continuous funding has become a challenge this issue will be discussed in detail in Section IV It should be noted that the ASF does not market the service directly to for,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,at no cost to the individual or organization 3 CS 4540 5540 Software Engineering Project Projects with a reasonable scope and the appropriate amount of,challenge,may become a project in this course The course is designed as an elective course in the BS in Computer Science degree and is a,at no cost to the individual or organization 3 CS 4540 5540 Software Engineering Project Projects with a reasonable scope and the appropriate amount of challenge may become a project in this course The course is designed as an elective course in the BS in Computer Science degree and is a,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,developed for the College of Musical Arts at BGSU and the previously mentioned GIS application that was developed for the Center for Regional Development IV,challenges,In conjunction with the successes and accomplishments of the ASF over the past ten years have come a variety of challenges Like most other organizations,developed for the College of Musical Arts at BGSU and the previously mentioned GIS application that was developed for the Center for Regional Development IV challenges In conjunction with the successes and accomplishments of the ASF over the past ten years have come a variety of challenges Like most other organizations,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,Like most other organizations funding budget is often an ongoing concern for the ASF Being in an academic setting also presents its own set of,challenges,such as hiring training and working with student employees Managing client expectations under academic scheduling constraints is also challenging particularly when aimed at the goal,Like most other organizations funding budget is often an ongoing concern for the ASF Being in an academic setting also presents its own set of challenges such as hiring training and working with student employees Managing client expectations under academic scheduling constraints is also challenging particularly when aimed at the goal,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,constraints is also challenging particularly when aimed at the goal of fulfilling educational missions and satisfying clients simultaneously This section will discuss some of these,issues,A Funding Model One key issue related to any entity like the ASF is the continual funding of personnel and equipment Over the years the,constraints is also challenging particularly when aimed at the goal of fulfilling educational missions and satisfying clients simultaneously This section will discuss some of these issues A Funding Model One key issue related to any entity like the ASF is the continual funding of personnel and equipment Over the years the,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,strong financial footing for the ASF In the years after this the ASF continued to work on some paid commercial projects However due to the,complexity,of commercial contract development and intellectual property concerns the ASF has been shying away from commercial projects and focusing on service learning projects centered on,strong financial footing for the ASF In the years after this the ASF continued to work on some paid commercial projects However due to the complexity of commercial contract development and intellectual property concerns the ASF has been shying away from commercial projects and focusing on service learning projects centered on,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,as well as pro bono projects for non profits In recent years the number of internally sponsored projects has decreased due to the increasing budget,constraints,many universities have been facing Hence the department created the ASF corporate membership model in 2015 after many years of preparation The corporate membership program,as well as pro bono projects for non profits In recent years the number of internally sponsored projects has decreased due to the increasing budget constraints many universities have been facing Hence the department created the ASF corporate membership model in 2015 after many years of preparation The corporate membership program,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,hardware and software for development projects and professional training and development Currently the ASF has seven corporate members at various support levels Due to the,hard,work of the ASF Directors and the combined generosity of sponsors the ASF has been self sustained financially since inception and is also able to,hardware and software for development projects and professional training and development Currently the ASF has seven corporate members at various support levels Due to the hard work of the ASF Directors and the combined generosity of sponsors the ASF has been self sustained financially since inception and is also able to,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,revenue generated from various entities B Project Management Concerns In the realm of Software Engineering project management of teams of any size can be a,challenge,Managing student workers focused on multiple projects in an academic environment provides its own unique layer of complexity on top of this already challenging area,revenue generated from various entities B Project Management Concerns In the realm of Software Engineering project management of teams of any size can be a challenge Managing student workers focused on multiple projects in an academic environment provides its own unique layer of complexity on top of this already challenging area,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,on multiple projects in an academic environment provides its own unique layer of complexity on top of this already challenging area Some of the main,issues,experienced by the ASF over the years include 1 Working with Student Employees Student employees provide a wide variety of challenges One such issue is,on multiple projects in an academic environment provides its own unique layer of complexity on top of this already challenging area Some of the main issues experienced by the ASF over the years include 1 Working with Student Employees Student employees provide a wide variety of challenges One such issue is,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,not ready for professional work and they may or may not have the maturity and work ethic that are required of professional software developers Another,issue,that is unique to the academic enviroment is that all student employees are short term employees due to the nature of their degree program Consider,not ready for professional work and they may or may not have the maturity and work ethic that are required of professional software developers Another issue that is unique to the academic enviroment is that all student employees are short term employees due to the nature of their degree program Consider,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,After some training and mentorship they at the most are able to contribute to the ASF for roughly 2 3 semesters A variant on the,issue,of short term employees is the hiring of Graduate Assistants GAs The ASF often receives project based GA funding from internal project sponsors Some programs,After some training and mentorship they at the most are able to contribute to the ASF for roughly 2 3 semesters A variant on the issue of short term employees is the hiring of Graduate Assistants GAs The ASF often receives project based GA funding from internal project sponsors Some programs,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,works on a specific project and leaves after the contract period Nevertheless the hiring of a GA requires the same amount of management An additional,issue,is overall project management and guidance as the Director of the ASF also serves as the project manager for all ASF projects While project management,works on a specific project and leaves after the contract period Nevertheless the hiring of a GA requires the same amount of management An additional issue is overall project management and guidance as the Director of the ASF also serves as the project manager for all ASF projects While project management,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,position has come with a single course release each year As previously mentioned the position can easily be a full time job which leads to,difficulty,in finding a faculty member who is both capable and willing to serve in the position This leads to changes of leadership management that can,position has come with a single course release each year As previously mentioned the position can easily be a full time job which leads to difficulty in finding a faculty member who is both capable and willing to serve in the position This leads to changes of leadership management that can,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,V LESSONS LEARNED Undertaking an endeavor like the ASF is a significant learning experience both for faculty and students Based on the many successes and,challenges,previously discussed much advice may be given to anyone attempting to form a similar organization Some of this guidance includes 1 Give the Director of,V LESSONS LEARNED Undertaking an endeavor like the ASF is a significant learning experience both for faculty and students Based on the many successes and challenges previously discussed much advice may be given to anyone attempting to form a similar organization Some of this guidance includes 1 Give the Director of,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,infrastructure computing equipment servers hosting and office space has regularly been provided through University support Without such support and regular infrastructure the ASF would continually,struggle,to maintain projects and hosting In short build a relationship or agreement with university technology services in order to ensure the stability of infrastructure for,infrastructure computing equipment servers hosting and office space has regularly been provided through University support Without such support and regular infrastructure the ASF would continually struggle to maintain projects and hosting In short build a relationship or agreement with university technology services in order to ensure the stability of infrastructure for,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,community engagement Along with many successes and accomplishments continued funding completed projects and most importantly improved education experience for students there have also been major,challenges,along the way Yet as time moves on future plans for mentorship training and active engagement in the new Software Engineering degree program are laying,community engagement Along with many successes and accomplishments continued funding completed projects and most importantly improved education experience for students there have also been major challenges along the way Yet as time moves on future plans for mentorship training and active engagement in the new Software Engineering degree program are laying,2017
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,them the technical framework software tools project topic mentor roles assessment form and frequency feedback and degree of student innovativeness We report on the perceived,challenges,detailed changes the anticipated effects on the course learning outcomes The results showed that innovativeness and fun need freedom and flexibility with processes and technology,them the technical framework software tools project topic mentor roles assessment form and frequency feedback and degree of student innovativeness We report on the perceived challenges detailed changes the anticipated effects on the course learning outcomes The results showed that innovativeness and fun need freedom and flexibility with processes and technology,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,Keywords Software Engineering Education Project based Software Engineering Software Innovation Continuous Integration Continuous Assessment Technology Support I INTRODUCTION Educating software engineering SE students is a,challenge,of ensuring practical competence while still providing future proof research based knowledge 1 4 7 Balancing the theoretical foundation with abilities in current practice and,Keywords Software Engineering Education Project based Software Engineering Software Innovation Continuous Integration Continuous Assessment Technology Support I INTRODUCTION Educating software engineering SE students is a challenge of ensuring practical competence while still providing future proof research based knowledge 1 4 7 Balancing the theoretical foundation with abilities in current practice and,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,while still providing future proof research based knowledge 1 4 7 Balancing the theoretical foundation with abilities in current practice and technology is an acknowledged,problem,2 On one hand students need knowledge and awareness of SE principles not only proper coding but also software architecture requirement and testing They should,while still providing future proof research based knowledge 1 4 7 Balancing the theoretical foundation with abilities in current practice and technology is an acknowledged problem 2 On one hand students need knowledge and awareness of SE principles not only proper coding but also software architecture requirement and testing They should,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,Teaching assistants must be trained theory and practice must form a coherent unit and technical and scientific staff must be agile and swift Lecturers often,struggle,to ensure both lucid research based lectures and a smooth large scale lab operation SE courses risk ending up with outdated practices and technology no,Teaching assistants must be trained theory and practice must form a coherent unit and technical and scientific staff must be agile and swift Lecturers often struggle to ensure both lucid research based lectures and a smooth large scale lab operation SE courses risk ending up with outdated practices and technology no,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,up with outdated practices and technology no longer in use 5 so detailed training in tools and methods may age quickly and become a career,obstacle,rather than an asset The backbone of our SE course is a project based lab course where students work in agile teams interspersed with this,up with outdated practices and technology no longer in use 5 so detailed training in tools and methods may age quickly and become a career obstacle rather than an asset The backbone of our SE course is a project based lab course where students work in agile teams interspersed with this,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,with this we lectures on theory tools and technology 8 9 10 21 We have seen that a simulation of a real world project with,failures,iterations and successes motivates students to collaborate explore and take responsibility 6 Our task as educators is to feed this peer driven educational experience with,with this we lectures on theory tools and technology 8 9 10 21 We have seen that a simulation of a real world project with failures iterations and successes motivates students to collaborate explore and take responsibility 6 Our task as educators is to feed this peer driven educational experience with,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,successes motivates students to collaborate explore and take responsibility 6 Our task as educators is to feed this peer driven educational experience with the right,constraints,theory tools and infrastructure However we struggled with finding the best framing and we experienced a wide range of group behaviours and results With too,successes motivates students to collaborate explore and take responsibility 6 Our task as educators is to feed this peer driven educational experience with the right constraints theory tools and infrastructure However we struggled with finding the best framing and we experienced a wide range of group behaviours and results With too,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,group behaviours and results With too much freedom the students learning processes degenerated when encountering decisions and choices beyond their competence However too strict process,constraints,if requested or found necessary by TAs would hinder innovativeness stifle the competitive spirit among the groups and inadvertently change behavior from controlled learning by,group behaviours and results With too much freedom the students learning processes degenerated when encountering decisions and choices beyond their competence However too strict process constraints if requested or found necessary by TAs would hinder innovativeness stifle the competitive spirit among the groups and inadvertently change behavior from controlled learning by,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,Research Questions were RQ1 What dimensions of students choices are possible to accommodate in a large project based SE course RQ2 What are the strengths,weaknesses,associated with such freedom The remainder of this paper is organized as follows Section II presents related work Section III outlines our research methodology Section,Research Questions were RQ1 What dimensions of students choices are possible to accommodate in a large project based SE course RQ2 What are the strengths weaknesses associated with such freedom The remainder of this paper is organized as follows Section II presents related work Section III outlines our research methodology Section,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,evaluation of our courses for instance their opinion about teaching materials lectures exercises lecturers and project settings The surveys also asked for perceived strengths and,weaknesses,experienced in the course At the end of the courses we asked students to provide feedback about learning outcome Students and TA opinions were also,evaluation of our courses for instance their opinion about teaching materials lectures exercises lecturers and project settings The surveys also asked for perceived strengths and weaknesses experienced in the course At the end of the courses we asked students to provide feedback about learning outcome Students and TA opinions were also,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,the course feedbacks from TA teams and comments from other lecturers in the department and external guest lecturers This background provided the perceived strengths and,weaknesses,of each approach together with their dimensions of teaching freedom Comparison of students feedback between the two course instances We compared the summary of students,the course feedbacks from TA teams and comments from other lecturers in the department and external guest lecturers This background provided the perceived strengths and weaknesses of each approach together with their dimensions of teaching freedom Comparison of students feedback between the two course instances We compared the summary of students,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,the beginning of the course In Spring 2017 the theme was Revolutionizing the learning experience in university education with roBOT technology Students gathered requirements about,problems,of university education solvable by a software system conceptualized and presented a solution After that they were guided through a systematic workflow to implement demonstrable,the beginning of the course In Spring 2017 the theme was Revolutionizing the learning experience in university education with roBOT technology Students gathered requirements about problems of university education solvable by a software system conceptualized and presented a solution After that they were guided through a systematic workflow to implement demonstrable,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,agile project with common objectives requirements and deliverables for all student groups This in turn enabled TAs to give comprehensive and competent assistance within one,problem,domain and the staff to make predictable fair criteria for student based assessment The student project groups were randomly composed with a team size of,agile project with common objectives requirements and deliverables for all student groups This in turn enabled TAs to give comprehensive and competent assistance within one problem domain and the staff to make predictable fair criteria for student based assessment The student project groups were randomly composed with a team size of,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,criteria for student based assessment The student project groups were randomly composed with a team size of 6 to 8 members To make the project,challenging,the student groups needed freedom in forming their products and deciding on their functionalities In order not to overstretch TA competence we specified the general,criteria for student based assessment The student project groups were randomly composed with a team size of 6 to 8 members To make the project challenging the student groups needed freedom in forming their products and deciding on their functionalities In order not to overstretch TA competence we specified the general,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,the result The mentioned scenarios were suggested and supported with guest lectures eg a cardiologist lecturing about the importance of remote monitoring of patients at,risk,for sudden cardiac death Based on student choices and ideas the groups were required to conceive a system consisting of a server user interface and,the result The mentioned scenarios were suggested and supported with guest lectures eg a cardiologist lecturing about the importance of remote monitoring of patients at risk for sudden cardiac death Based on student choices and ideas the groups were required to conceive a system consisting of a server user interface and,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,is close to a full time effort The division of labor roles and progress relies on high turn around agility and frequent exposure to a,problem,owner and other driving factors For each sprint user stories with high priorities were turned into development tasks and combined with management tasks like set,is close to a full time effort The division of labor roles and progress relies on high turn around agility and frequent exposure to a problem owner and other driving factors For each sprint user stories with high priorities were turned into development tasks and combined with management tasks like set,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,goal and to ensure we could follow and assess the process without assessment specific deliverables All team tasks were supposed to be recorded as GitLab,issues,and related to sprints through milestones Issue boards were used to manage the overall process while details of each issue e g team member assignments,goal and to ensure we could follow and assess the process without assessment specific deliverables All team tasks were supposed to be recorded as GitLab issues and related to sprints through milestones Issue boards were used to manage the overall process while details of each issue e g team member assignments,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,boards were used to manage the overall process while details of each issue e g team member assignments discussions and decisions were part of the,issue,GitLab supports relating code commits to issues so ideally the issue page should capture every relevant aspect of development work making the process completely transparent,boards were used to manage the overall process while details of each issue e g team member assignments discussions and decisions were part of the issue GitLab supports relating code commits to issues so ideally the issue page should capture every relevant aspect of development work making the process completely transparent,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,NSLB The development platform and technology stack As a part of making the project realistic we wanted to ensure the products had a certain architectural,complexity,and were suitable for practicing both testing and continuous integration both of which are important in agile projects We also needed to build on the,NSLB The development platform and technology stack As a part of making the project realistic we wanted to ensure the products had a certain architectural complexity and were suitable for practicing both testing and continuous integration both of which are important in agile projects We also needed to build on the,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,tool and provided complete but minimal project code stubs to get teams started In addition the course staff developed a product with the same architecture,complexity,and size as what we expected from them using the same tools including GitLab with proper issue tracking that they could use as learning material,tool and provided complete but minimal project code stubs to get teams started In addition the course staff developed a product with the same architecture complexity and size as what we expected from them using the same tools including GitLab with proper issue tracking that they could use as learning material,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,leading TAs managed and collected assessment instructions and templates and configured the learning software A student reference group provided continuous input on student progress general,problems,and areas needing improvement Each group had two specific TAs allocated throughout the course both taking roles as mentors and assessors The supervision was continuous,leading TAs managed and collected assessment instructions and templates and configured the learning software A student reference group provided continuous input on student progress general problems and areas needing improvement Each group had two specific TAs allocated throughout the course both taking roles as mentors and assessors The supervision was continuous,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,by TAs Correspondingly the two responsible lecturers provided 22 and 12 respectively of the total contributions with TAs very much less At times this was,challenging,requiring a responsive and hands on approach Lecture topics were partially decided from Piazza discussions Students grades were mainly based on group deliverables and two,by TAs Correspondingly the two responsible lecturers provided 22 and 12 respectively of the total contributions with TAs very much less At times this was challenging requiring a responsive and hands on approach Lecture topics were partially decided from Piazza discussions Students grades were mainly based on group deliverables and two,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,close to a professional working environment in so far as they would know what that would be like The freedom given to students in the,problem,space had motivated them to acquire competence to implement their projects The assignment given to us has been open and inspiring motivating us to learn,close to a professional working environment in so far as they would know what that would be like The freedom given to students in the problem space had motivated them to acquire competence to implement their projects The assignment given to us has been open and inspiring motivating us to learn,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,However the flexible options for methodological practices make many teams confused about what they should use for their projects The amount of freedom in both,problem,and solution domains had burdened the TAs making it difficult to assist each team with their own problems and own approach Specific choices of programming,However the flexible options for methodological practices make many teams confused about what they should use for their projects The amount of freedom in both problem and solution domains had burdened the TAs making it difficult to assist each team with their own problems and own approach Specific choices of programming,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,solution were recommended in order to be able to provide students with technical support We realize that having available and competent student assistants is a,challenge,especially considering the degree of freedom every student team has in deciding how to develop their software TAs would often be of little help wrt,solution were recommended in order to be able to provide students with technical support We realize that having available and competent student assistants is a challenge especially considering the degree of freedom every student team has in deciding how to develop their software TAs would often be of little help wrt,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,considering the degree of freedom every student team has in deciding how to develop their software TAs would often be of little help wrt technical,problems,The course assessment motivated students to focus on conducting a proper team based process and product It was reported from students that they would not,considering the degree of freedom every student team has in deciding how to develop their software TAs would often be of little help wrt technical problems The course assessment motivated students to focus on conducting a proper team based process and product It was reported from students that they would not,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,could reduce the amount of focus on development methodologies and spend more time on technology stack and infrastructure Table 4 Analysis of Teaching ESIAI Strength,weakness,Project setting Fun and motivating for students Ambitious Change prone Process Learning all elements of software development Lack of guidance Overwhelming Not involving all team,could reduce the amount of focus on development methodologies and spend more time on technology stack and infrastructure Table 4 Analysis of Teaching ESIAI Strength weakness Project setting Fun and motivating for students Ambitious Change prone Process Learning all elements of software development Lack of guidance Overwhelming Not involving all team,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,selecting among approaches without required experience The structured support and guidance to the practices would complement the given workflow The summary of the strengths and,weaknesses,of the approach is shown in Table 4 B Approach No Student Left Behind The defined project process and provided templates gave students a well,selecting among approaches without required experience The structured support and guidance to the practices would complement the given workflow The summary of the strengths and weaknesses of the approach is shown in Table 4 B Approach No Student Left Behind The defined project process and provided templates gave students a well,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,Approach No Student Left Behind The defined project process and provided templates gave students a well defined workflow with a set of team assignments The,problem,space was fixed and the solution space was guided The process was not realistic but afforded TAs and teachers good control and competent and timely,Approach No Student Left Behind The defined project process and provided templates gave students a well defined workflow with a set of team assignments The problem space was fixed and the solution space was guided The process was not realistic but afforded TAs and teachers good control and competent and timely,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,was left behind Tests showed consistently high average score on all SE topics Teams were monitored for excluded or parasitic team members but this was,hardly,a problem 2 cases had to be resolved because of conflicting student schedules Randomly composed teams worked seemingly very well wrt shared workload Some students,was left behind Tests showed consistently high average score on all SE topics Teams were monitored for excluded or parasitic team members but this was hardly a problem 2 cases had to be resolved because of conflicting student schedules Randomly composed teams worked seemingly very well wrt shared workload Some students,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,and server using node js or Python based on what they were comfortable with and what they wanted to learn That was allowed at the,risk,of getting less TA support Some felt the expected product complexity was too high particularly the hierarchical maven project configuration The argument for making templates,and server using node js or Python based on what they were comfortable with and what they wanted to learn That was allowed at the risk of getting less TA support Some felt the expected product complexity was too high particularly the hierarchical maven project configuration The argument for making templates,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,training among staff Some statements from the TAs are quite interesting Technology and tool focus quenched innovativeness but increased control of progress and effort Very,difficult,to separate between groups all performed at a very high level and got high scores Anonymous student responses from a reference group surveys and discussion,training among staff Some statements from the TAs are quite interesting Technology and tool focus quenched innovativeness but increased control of progress and effort Very difficult to separate between groups all performed at a very high level and got high scores Anonymous student responses from a reference group surveys and discussion,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,very high level and got high scores Anonymous student responses from a reference group surveys and discussion fora are also illustrative about the strengths and,weaknesses,Some important observations from students are Agile methods require fast feedback from the simulated problem owner A question from one student group would lead to,very high level and got high scores Anonymous student responses from a reference group surveys and discussion fora are also illustrative about the strengths and weaknesses Some important observations from students are Agile methods require fast feedback from the simulated problem owner A question from one student group would lead to,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,drawn from separate pools of approximately 60 questions were designed to test theoretical knowledge as well as process and technology awareness The tests were reasonably,difficult,with the mean score at 80 and 72 respectively The test had very high participation low deviation and very few less than 1 below a,drawn from separate pools of approximately 60 questions were designed to test theoretical knowledge as well as process and technology awareness The tests were reasonably difficult with the mean score at 80 and 72 respectively The test had very high participation low deviation and very few less than 1 below a,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,to understand the process and we instructed TA to clarify the distinction between feedback mentoring and requirement assessment After a while project and team specific,problems,were not published unless relevant and posted by TA or lecturers Initial overload of technicalities scared the less savvy students Reduction of information reduced student,to understand the process and we instructed TA to clarify the distinction between feedback mentoring and requirement assessment After a while project and team specific problems were not published unless relevant and posted by TA or lecturers Initial overload of technicalities scared the less savvy students Reduction of information reduced student,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,on products persisted for a while but this was handled and explained using student representatives Hopefully as a learning experience for all involved Strengths and,weaknesses,of the approach are summarized in Table 5 Table 5 Analysis of teaching NSLB Strength Weakness Project setting Bootstrapping course readymade examples very direct and,on products persisted for a while but this was handled and explained using student representatives Hopefully as a learning experience for all involved Strengths and weaknesses of the approach are summarized in Table 5 Table 5 Analysis of teaching NSLB Strength Weakness Project setting Bootstrapping course readymade examples very direct and,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,of flexibility to cope with the variety of projects students experience and TAs experience We clearly experienced that freedom of choice is both inspiring and,challenging,but must be balanced with precise control in order to reach learning objectives and maintain fairness From the findings we suggest several dimensions of choices,of flexibility to cope with the variety of projects students experience and TAs experience We clearly experienced that freedom of choice is both inspiring and challenging but must be balanced with precise control in order to reach learning objectives and maintain fairness From the findings we suggest several dimensions of choices,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,choices that might impact the course settings Freedom of technology and method choices reduce the value and validity of TA aid and assessment Freedom of,problem,selection increases involvement and time spent Freedom of team arrangement increases team competitiveness and potential student lockout or team failure Freedom lack of precise deliverable,choices that might impact the course settings Freedom of technology and method choices reduce the value and validity of TA aid and assessment Freedom of problem selection increases involvement and time spent Freedom of team arrangement increases team competitiveness and potential student lockout or team failure Freedom lack of precise deliverable,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,lockout or team failure Freedom lack of precise deliverable content and form makes assessment non transparent and subjective B Answering RQ2 What are the strengths,weaknesses,associated with such freedom For answering RQ2 Table 6 summarizes the strengths and weaknesses of the two approaches Increased freedom of choices would probably increase,lockout or team failure Freedom lack of precise deliverable content and form makes assessment non transparent and subjective B Answering RQ2 What are the strengths weaknesses associated with such freedom For answering RQ2 Table 6 summarizes the strengths and weaknesses of the two approaches Increased freedom of choices would probably increase,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,strengths and weaknesses of the two approaches Increased freedom of choices would probably increase the fun and creativity among some students however it increases the,risks,in teaching and managing the course as well Also it comes at a cost of decreasing freedom and learning for some individuals and groups Increased,strengths and weaknesses of the two approaches Increased freedom of choices would probably increase the fun and creativity among some students however it increases the risks in teaching and managing the course as well Also it comes at a cost of decreasing freedom and learning for some individuals and groups Increased,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,probably also increase the learning effect and efficiency For some Few not the majority Having the freedom to make active decisions with regards to the,problem,domain process technology and deliverable content is valuable The question remains when and if the students are competent enough to thrive and learn from this,probably also increase the learning effect and efficiency For some Few not the majority Having the freedom to make active decisions with regards to the problem domain process technology and deliverable content is valuable The question remains when and if the students are competent enough to thrive and learn from this,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,if the students are competent enough to thrive and learn from this freedom Furthermore at what stage are the student mature enough to accept that,failure,is an important part of innovation We do not yet know if an early failure or success as a software engineer in an introductory course,if the students are competent enough to thrive and learn from this freedom Furthermore at what stage are the student mature enough to accept that failure is an important part of innovation We do not yet know if an early failure or success as a software engineer in an introductory course,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,the ever innovative and sanguine entrepreneur The industry needs both and both need a proper software engineering background Table 6 Comparing NSLB and ESIAI Strength,weakness,No Student Left Behind Thorough and predictable coverage High average level of competence Effective TA involvement Too many details that may be relevant to everybody,the ever innovative and sanguine entrepreneur The industry needs both and both need a proper software engineering background Table 6 Comparing NSLB and ESIAI Strength weakness No Student Left Behind Thorough and predictable coverage High average level of competence Effective TA involvement Too many details that may be relevant to everybody,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,No Student Left Behind Thorough and predictable coverage High average level of competence Effective TA involvement Too many details that may be relevant to everybody,hard,work and less fun negative appreciation of innovation Every Student Is An Innovator Fun and motivating Lifelike and realistic learning Exposure to innovative thinking in,No Student Left Behind Thorough and predictable coverage High average level of competence Effective TA involvement Too many details that may be relevant to everybody hard work and less fun negative appreciation of innovation Every Student Is An Innovator Fun and motivating Lifelike and realistic learning Exposure to innovative thinking in,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,appreciation of innovation Every Student Is An Innovator Fun and motivating Lifelike and realistic learning Exposure to innovative thinking in teams Uncertain individual learning outcomes,hard,to control resource use Little cross team communication Ineffective TAs Overwhelming VII CONCLUSION This study compares two teaching approaches one focusing on systematic guidance and,appreciation of innovation Every Student Is An Innovator Fun and motivating Lifelike and realistic learning Exposure to innovative thinking in teams Uncertain individual learning outcomes hard to control resource use Little cross team communication Ineffective TAs Overwhelming VII CONCLUSION This study compares two teaching approaches one focusing on systematic guidance and,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,implications for teaching the course in the future and also for similar project based SE courses Both of the teaching approaches have conflicting strengths and,weaknesses,that must be balanced according to objectives available resources and student background Innovativeness and fun need freedom Predictable outcomes and attainment of basic learning objectives,implications for teaching the course in the future and also for similar project based SE courses Both of the teaching approaches have conflicting strengths and weaknesses that must be balanced according to objectives available resources and student background Innovativeness and fun need freedom Predictable outcomes and attainment of basic learning objectives,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,possible but put a high demand on a responsive resourceful and competent teaching staff A possible combination of these dimensions would probably be a innovative,problem,guided solution approach where students are inspired and motivated to define their projects with requirements and product backlogs The requirements and early design phases can,possible but put a high demand on a responsive resourceful and competent teaching staff A possible combination of these dimensions would probably be a innovative problem guided solution approach where students are inspired and motivated to define their projects with requirements and product backlogs The requirements and early design phases can,2020
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,of the product as prioritized User Stories in the Product Backlog The Scrum Master is in charge of enabling Scrum by helping the team remove,impediments,and thus creating the best possible circumstances to achieve the goal fixed for the Sprint Typically one Sprint runs in the following way 1 At,of the product as prioritized User Stories in the Product Backlog The Scrum Master is in charge of enabling Scrum by helping the team remove impediments and thus creating the best possible circumstances to achieve the goal fixed for the Sprint Typically one Sprint runs in the following way 1 At,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,The team members must answer three questions individually a What did they do yesterday b What will they do today and c What are the,impediments,that prevent them to move forward and 3 At the end of the Sprint the team demonstrates what they built and get feedback from the,The team members must answer three questions individually a What did they do yesterday b What will they do today and c What are the impediments that prevent them to move forward and 3 At the end of the Sprint the team demonstrates what they built and get feedback from the,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,Product Owner During Sprint 3 some developers decided to hastily implement an unplanned feature making the mobile application available in French and this resulted in,problems,for the team to merge codes in the repository The Product Owner had to go to retrieve a working version from the code repository Videos,Product Owner During Sprint 3 some developers decided to hastily implement an unplanned feature making the mobile application available in French and this resulted in problems for the team to merge codes in the repository The Product Owner had to go to retrieve a working version from the code repository Videos,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,three Sprints A Why is the Daily Scrum important Within a distributed development team Daily Standup Scrums become impossible The time difference Internet and infrastructure,issues,e g power cuts render synchronous daily update meetings difficult too In this project developers were required to update their Daily Scrums in RTC at,three Sprints A Why is the Daily Scrum important Within a distributed development team Daily Standup Scrums become impossible The time difference Internet and infrastructure issues e g power cuts render synchronous daily update meetings difficult too In this project developers were required to update their Daily Scrums in RTC at,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,to update their Daily Scrums in RTC at the beginning of their working day and to explicitly describe their past and future activities and their,difficulties,From the written Daily Scrums it was easy to notice if developers were doing something different from what they planned to do The written Daily,to update their Daily Scrums in RTC at the beginning of their working day and to explicitly describe their past and future activities and their difficulties From the written Daily Scrums it was easy to notice if developers were doing something different from what they planned to do The written Daily,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,How well do developers plan and then execute their plans Are they getting more self disciplinary Do they understand better their own abilities strengths and,weaknesses,Are they getting more realistic about what they can and cannot do within one day Are they actually working on tasks that matter and help,How well do developers plan and then execute their plans Are they getting more self disciplinary Do they understand better their own abilities strengths and weaknesses Are they getting more realistic about what they can and cannot do within one day Are they actually working on tasks that matter and help,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,styles that are common to students 3 Developers see where the whole team stands anytime and can help each others in case of absence and,difficulties,Daily Scrums provide everyone with an idea about who is doing what and when The team thus works as a united entity and work can,styles that are common to students 3 Developers see where the whole team stands anytime and can help each others in case of absence and difficulties Daily Scrums provide everyone with an idea about who is doing what and when The team thus works as a united entity and work can,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,what and when The team thus works as a united entity and work can be reassigned with consent if a member is absent or has,difficulties,B Observations on Sprint 1 At the beginning of Sprint 1 most of developers were still studying Scrum and unaware of the importance of keeping,what and when The team thus works as a united entity and work can be reassigned with consent if a member is absent or has difficulties B Observations on Sprint 1 At the beginning of Sprint 1 most of developers were still studying Scrum and unaware of the importance of keeping,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,days or wrote the activities of several Daily Scrums at once which did not conform to the Scrum rituals The quality of Daily Scrums was,poor,too Working items were vaguely expressed and did not carry much value e g Learning Java ME Try to do tasks allocated to me and,days or wrote the activities of several Daily Scrums at once which did not conform to the Scrum rituals The quality of Daily Scrums was poor too Working items were vaguely expressed and did not carry much value e g Learning Java ME Try to do tasks allocated to me and,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,were vaguely expressed and did not carry much value e g Learning Java ME Try to do tasks allocated to me and Unstable Internet Consequently,problems,that impeded progress were not directly presented Developers did not communicate outside of the planned meetings The student author as Scrum Master of this Sprint,were vaguely expressed and did not carry much value e g Learning Java ME Try to do tasks allocated to me and Unstable Internet Consequently problems that impeded progress were not directly presented Developers did not communicate outside of the planned meetings The student author as Scrum Master of this Sprint,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,work items were posted in RTC and a few more email notifications of changed items were exchanged As showed by the retrospective meeting the biggest,problem,of the team that became apparent was the lack of communication and coordination across the whole team Consequently the software built during Sprint 2 did,work items were posted in RTC and a few more email notifications of changed items were exchanged As showed by the retrospective meeting the biggest problem of the team that became apparent was the lack of communication and coordination across the whole team Consequently the software built during Sprint 2 did,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,no better time than school time in one s life to grab and cherish all the possible opportunities and examine ones motivations passions strengths and,weaknesses,Every software development project created a new opportunity for developers and other team members to get to know themselves better and deeper Agile Methodologies and,no better time than school time in one s life to grab and cherish all the possible opportunities and examine ones motivations passions strengths and weaknesses Every software development project created a new opportunity for developers and other team members to get to know themselves better and deeper Agile Methodologies and,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,a lesson and then a test In life we are given a test that teaches us a lesson Tom Bodett American author 1955 3 Work,hard,and work smart Knowing ones strengths and weaknesses motivations and passions is not enough Choosing sustainable working methodologies is also very important Some developers were,a lesson and then a test In life we are given a test that teaches us a lesson Tom Bodett American author 1955 3 Work hard and work smart Knowing ones strengths and weaknesses motivations and passions is not enough Choosing sustainable working methodologies is also very important Some developers were,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,much interested in development that they tried to implement stories that they did not plan and ended up implementing less than expected due to the,difficulties,of integration with other developers code That resulted in the criticisms of the Product Owner It is always a priority and a safety protection to,much interested in development that they tried to implement stories that they did not plan and ended up implementing less than expected due to the difficulties of integration with other developers code That resulted in the criticisms of the Product Owner It is always a priority and a safety protection to,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,to work at a constant pace to stick to the plan to report candidly and to keep everyone healthy We of course like to work,hard,but we need to work smart too This is the mature and balanced manner to produce an outcome more efficiently and more healthily not only,to work at a constant pace to stick to the plan to report candidly and to keep everyone healthy We of course like to work hard but we need to work smart too This is the mature and balanced manner to produce an outcome more efficiently and more healthily not only,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,better than us why did I spend nearly twice as much time than him given a similar work item size Why was my planning quality,worse,than hers How can I make an improvement When will I be able to catch up with them 2 Understanding teamwork and preparing to help,better than us why did I spend nearly twice as much time than him given a similar work item size Why was my planning quality worse than hers How can I make an improvement When will I be able to catch up with them 2 Understanding teamwork and preparing to help,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,know what the other team members are doing The developers need to get ready to take complete responsibility of others in case some colleagues encounter,difficulties,or absences We learned to shoulder more responsibility to ensure that the team will succeed as a whole If the team succeeds everyone succeeds If,know what the other team members are doing The developers need to get ready to take complete responsibility of others in case some colleagues encounter difficulties or absences We learned to shoulder more responsibility to ensure that the team will succeed as a whole If the team succeeds everyone succeeds If,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,within a short period of time In the future we would know better how to go about this type of project and how to mitigate,problems,rather than succumb to them Obviously some of the educational values illustrated in this paper are not new but Scrum rituals and the obligatory adherence,within a short period of time In the future we would know better how to go about this type of project and how to mitigate problems rather than succumb to them Obviously some of the educational values illustrated in this paper are not new but Scrum rituals and the obligatory adherence,2010
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,Altogether we have decided to articulate the course in a series of activities that try to be lean in themselves such as Paramount individual grand,challenges,Standard frontal lectures based on the textbook 2 Individual briefings Skype meetings with experts Immediate grading Frequent formalized students feedback Meeting with students to assess,Altogether we have decided to articulate the course in a series of activities that try to be lean in themselves such as Paramount individual grand challenges Standard frontal lectures based on the textbook 2 Individual briefings Skype meetings with experts Immediate grading Frequent formalized students feedback Meeting with students to assess,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,students find many contradictions between the subject and the way of teaching but the students might just miss the core idea of the course a,risk,that is well evident also by simply analysing the status of the industry We have already mentioned that our two core reference principles that we,students find many contradictions between the subject and the way of teaching but the students might just miss the core idea of the course a risk that is well evident also by simply analysing the status of the industry We have already mentioned that our two core reference principles that we,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,appears the easier principle to implement which taken individually may look trivial but properly contextualized and rationalized may help students perceiving the deepness of the,issue,Referring to elimination of waste we can consider a simple set of concepts and example that can help the students to perceive the matter at,appears the easier principle to implement which taken individually may look trivial but properly contextualized and rationalized may help students perceiving the deepness of the issue Referring to elimination of waste we can consider a simple set of concepts and example that can help the students to perceive the matter at,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,the education endeavour the real protagonist of it This may translate in the following course of action Providing immediately the grading even exposing to the,risk,of some lack of precision but so there is the possibility of an immediate feedback Sharing assignments so students can compare their solutions and grading,the education endeavour the real protagonist of it This may translate in the following course of action Providing immediately the grading even exposing to the risk of some lack of precision but so there is the possibility of an immediate feedback Sharing assignments so students can compare their solutions and grading,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,have guided the development of the course namely Reading and watching if video home assignments regularly to reason on the content of the course Grand,challenges,reports and presentations to empirically focus on the application of lean approaches to non traditional organisational context in a pair study work and report to,have guided the development of the course namely Reading and watching if video home assignments regularly to reason on the content of the course Grand challenges reports and presentations to empirically focus on the application of lean approaches to non traditional organisational context in a pair study work and report to,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,explanation The topics of the frontal lectures included Software metrics and non invasive measurement Taylorism Fordism and Lean Thinking Lean in Software Engineering Agile Methods,issues,in Agile the dark side of agile Toward Lean Software Development GQM and Experience Factory In general the classes are organised as follows The first,explanation The topics of the frontal lectures included Software metrics and non invasive measurement Taylorism Fordism and Lean Thinking Lean in Software Engineering Agile Methods issues in Agile the dark side of agile Toward Lean Software Development GQM and Experience Factory In general the classes are organised as follows The first,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,4 A presentation by a guest lecturer or from online videos see Sects 5 and 6 A personal review of the progress of the grand,challenges,see Sect 7 A final reflection on what has been learnt in the class Needless to mention any distraction is eliminated from the lecture so,4 A presentation by a guest lecturer or from online videos see Sects 5 and 6 A personal review of the progress of the grand challenges see Sect 7 A final reflection on what has been learnt in the class Needless to mention any distraction is eliminated from the lecture so,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,lecturer at the beginning of the class the automatically graded quiz also at the beginning of the class by the personal review of the grand,challenges,and by the final reflection at the end of the class 4 Immediate Collecting Corrections and Grading The key point of any efficient learning activity,lecturer at the beginning of the class the automatically graded quiz also at the beginning of the class by the personal review of the grand challenges and by the final reflection at the end of the class 4 Immediate Collecting Corrections and Grading The key point of any efficient learning activity,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,tenet of lean and on historical work that show the roots of existing technologies explaining how they came into existence and the reasons for specific,constraints,on them During the briefings students Study a new subject by reviewing an assigned paper Prepare a 5 min short presentation on it Give this,tenet of lean and on historical work that show the roots of existing technologies explaining how they came into existence and the reasons for specific constraints on them During the briefings students Study a new subject by reviewing an assigned paper Prepare a 5 min short presentation on it Give this,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,each briefing includes A one page abstract of a presentation At most 5 slides for a presentation The page limit of abstract and presentation is,hard,Students were not allowed to overcome it lowering the standard font size putting too much text in one slide enlarging the standard paper size etc,each briefing includes A one page abstract of a presentation At most 5 slides for a presentation The page limit of abstract and presentation is hard Students were not allowed to overcome it lowering the standard font size putting too much text in one slide enlarging the standard paper size etc,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,discussion and helped students to focus on interaction with an expert and his answers rather than selecting which question should be the next 7 Grand,challenges,Grand challenges consist in applying the concept of lean software development to other knowledge intensive industry fields and to report the results in class Their,discussion and helped students to focus on interaction with an expert and his answers rather than selecting which question should be the next 7 Grand challenges Grand challenges consist in applying the concept of lean software development to other knowledge intensive industry fields and to report the results in class Their,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,Identification of what The industry under study could learn from lean software development Lean software development could learn from the industry under study Each grand,challenge,is undertaken by pairs or triples of students The assignment of a grand challenge is in pull style students can create a group and pull,Identification of what The industry under study could learn from lean software development Lean software development could learn from the industry under study Each grand challenge is undertaken by pairs or triples of students The assignment of a grand challenge is in pull style students can create a group and pull,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,students The assignment of a grand challenge is in pull style students can create a group and pull assignment from the list of available grand,challenges,To this end we use wiki as a platform for group edit and a FIFO policy for assigns After a certain deadline grand challenges were,students The assignment of a grand challenge is in pull style students can create a group and pull assignment from the list of available grand challenges To this end we use wiki as a platform for group edit and a FIFO policy for assigns After a certain deadline grand challenges were,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,assigns After a certain deadline grand challenges were assigned by instructor Elimination of waste is clear here and it was appreciated by students Each grand,challenge,required a review of the existing material books scientific papers articles in press websites news etc with all such material duly collected analysed and cited,assigns After a certain deadline grand challenges were assigned by instructor Elimination of waste is clear here and it was appreciated by students Each grand challenge required a review of the existing material books scientific papers articles in press websites news etc with all such material duly collected analysed and cited,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,material books scientific papers articles in press websites news etc with all such material duly collected analysed and cited At the next step a grand,challenge,required an empirical investigation also involving interviews with key experts of the field if needed The outcome of grand challenge is a deliverable which need,material books scientific papers articles in press websites news etc with all such material duly collected analysed and cited At the next step a grand challenge required an empirical investigation also involving interviews with key experts of the field if needed The outcome of grand challenge is a deliverable which need,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,The outcome of grand challenge is a deliverable which need to be supplied through the wiki as well as a comprehensive report of the grand,challenge,of at most 10 pages and a presentation of at most 10 slides Grading criteria for the grand challenges were clearly stated Quality of the,The outcome of grand challenge is a deliverable which need to be supplied through the wiki as well as a comprehensive report of the grand challenge of at most 10 pages and a presentation of at most 10 slides Grading criteria for the grand challenges were clearly stated Quality of the,2019
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,projects in order to give the work of a project guidelines or a framework However teaching process models in higher education seems to be quite,challenging,This has to do with the fact that undergraduates have no experience with projects in which process models are used The theoretical mediation of process,projects in order to give the work of a project guidelines or a framework However teaching process models in higher education seems to be quite challenging This has to do with the fact that undergraduates have no experience with projects in which process models are used The theoretical mediation of process,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,used The theoretical mediation of process models is initially on a very abstract level For this reason we chose to combine two didactic approaches namely,problem,based learning and project work Various traditional plan driven process models have been expanded in courses in Software Engineering with agile process models The Scrum,used The theoretical mediation of process models is initially on a very abstract level For this reason we chose to combine two didactic approaches namely problem based learning and project work Various traditional plan driven process models have been expanded in courses in Software Engineering with agile process models The Scrum,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,more and more important in almost every part of our daily life However developing high quality software is a complex process creating many pitfalls and,challenges,in software development projects In this context education in Software Engineering SE as a cross sectional discipline is becoming increasingly important Software development goes far,more and more important in almost every part of our daily life However developing high quality software is a complex process creating many pitfalls and challenges in software development projects In this context education in Software Engineering SE as a cross sectional discipline is becoming increasingly important Software development goes far,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,the V model in this paper we focus on Scrum as an agile process model However communicating the special features of process models remains a,challenge,as the undergraduates have little to no experience concerning the implementation of large projects Initially for undergraduates the learning of process models takes place on,the V model in this paper we focus on Scrum as an agile process model However communicating the special features of process models remains a challenge as the undergraduates have little to no experience concerning the implementation of large projects Initially for undergraduates the learning of process models takes place on,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,a type of project At first glance traditional plan driven models seem to follow logic while agile methods tend to look chaotic Because of these,difficulties,a traditional teaching method to mediate knowledge on a theoretical level such as a lecture is not sufficient Therefore other didactic approaches should be chosen,a type of project At first glance traditional plan driven models seem to follow logic while agile methods tend to look chaotic Because of these difficulties a traditional teaching method to mediate knowledge on a theoretical level such as a lecture is not sufficient Therefore other didactic approaches should be chosen,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,a traditional teaching method to mediate knowledge on a theoretical level such as a lecture is not sufficient Therefore other didactic approaches should be chosen,problem,based learning and hands on project work 3 4 The longterm goal of this presentation of the three concepts of the universities is the respective,a traditional teaching method to mediate knowledge on a theoretical level such as a lecture is not sufficient Therefore other didactic approaches should be chosen problem based learning and hands on project work 3 4 The longterm goal of this presentation of the three concepts of the universities is the respective,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,become familiar with the framework at a professional level and implement it in their own software project In these projects undergraduates work according to the,problem,based learning approach in autonomous project groups and have to go through a software project in teams Professional competence system competence is characterized by the,become familiar with the framework at a professional level and implement it in their own software project In these projects undergraduates work according to the problem based learning approach in autonomous project groups and have to go through a software project in teams Professional competence system competence is characterized by the,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,Students shall train their competences for working together in a team It is important to understand that a team process has specific dynamics and that,challenges,are not so much technical but more social issues Students shall clearly understand that software engineering is a team challenge and that they can only,Students shall train their competences for working together in a team It is important to understand that a team process has specific dynamics and that challenges are not so much technical but more social issues Students shall clearly understand that software engineering is a team challenge and that they can only,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,specific situation including e g Sprint Reviews and decide which options best meet their own goals Yet students should also have the freedom to make,mistakes,learn lessons from them eventually develop alternatives and decide which is best Students are expected to try out things without being bounded by tight restrictions,specific situation including e g Sprint Reviews and decide which options best meet their own goals Yet students should also have the freedom to make mistakes learn lessons from them eventually develop alternatives and decide which is best Students are expected to try out things without being bounded by tight restrictions,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,Project which were influenced by the lecturers An aspect for the use of Scrum or at least elements of the framework is the fact that,problems,during the teamwork occurred which the lecturer receive as feedback after the project phase in the last semesters These are e g unequal distribution of,Project which were influenced by the lecturers An aspect for the use of Scrum or at least elements of the framework is the fact that problems during the teamwork occurred which the lecturer receive as feedback after the project phase in the last semesters These are e g unequal distribution of,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,teamwork occurred which the lecturer receive as feedback after the project phase in the last semesters These are e g unequal distribution of tasks communication,problems,within the team and free riders or no shows Project support in the form of a Scrum Master who accompanies the Scrum events Sprint Planning,teamwork occurred which the lecturer receive as feedback after the project phase in the last semesters These are e g unequal distribution of tasks communication problems within the team and free riders or no shows Project support in the form of a Scrum Master who accompanies the Scrum events Sprint Planning,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,of a Scrum Master who accompanies the Scrum events Sprint Planning and Daily Scrum and also moderates a Sprint Review could help to meet the,challenges,and problems mentioned within the development team As a result agile process models in particular Scrum will be given more attention in the course Especially,of a Scrum Master who accompanies the Scrum events Sprint Planning and Daily Scrum and also moderates a Sprint Review could help to meet the challenges and problems mentioned within the development team As a result agile process models in particular Scrum will be given more attention in the course Especially,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,with regard to team processes communication behaviour etc in order to improve them in the next sprint Furthermore a Scrum Master can act directly on,problems,such as tensions in the team or free riders 3 2 2 Tailored Implementation The didactic setting for the module SE at the University of,with regard to team processes communication behaviour etc in order to improve them in the next sprint Furthermore a Scrum Master can act directly on problems such as tensions in the team or free riders 3 2 2 Tailored Implementation The didactic setting for the module SE at the University of,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,a kind of Project Support which will be represented by a research assistant so the process coaching remains independent from grading and students may communicate,problems,more trustfully than to professors without concerns about an impact on grades Contributing as a Scrum Master requires skills which are hardly found within the,a kind of Project Support which will be represented by a research assistant so the process coaching remains independent from grading and students may communicate problems more trustfully than to professors without concerns about an impact on grades Contributing as a Scrum Master requires skills which are hardly found within the,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,students Therefore from the third iteration of the SE project we mixed bachelor and master students in the same project Bachelor students focus on technical,issues,constitute the development team and experience project management in a more passive fashion In contrast the master students are in charge of leading the project,students Therefore from the third iteration of the SE project we mixed bachelor and master students in the same project Bachelor students focus on technical issues constitute the development team and experience project management in a more passive fashion In contrast the master students are in charge of leading the project,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,fulfill their roles Instructors offer coaching for master students to reflect and improve their leader ship skills This individual coaching establishes a forum to discuss,challenges,and problems they face in their teams and obtain help by the instructors to master these challenges Coaching is offered on an on demand basis,fulfill their roles Instructors offer coaching for master students to reflect and improve their leader ship skills This individual coaching establishes a forum to discuss challenges and problems they face in their teams and obtain help by the instructors to master these challenges Coaching is offered on an on demand basis,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,their own experiences not by getting rigid instructions from instructors Typically for each project team a real customer is available He brings in a specific,problem,which should be solved with a software system e g a travelling management system a fleet management system or a campus management It is worth,their own experiences not by getting rigid instructions from instructors Typically for each project team a real customer is available He brings in a specific problem which should be solved with a software system e g a travelling management system a fleet management system or a campus management It is worth,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,into one big picture and on integrating in a team which includes fostering communication skills Master students focus on organizing and leading a team The,difficulties,for them are e g communicating with team members and structuring tasks and motivating team members for effective teamwork Master students are responsible for the,into one big picture and on integrating in a team which includes fostering communication skills Master students focus on organizing and leading a team The difficulties for them are e g communicating with team members and structuring tasks and motivating team members for effective teamwork Master students are responsible for the,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,of two week However several project teams decided to overrule common Scrum recommendation and work in sprints of different durations in order to minimize project,risks,To that end these teams tend to have one or two oneweek sprints and move towards threeweek sprints near the end of the project 3,of two week However several project teams decided to overrule common Scrum recommendation and work in sprints of different durations in order to minimize project risks To that end these teams tend to have one or two oneweek sprints and move towards threeweek sprints near the end of the project 3,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,an idea of teamwork and individual contributions In particular grading of the bachelor students is based on the following aspects technical quality of results completeness,complexity,of the project topics including artefacts such as requirements specifications software architecture documents test specifications etc customization of and adherence to a process model individual,an idea of teamwork and individual contributions In particular grading of the bachelor students is based on the following aspects technical quality of results completeness complexity of the project topics including artefacts such as requirements specifications software architecture documents test specifications etc customization of and adherence to a process model individual,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,skills and competences Self reflection is stimulated in two steps First each of the students had to prepare a short individual self report that addressed,issues,such as their roles and tasks in the project their expectations with respect to the project and the degree to which these had been met,skills and competences Self reflection is stimulated in two steps First each of the students had to prepare a short individual self report that addressed issues such as their roles and tasks in the project their expectations with respect to the project and the degree to which these had been met,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,as their roles and tasks in the project their expectations with respect to the project and the degree to which these had been met particular,issues,in the project that they personally would have treated differently and from their personal point of view more successfully which role they would have liked,as their roles and tasks in the project their expectations with respect to the project and the degree to which these had been met particular issues in the project that they personally would have treated differently and from their personal point of view more successfully which role they would have liked,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,possible aspect that seemed worth being discussed in the group Instructors used information found in the students self reports addressing statements mentioned in the reports,challenging,some of the statements made in the reports and asking the entire team to comment on these statements 4 Comparison When looking at Table 3,possible aspect that seemed worth being discussed in the group Instructors used information found in the students self reports addressing statements mentioned in the reports challenging some of the statements made in the reports and asking the entire team to comment on these statements 4 Comparison When looking at Table 3,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,universities base their grading more or less on the artefacts developed Another commonality is the usage of Sprints Reviews and Retrospectives Whereby due to time,restrictions,Review and Retrospective follow in direct succession Differences between the approaches are Full time block week versus 90 minutes per week the project and Sprint,universities base their grading more or less on the artefacts developed Another commonality is the usage of Sprints Reviews and Retrospectives Whereby due to time restrictions Review and Retrospective follow in direct succession Differences between the approaches are Full time block week versus 90 minutes per week the project and Sprint,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,in which students traverse all steps of the development cycle experiencing a development process as a whole in a team Employability of undergraduates hands on,problem,based project processing the SWLifecycle in an agile manner Scrum Didactical Setting Project Work Lecture Seminar Project Phase and E Learning in one semester Bachelor,in which students traverse all steps of the development cycle experiencing a development process as a whole in a team Employability of undergraduates hands on problem based project processing the SWLifecycle in an agile manner Scrum Didactical Setting Project Work Lecture Seminar Project Phase and E Learning in one semester Bachelor,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,may take This level contains competences which are required when acting sensitively in a complex context A creative solution needs to be developed for each,problem,since no standard recipe would work The three levels of competence are arranged in a hierarchy Without knowing e g design patterns or programming languages,may take This level contains competences which are required when acting sensitively in a complex context A creative solution needs to be developed for each problem since no standard recipe would work The three levels of competence are arranged in a hierarchy Without knowing e g design patterns or programming languages,2020
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,more collaboration practices and consciously live the agile values This leads to the conclusion that applying the collaborative practices and living the agile values is,difficult,Thus we educators should pay special attention to teaching these practices and values in courses on agile software development This paper presents how agile collaboration,more collaboration practices and consciously live the agile values This leads to the conclusion that applying the collaborative practices and living the agile values is difficult Thus we educators should pay special attention to teaching these practices and values in courses on agile software development This paper presents how agile collaboration,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,in the agile domain Another phenomenon is distributed software development near shore and offshore teams have become common practice These distributed teams make collaboration more,challenging,And it becomes more and more important to work with the right collaboration tools The executed quantitative and qualitative studies give a deep insight into,in the agile domain Another phenomenon is distributed software development near shore and offshore teams have become common practice These distributed teams make collaboration more challenging And it becomes more and more important to work with the right collaboration tools The executed quantitative and qualitative studies give a deep insight into,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,The executed quantitative and qualitative studies give a deep insight into the current state of the art agile development in practice and the still open,challenges,The studies also deliver valuable input for the further evolution of software engineering education Particularly they shed some light on the questions 1 Which are,The executed quantitative and qualitative studies give a deep insight into the current state of the art agile development in practice and the still open challenges The studies also deliver valuable input for the further evolution of software engineering education Particularly they shed some light on the questions 1 Which are,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,tend to use more collaboration practices Unfortunately this transition to more and better collaboration tends to take years This raises two questions What are the,barriers,and can this transition to maturity be accelerated OVERVIEW OF SOFTWARE ENGINEERING MODULES Lecture Lab Programming 1 OOP 4 ETCS Programming 2 OOP 4 ETCS,tend to use more collaboration practices Unfortunately this transition to more and better collaboration tends to take years This raises two questions What are the barriers and can this transition to maturity be accelerated OVERVIEW OF SOFTWARE ENGINEERING MODULES Lecture Lab Programming 1 OOP 4 ETCS Programming 2 OOP 4 ETCS,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,Uniform European evaluation system of performance criteria as part of the Bologna Reform Around 30 hours of student work corresponds to one credit TABLE II,barriers,AND DIFFICULTIES COMP IT COMPANIES PROF IT PROFESSIONALS Ability to change organizational culture Availability of personnel with necessary skills Customer collaboration Project complexity or size,Uniform European evaluation system of performance criteria as part of the Bologna Reform Around 30 hours of student work corresponds to one credit TABLE II barriers AND DIFFICULTIES COMP IT COMPANIES PROF IT PROFESSIONALS Ability to change organizational culture Availability of personnel with necessary skills Customer collaboration Project complexity or size,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,to change organizational culture Availability of personnel with necessary skills Customer collaboration Project complexity or size General resistance to change Lack of management support Budget,constraints,Confidence in ability to scale agile Comp Prof 29 37 18 14 16 14 22 12 4 9 3 6 5 4 1 3 Table,to change organizational culture Availability of personnel with necessary skills Customer collaboration Project complexity or size General resistance to change Lack of management support Budget constraints Confidence in ability to scale agile Comp Prof 29 37 18 14 16 14 22 12 4 9 3 6 5 4 1 3 Table,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,4 1 3 Table II gives some hints to the first question In the Swiss Agile Study 1 the participants were asked about the top,barrier,in their company Item What are the current barriers and difficulties to further adopt agile software development in your company As can be seen culture,4 1 3 Table II gives some hints to the first question In the Swiss Agile Study 1 the participants were asked about the top barrier in their company Item What are the current barriers and difficulties to further adopt agile software development in your company As can be seen culture,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,the current barriers and difficulties to further adopt agile software development in your company As can be seen culture skills and customers are the top,barriers,In the following paragraphs we present answers to the second question 2 Educational Software Development Project In an educational software project we are in a,the current barriers and difficulties to further adopt agile software development in your company As can be seen culture skills and customers are the top barriers In the following paragraphs we present answers to the second question 2 Educational Software Development Project In an educational software project we are in a,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,present answers to the second question 2 Educational Software Development Project In an educational software project we are in a privileged situation because all the,barriers,listed in Table II are either irrelevant or can be minimized by choosing the project setup well Still professional and educational projects differ in many,present answers to the second question 2 Educational Software Development Project In an educational software project we are in a privileged situation because all the barriers listed in Table II are either irrelevant or can be minimized by choosing the project setup well Still professional and educational projects differ in many,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,in an educational setup are Students can choose the project vision together with the coach The project has a small scope and no real budget,constraints,Students can collaborate with an ideal customer since the coach or a student acts as customer and is on site Students can apply all technical,in an educational setup are Students can choose the project vision together with the coach The project has a small scope and no real budget constraints Students can collaborate with an ideal customer since the coach or a student acts as customer and is on site Students can apply all technical,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,intricacies of a production environment Students neither have to work with legacy code nor worry about the intricacies of a production environment Some of the,impediments,in an educational setup are Students usually only have one to two project meetings per week Students only work sporadically on the project Students usually,intricacies of a production environment Students neither have to work with legacy code nor worry about the intricacies of a production environment Some of the impediments in an educational setup are Students usually only have one to two project meetings per week Students only work sporadically on the project Students usually,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,they are also completing the work of the Sprint Backlog In the classroom it is possible to set up an environment with little or no,impediments,which makes this transition much easier and faster The remainder of this chapter describes the setup of the student projects and the experience made in,they are also completing the work of the Sprint Backlog In the classroom it is possible to set up an environment with little or no impediments which makes this transition much easier and faster The remainder of this chapter describes the setup of the student projects and the experience made in,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,or minus two2 12 Fewer than five team members decrease interaction and collaboration which might result in smaller productivity Smaller teams might also encounter skill,constraints,More than nine members require too much coordination Large development teams generate too much complexity for an empirical process like Scrum to manage What about,or minus two2 12 Fewer than five team members decrease interaction and collaboration which might result in smaller productivity Smaller teams might also encounter skill constraints More than nine members require too much coordination Large development teams generate too much complexity for an empirical process like Scrum to manage What about,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,size of student teams The authors had best results when the team size was at the upper limit In smaller student teams there is a,risk,that the students do not realize the necessity of proper project management Much too often project management is seen as an overhead and in the,size of student teams The authors had best results when the team size was at the upper limit In smaller student teams there is a risk that the students do not realize the necessity of proper project management Much too often project management is seen as an overhead and in the,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,is between seven and nine members c Automatic Testing Next to team size we demand that the teams do rigorous automatic testing Automatic testing is,difficult,but in combination with refactoring it has a profound effect on the code quality It is important that the students have a test concept and,is between seven and nine members c Automatic Testing Next to team size we demand that the teams do rigorous automatic testing Automatic testing is difficult but in combination with refactoring it has a profound effect on the code quality It is important that the students have a test concept and,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,simplifies Collaboration In the educational student project the team is mostly not co located Additionally the students often work at different times This makes collaboration,difficult,because face to face communication is not easily possible Furthermore the teams cannot use physical task boards either Fortunately there are online task boards which,simplifies Collaboration In the educational student project the team is mostly not co located Additionally the students often work at different times This makes collaboration difficult because face to face communication is not easily possible Furthermore the teams cannot use physical task boards either Fortunately there are online task boards which,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,task boards which can be a good substitute for physical ones In this chapter we will present some collaboration tools which help to circumvent the,impediments,in distributed student teams An agile project rapidly and reliably produces new know how and new knowledge Good collaboration tools make the exchange of new,task boards which can be a good substitute for physical ones In this chapter we will present some collaboration tools which help to circumvent the impediments in distributed student teams An agile project rapidly and reliably produces new know how and new knowledge Good collaboration tools make the exchange of new,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,distributed student teams would not be feasible The tools simplify collaboration among students and make progress visible for the coach The same is true for,problems,and difficulties 1 Jenkins CI Server Jenkins 22 is an open source continuous integration server It provides immediate feedback of the build status and the,distributed student teams would not be feasible The tools simplify collaboration among students and make progress visible for the coach The same is true for problems and difficulties 1 Jenkins CI Server Jenkins 22 is an open source continuous integration server It provides immediate feedback of the build status and the,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,GitHub 24 is a web based Git repository which is often used for hosting open source software projects GitHub provides several collaboration features such as,bug,tracking feature requests task management and wikis for every project 3 Trello Trello is a very simple collaboration tool 25 for all kind of projects,GitHub 24 is a web based Git repository which is often used for hosting open source software projects GitHub provides several collaboration features such as bug tracking feature requests task management and wikis for every project 3 Trello Trello is a very simple collaboration tool 25 for all kind of projects,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,By looking at Trello the coach immediately knows what is going on in the different projects 4 Jira TFS JIRA is a widely used professional,issue,tracking system from the company Atlassian 26 It is a web based system which also supports management of User Stories and task The agile version,By looking at Trello the coach immediately knows what is going on in the different projects 4 Jira TFS JIRA is a widely used professional issue tracking system from the company Atlassian 26 It is a web based system which also supports management of User Stories and task The agile version,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,Agile provides a digital task board JIRA provides various customizable workflows for task management which are also used at the agile task board Combining JIRA,issues,with Git allows to realize traceability of issues i e users can trace which code commits in GIT belong to which issues VI EVALUATION A,Agile provides a digital task board JIRA provides various customizable workflows for task management which are also used at the agile task board Combining JIRA issues with Git allows to realize traceability of issues i e users can trace which code commits in GIT belong to which issues VI EVALUATION A,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,grades The team setup is critical with respect to finding a well balanced team with the necessary level of knowhow motivation and commitment Other critical,issues,are the roles of Product Owner and Scrum Master We let the students themselves overtake these roles But they usually lack the necessary experience to,grades The team setup is critical with respect to finding a well balanced team with the necessary level of knowhow motivation and commitment Other critical issues are the roles of Product Owner and Scrum Master We let the students themselves overtake these roles But they usually lack the necessary experience to,2016
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,Sprint 6 Preparation for examination No workshop V EXPERIENCES AND ANALYSIS The feedback for both described approaches is very positive each having its strengths and,weaknesses,A A Bottom up Adapted Teaching Approach The course Software Construction is taught in the second semester parallel to the second advanced OOP course after,Sprint 6 Preparation for examination No workshop V EXPERIENCES AND ANALYSIS The feedback for both described approaches is very positive each having its strengths and weaknesses A A Bottom up Adapted Teaching Approach The course Software Construction is taught in the second semester parallel to the second advanced OOP course after,2014
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,In our opinion the definition from 5 fits well with our association of this term This links to the skills that enable someone to solve,problems,in a variety of situations The sufficiency of knowledge describes the situation very well Beside technical and functional knowledge acquired in the curriculum of computer,In our opinion the definition from 5 fits well with our association of this term This links to the skills that enable someone to solve problems in a variety of situations The sufficiency of knowledge describes the situation very well Beside technical and functional knowledge acquired in the curriculum of computer,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,requirements and develop IT solutions that satisfy the customer Negotiating realistic requirements and project conditions Planning and controlling projects with fixed deadlines and budget Recognizing,problems,early and handling escalations appropriately Being able to work in a bigger team with members at different sites Being able to interact with people from,requirements and develop IT solutions that satisfy the customer Negotiating realistic requirements and project conditions Planning and controlling projects with fixed deadlines and budget Recognizing problems early and handling escalations appropriately Being able to work in a bigger team with members at different sites Being able to interact with people from,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,Freedom Students are free to choose from a portfolio of different projects They are also free to choose their team Of course there are certain,limitations,to that freedom but in the past we were often able to respect their choices During the project students work together as self organized teams,Freedom Students are free to choose from a portfolio of different projects They are also free to choose their team Of course there are certain limitations to that freedom but in the past we were often able to respect their choices During the project students work together as self organized teams,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,process and they are only asked to use some core tools that we need to monitor the projects Expertise The students will obviously run into,problems,or fail delivering expected results several times during the project But we provide a culture where failing is not a problem students do not get,process and they are only asked to use some core tools that we need to monitor the projects Expertise The students will obviously run into problems or fail delivering expected results several times during the project But we provide a culture where failing is not a problem students do not get,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,a culture where failing is not a problem students do not get judged if they do something wrong we encourage them to learn from the,errors,and improve their work As professors we act as coaches rather than as grading instances so that the students see and feel how their skills,a culture where failing is not a problem students do not get judged if they do something wrong we encourage them to learn from the errors and improve their work As professors we act as coaches rather than as grading instances so that the students see and feel how their skills,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,step by step based on requirements and experience from past projects E Grading The grading in such a specific module is critical as it is,hard,to track the personal contributions of each team member As a result a specific grading scheme based on six criteria was developed These were derived,step by step based on requirements and experience from past projects E Grading The grading in such a specific module is critical as it is hard to track the personal contributions of each team member As a result a specific grading scheme based on six criteria was developed These were derived,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,project Functional and domain expertise this represents the ability and the skills of the students when it comes to analyzing understanding and modeling or designing,problems,and solutions in the customers domain Quality Focus do students do their best to achieve high quality results What kind of actions are performed to,project Functional and domain expertise this represents the ability and the skills of the students when it comes to analyzing understanding and modeling or designing problems and solutions in the customers domain Quality Focus do students do their best to achieve high quality results What kind of actions are performed to,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,customers domain Quality Focus do students do their best to achieve high quality results What kind of actions are performed to ensure quality learn from,errors,and systematically enhance the quality of the produced results be it documents or code Communication Skills this criterion reflects the need of working together closely,customers domain Quality Focus do students do their best to achieve high quality results What kind of actions are performed to ensure quality learn from errors and systematically enhance the quality of the produced results be it documents or code Communication Skills this criterion reflects the need of working together closely,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,their supervisors They have to emphasize contributions that they are especially proud of In addition to these supervisors take into consideration quality technical and functional,complexity,of student submissions when defining personal grades with consensus Joint grading is done by at least two professors Student grades are discussed and have to,their supervisors They have to emphasize contributions that they are especially proud of In addition to these supervisors take into consideration quality technical and functional complexity of student submissions when defining personal grades with consensus Joint grading is done by at least two professors Student grades are discussed and have to,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,Microsoft Azure cloud services or Jenkins during integration processes The goal of the module is to make students practice these software engineering aspects in different,challenging,projects together as a team The aims listed in the module are characterized by a constructive alignment 1 of the formative and the summative methods,Microsoft Azure cloud services or Jenkins during integration processes The goal of the module is to make students practice these software engineering aspects in different challenging projects together as a team The aims listed in the module are characterized by a constructive alignment 1 of the formative and the summative methods,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,in the module are characterized by a constructive alignment 1 of the formative and the summative methods used IV THEORETICAL CONSIDERATIONS One of the first,issues,to be addressed is the decision regarding the type of approach to be used to teach students in our context There are many non constructivist,in the module are characterized by a constructive alignment 1 of the formative and the summative methods used IV THEORETICAL CONSIDERATIONS One of the first issues to be addressed is the decision regarding the type of approach to be used to teach students in our context There are many non constructivist,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,regarding the type of approach to be used to teach students in our context There are many non constructivist approaches as 15 that identify the,problem,as an adjustable delivery process which has to be tuned to an individuals capabilities However such approaches cannot be used to construct knowledge in a,regarding the type of approach to be used to teach students in our context There are many non constructivist approaches as 15 that identify the problem as an adjustable delivery process which has to be tuned to an individuals capabilities However such approaches cannot be used to construct knowledge in a,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,help to build up capabilities and soft skills from complementary areas as project management that are additionally needed in software projects Constructivist approaches combined with,problem,Based Learning for teaching computer science are a standard approach as mentioned in 9 and 10 Our approach uses application interaction and interpretation for sustainable,help to build up capabilities and soft skills from complementary areas as project management that are additionally needed in software projects Constructivist approaches combined with problem Based Learning for teaching computer science are a standard approach as mentioned in 9 and 10 Our approach uses application interaction and interpretation for sustainable,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,several ideas came up that were logged and discussed by the involved Professors This is listed below as our experience These reflections help to identify,problems,identify possible solutions and improve the module They have been used as qualitative data as often suggested by the Triangulation method 7 V EXPERIENCES FROM,several ideas came up that were logged and discussed by the involved Professors This is listed below as our experience These reflections help to identify problems identify possible solutions and improve the module They have been used as qualitative data as often suggested by the Triangulation method 7 V EXPERIENCES FROM,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,topic theyve chosen they will decide on the project scope based on their own estimations As a consequence their commitment is usually very high The,complexity,of our projects is high i e teams usually have a capacity of about 1000 person hours Critical team situations may occur e g conflicts,topic theyve chosen they will decide on the project scope based on their own estimations As a consequence their commitment is usually very high The complexity of our projects is high i e teams usually have a capacity of about 1000 person hours Critical team situations may occur e g conflicts,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,mates with respect to the criteria discussed above Supervisors regularly reflect on the progress of the project In retrospective meetings at the end of term,problems,and solutions are identified reflected and documented in a blog In this way they live the same Scrum principles that are taught to students A,mates with respect to the criteria discussed above Supervisors regularly reflect on the progress of the project In retrospective meetings at the end of term problems and solutions are identified reflected and documented in a blog In this way they live the same Scrum principles that are taught to students A,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,thesis semester in their companies Exchange students come to our University because of this course Before the project the students are nervous because of the,challenges,but also feverishly look forward to the project because of the fellow students stories Students experience the course to be very intensive because they have,thesis semester in their companies Exchange students come to our University because of this course Before the project the students are nervous because of the challenges but also feverishly look forward to the project because of the fellow students stories Students experience the course to be very intensive because they have,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,deliver continuously and they have to deal with expectations of customers that are instructed to behave like real customers During the module students recognize their,weak,spots get feedback from peers supervisors and customers and are very motivated to improve They know that they are allowed and are even encouraged to,deliver continuously and they have to deal with expectations of customers that are instructed to behave like real customers During the module students recognize their weak spots get feedback from peers supervisors and customers and are very motivated to improve They know that they are allowed and are even encouraged to,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,get feedback from peers supervisors and customers and are very motivated to improve They know that they are allowed and are even encouraged to make,mistakes,and hence learn important lessons B Customers Perspective Also from the outside perspective the responses to that learning style are very positive Industry partners are,get feedback from peers supervisors and customers and are very motivated to improve They know that they are allowed and are even encouraged to make mistakes and hence learn important lessons B Customers Perspective Also from the outside perspective the responses to that learning style are very positive Industry partners are,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,This self reflection and peer feedback was introduced to force students to reflect about how they are preforming to show them what their strengths and,weaknesses,are and how they could or should improve with respect to the final grading It turned out that peer feedback had to be given by,This self reflection and peer feedback was introduced to force students to reflect about how they are preforming to show them what their strengths and weaknesses are and how they could or should improve with respect to the final grading It turned out that peer feedback had to be given by,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,200 means the according skill is assumed to be very good while a value of 100 means that it should be improved since there is,poor,performance Both figures show that during the second evaluation all the skills improve and since this is not only a result of the self reflection,200 means the according skill is assumed to be very good while a value of 100 means that it should be improved since there is poor performance Both figures show that during the second evaluation all the skills improve and since this is not only a result of the self reflection,2018
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,to organize a development process how to deal with teams of software engineers with different skills and motivations and how to produce outstanding software despite,hard,deadlines and ideally a 40 hour week In this paper we report on the setup execution and results of two software development labs with a,to organize a development process how to deal with teams of software engineers with different skills and motivations and how to produce outstanding software despite hard deadlines and ideally a 40 hour week In this paper we report on the setup execution and results of two software development labs with a,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,in practice today with their focus on human interaction and work life balance we believe that experiencing a full agile product development cycle in the,risk,free academic environment is a benefit not only for our students technical skills but to their social skills as well I INTRODUCTION Technical topics such,in practice today with their focus on human interaction and work life balance we believe that experiencing a full agile product development cycle in the risk free academic environment is a benefit not only for our students technical skills but to their social skills as well I INTRODUCTION Technical topics such,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,care must be taken to properly raise the attention of students with a one sided computer science background who are used to solving small algorithmic,problems,on their own to the issues arising in working as a team In particular it is crucial for students to understand the importance of following,care must be taken to properly raise the attention of students with a one sided computer science background who are used to solving small algorithmic problems on their own to the issues arising in working as a team In particular it is crucial for students to understand the importance of following,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,we have experimented with different software development processes and different software products to be created by students in our labs Of particular interest are two,issues,which we have identified to be especially detrimental to the success of the labs Firstly academic instructors tend to introduce cutting edge research topics into,we have experimented with different software development processes and different software products to be created by students in our labs Of particular interest are two issues which we have identified to be especially detrimental to the success of the labs Firstly academic instructors tend to introduce cutting edge research topics into,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,small number of students for example is not going to benefit anyone Two years ago we devised a new software development lab to alleviate these,problems,As we discuss in this paper we have chosen an agile software development approach to the organization of our lab course first to avoid process,small number of students for example is not going to benefit anyone Two years ago we devised a new software development lab to alleviate these problems As we discuss in this paper we have chosen an agile software development approach to the organization of our lab course first to avoid process,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,nature of agile processes We have chosen Scrum 1 as the actual process Furthermore an particular emphasis was placed on an easy to understand fun,challenge,which was highly motivational for students yet offered many of the challenges of real world software products especially the requirements of producing a clean architecture,nature of agile processes We have chosen Scrum 1 as the actual process Furthermore an particular emphasis was placed on an easy to understand fun challenge which was highly motivational for students yet offered many of the challenges of real world software products especially the requirements of producing a clean architecture,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,challenges of real world software products especially the requirements of producing a clean architecture code comprehensiveness and rigorous testing all of which are very important,problems,although they are not algorithmically complex We have chosen a networked multiplayer card game with a challenging graphical user interface as the product Finally we,challenges of real world software products especially the requirements of producing a clean architecture code comprehensiveness and rigorous testing all of which are very important problems although they are not algorithmically complex We have chosen a networked multiplayer card game with a challenging graphical user interface as the product Finally we,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,therefore it appears beneficial to share the knowledge acquired II LAB COURSE SETUP In previous installments of the software development lab course we experienced severe,problems,often the courses were characterized by a prolonged phase of analysis paralysis i e staying in the analysis phase indefinitely that blended into a hacking,therefore it appears beneficial to share the knowledge acquired II LAB COURSE SETUP In previous installments of the software development lab course we experienced severe problems often the courses were characterized by a prolonged phase of analysis paralysis i e staying in the analysis phase indefinitely that blended into a hacking,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,product has to be appealing despite its simplicity In our lab course we decided to develop a simple card game for software engineers called The,bug,is a Lie The game is a parody of the way software is developed in industry with a sarcastic view on the individual roles people,product has to be appealing despite its simplicity In our lab course we decided to develop a simple card game for software engineers called The bug is a Lie The game is a parody of the way software is developed in industry with a sarcastic view on the individual roles people,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,directly get into touch with the game However the game shines not only due to its practicability it also holds enough requirements and extensions to,challenge,students The Bug is a Lie is a multiplayer game which requires the 3 implementation of a robust networking layer authentication facilities and a database,directly get into touch with the game However the game shines not only due to its practicability it also holds enough requirements and extensions to challenge students The Bug is a Lie is a multiplayer game which requires the 3 implementation of a robust networking layer authentication facilities and a database,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,revisited and extended after each iteration to account for the current state of the product and the capabilities of the team Altogether the game The,bug,is a Lie is an easy to understand card game which nevertheless poses enough challenges to students While the game logic is rather straightforward to,revisited and extended after each iteration to account for the current state of the product and the capabilities of the team Altogether the game The bug is a Lie is an easy to understand card game which nevertheless poses enough challenges to students While the game logic is rather straightforward to,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,experienced and not directly involved in the development work they can better supervise the process and ensure that the Scrum values are respected Furthermore organizational,problems,like providing meeting rooms can only be solved by university staff Tutors are also more familiar with the product to be developed thus questions about,experienced and not directly involved in the development work they can better supervise the process and ensure that the Scrum values are respected Furthermore organizational problems like providing meeting rooms can only be solved by university staff Tutors are also more familiar with the product to be developed thus questions about,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,quality of developed software and continuous integration to monitor the integrity of the product The first lesson closes with the vision of the product The,bug,is a Lie and a hands on session for playing the card game The second lesson introduces state of the art tools and libraries to,quality of developed software and continuous integration to monitor the integrity of the product The first lesson closes with the vision of the product The bug is a Lie and a hands on session for playing the card game The second lesson introduces state of the art tools and libraries to,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,tools In the four weeks of development the students also have to organize themselves assign tasks create a design and architecture for the product recognize,impediments,and delays and meet with the tutors i e Scrum master and product owner for Scrum meetings once a week which corresponds to one meeting,tools In the four weeks of development the students also have to organize themselves assign tasks create a design and architecture for the product recognize impediments and delays and meet with the tutors i e Scrum master and product owner for Scrum meetings once a week which corresponds to one meeting,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,Scrum meetings once a week which corresponds to one meeting every thirteen working hours for a fifteen minutes standup meeting report on progress plans and,impediments,in the fashion of a weekly Scrum meeting Other tutors meetings are scheduled as needed during the standup meetings At the end of each sprint,Scrum meetings once a week which corresponds to one meeting every thirteen working hours for a fifteen minutes standup meeting report on progress plans and impediments in the fashion of a weekly Scrum meeting Other tutors meetings are scheduled as needed during the standup meetings At the end of each sprint,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,infrastructure we use in the lab course consists of an integrated development environment IDE with unit testing support a version control system a web based,issue,tracker and wiki for the management of the product and sprint backlogs a continuous integration solution and a UML tool In the selection of the,infrastructure we use in the lab course consists of an integrated development environment IDE with unit testing support a version control system a web based issue tracker and wiki for the management of the product and sprint backlogs a continuous integration solution and a UML tool In the selection of the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,For the 2011 course we selected Eclipse 5 as IDE as it provides an extensible platform with good tool integrations Trac 6 as web based,issue,tracker and wiki and Subversion SVN 7 as version control system All three tools integrate well with each other Eclipse and Trac offer both sophisticated,For the 2011 course we selected Eclipse 5 as IDE as it provides an extensible platform with good tool integrations Trac 6 as web based issue tracker and wiki and Subversion SVN 7 as version control system All three tools integrate well with each other Eclipse and Trac offer both sophisticated,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,base and the project activities e g Trac allows to link to wiki pages tickets source code lines and revisions Trac itself is a minimalistic,issue,tracker that is extensible through plug ins For supporting the Scrum process we add the plug in EstimationTools 8 that draws burn down charts based,base and the project activities e g Trac allows to link to wiki pages tickets source code lines and revisions Trac itself is a minimalistic issue tracker that is extensible through plug ins For supporting the Scrum process we add the plug in EstimationTools 8 that draws burn down charts based,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,balance between practicality and quality of the libraries For example we decided to use JDBC 13 and Swing 14 although both libraries have known design,issues,We furthermore provide students with libraries for networking applications Java NIO 15 JBoss Netty 16 logging and utilities Log4J 17 Google Guava 18 and concurrency,balance between practicality and quality of the libraries For example we decided to use JDBC 13 and Swing 14 although both libraries have known design issues We furthermore provide students with libraries for networking applications Java NIO 15 JBoss Netty 16 logging and utilities Log4J 17 Google Guava 18 and concurrency,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,that were created specifically for the evaluation of the new lab course we can deduce that the lab course setup is very well received Slight,negative,feedback was found on imposing the dictum of good enough design i e to only design a system as far as the currently considered user,that were created specifically for the evaluation of the new lab course we can deduce that the lab course setup is very well received Slight negative feedback was found on imposing the dictum of good enough design i e to only design a system as far as the currently considered user,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,look no further ahead students did not experience the value and the potential of a clean and simple design as it seems they had a,hard,time at creating and capturing proper system designs in general From a birds eye view both courses successfully created a restricted but working and playable,look no further ahead students did not experience the value and the potential of a clean and simple design as it seems they had a hard time at creating and capturing proper system designs in general From a birds eye view both courses successfully created a restricted but working and playable,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,were of acceptable quality with regards to readability and maintainability A Product In the execution of both lab courses we found that the product The,bug,is a Lie is very well accepted The game is explained quickly and especially the hands on sessions where the students can play the real,were of acceptable quality with regards to readability and maintainability A Product In the execution of both lab courses we found that the product The bug is a Lie is very well accepted The game is explained quickly and especially the hands on sessions where the students can play the real,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,the understanding of the game The students generally examine the game so intensely that they ask very precise questions about its rules Concerning the functional,challenges,of the product we discovered that the students are able to grasp the main intentions However students are generally challenged by the implementation specifically by,the understanding of the game The students generally examine the game so intensely that they ask very precise questions about its rules Concerning the functional challenges of the product we discovered that the students are able to grasp the main intentions However students are generally challenged by the implementation specifically by,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,to realize a sophisticated and appealing UI Fig 4 shows the result of the 2011 course Although the game UI itself was a success fundamental,issues,in user story definitions arose in the second sprint of the two courses Usually students tend to separate units of work along the layers of,to realize a sophisticated and appealing UI Fig 4 shows the result of the 2011 course Although the game UI itself was a success fundamental issues in user story definitions arose in the second sprint of the two courses Usually students tend to separate units of work along the layers of,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,from the literature 22 i e in features with real costumer value Still students tend to create a game UI kernel user story with the,problem,that as long as the game UI kernel is under development user stories concerning the realization of game rules need to be queued However the,from the literature 22 i e in features with real costumer value Still students tend to create a game UI kernel user story with the problem that as long as the game UI kernel is under development user stories concerning the realization of game rules need to be queued However the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,choice they would value a fun product more than a product relevant in research or industry However some students criticized that the specific game The,bug,is a Lie is only fun for software engineers and fails to attract non professionals They express that they would appreciate the game more if,choice they would value a fun product more than a product relevant in research or industry However some students criticized that the specific game The bug is a Lie is only fun for software engineers and fails to attract non professionals They express that they would appreciate the game more if,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,the project However tutors must take care that enough time is reserved for intensive coding and Q A sessions since due to the size and,complexity,of the provided skeleton difficulties in understanding and extending it may arise One of the most important advantages of the outlined process organization is the,the project However tutors must take care that enough time is reserved for intensive coding and Q A sessions since due to the size and complexity of the provided skeleton difficulties in understanding and extending it may arise One of the most important advantages of the outlined process organization is the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,realization of the product that are best answered by a product owner familiar with the game Conversely the students can approach the Scrum master with,impediments,or organizational problems In a students course the Scrum master has a highly important supervisor role She needs to pay special attention that the students,realization of the product that are best answered by a product owner familiar with the game Conversely the students can approach the Scrum master with impediments or organizational problems In a students course the Scrum master has a highly important supervisor role She needs to pay special attention that the students,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,master has a highly important supervisor role She needs to pay special attention that the students stick to the Scrum values because they often experience,difficulties,with self responsibility and self organization The Scrum master has to remind the students that they not only report on technical advances in the weekly,master has a highly important supervisor role She needs to pay special attention that the students stick to the Scrum values because they often experience difficulties with self responsibility and self organization The Scrum master has to remind the students that they not only report on technical advances in the weekly,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,The Scrum master has to remind the students that they not only report on technical advances in the weekly Scrum meetings but also on delays,impediments,and next steps and that they critically analyze their best practices They have to establish openness and honesty as a common value so that problems,The Scrum master has to remind the students that they not only report on technical advances in the weekly Scrum meetings but also on delays impediments and next steps and that they critically analyze their best practices They have to establish openness and honesty as a common value so that problems,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,2010 lab course closeness ignorance suspicion and mistrust among the students and towards the tutors caused the degradation of software quality in the second sprint,issues,were not reported until the review meeting as can be seen in the lack of reported issues in Fig 6 This installment clearly demonstrated that,2010 lab course closeness ignorance suspicion and mistrust among the students and towards the tutors caused the degradation of software quality in the second sprint issues were not reported until the review meeting as can be seen in the lack of reported issues in Fig 6 This installment clearly demonstrated that,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,not wait for any instructions for example when discovering ambiguities in user stories In 2011 the students used an open and honest communication channel where,issues,were reported immediately see Fig 8 which led to a higher quality of the final product We regard the Scrum process as suitable for the,not wait for any instructions for example when discovering ambiguities in user stories In 2011 the students used an open and honest communication channel where issues were reported immediately see Fig 8 which led to a higher quality of the final product We regard the Scrum process as suitable for the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,customer and the development team into touch and the retrospective exposes favorable and unfavorable methods and practices However at the beginning the estimation process is,hard,for the students We recommend that the tutors assist the first estimations by partitioning user stories into tasks and providing solution approaches but do not,customer and the development team into touch and the retrospective exposes favorable and unfavorable methods and practices However at the beginning the estimation process is hard for the students We recommend that the tutors assist the first estimations by partitioning user stories into tasks and providing solution approaches but do not,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,to arrange the next steps when progressing fast Due to the lack of a constantly available shared working place the students also suffer from the,problems,of distributed development and reduced availability Therefore they must be encouraged to organize regular pair programming or working meetings to benefit from quick communication channels,to arrange the next steps when progressing fast Due to the lack of a constantly available shared working place the students also suffer from the problems of distributed development and reduced availability Therefore they must be encouraged to organize regular pair programming or working meetings to benefit from quick communication channels,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,skeleton for recording ideas by documenting the sprint planning meetings and for clarifying designs by supporting design discussions with UML Unfortunately the students often have,difficulties,in formulating their visions in a fast and simple way since they are either not used to creating a proper system design at all or,skeleton for recording ideas by documenting the sprint planning meetings and for clarifying designs by supporting design discussions with UML Unfortunately the students often have difficulties in formulating their visions in a fast and simple way since they are either not used to creating a proper system design at all or,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,sprint keep development on time and effective while the students are trained in self responsibility and self organization Conversely self responsibility and self organization pose,challenges,for grading As previously mentioned the focus of this lab course is not on the completion of the product but on the realization of the,sprint keep development on time and effective while the students are trained in self responsibility and self organization Conversely self responsibility and self organization pose challenges for grading As previously mentioned the focus of this lab course is not on the completion of the product but on the realization of the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,can be easily supervised To rate the realization of the process we monitor the participation of each student in the meetings and the number of,issues,detected by the team since this reflects the degree of commitment to the lab course In the same way we do not recommend to assign,can be easily supervised To rate the realization of the process we monitor the participation of each student in the meetings and the number of issues detected by the team since this reflects the degree of commitment to the lab course In the same way we do not recommend to assign,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,way we do not recommend to assign roles to students that involve management activities e g supervision of code coverage or documentation as it is,difficult,to grade students for results achieved by others Common responsibility and shared code ownership lead to a high level of commitment and quality but need,way we do not recommend to assign roles to students that involve management activities e g supervision of code coverage or documentation as it is difficult to grade students for results achieved by others Common responsibility and shared code ownership lead to a high level of commitment and quality but need,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,achieved However as the students become more and more familiar with the tooling infrastructure progress can still be impeded due to design and code quality,issues,of the created code Luckily acquired familiarity with the infrastructure allows students to cope with these issues Also the visibility and browsability of the code,achieved However as the students become more and more familiar with the tooling infrastructure progress can still be impeded due to design and code quality issues of the created code Luckily acquired familiarity with the infrastructure allows students to cope with these issues Also the visibility and browsability of the code,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,Also the visibility and browsability of the code base progress and remaining workload that Eclipse Trac and SVN offer enables students and tutors to discover,impediments,and problems early enough to remedy them within the lab course The immediate and persistent feedback provided by continuous integration specifically concerning unit test coverage,Also the visibility and browsability of the code base progress and remaining workload that Eclipse Trac and SVN offer enables students and tutors to discover impediments and problems early enough to remedy them within the lab course The immediate and persistent feedback provided by continuous integration specifically concerning unit test coverage,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,lab course The immediate and persistent feedback provided by continuous integration specifically concerning unit test coverage also allow the tutors to point the finger on,issues,that are relevant for project success On the negative side however we discovered that students have a hard time getting used to specifying and updating,lab course The immediate and persistent feedback provided by continuous integration specifically concerning unit test coverage also allow the tutors to point the finger on issues that are relevant for project success On the negative side however we discovered that students have a hard time getting used to specifying and updating,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,and general approach E Skeleton The provided skeleton is well adopted by students In the first sprint of both course installments however students had unexpected,difficulties,in understanding the provided skeleton and in finding the proper starting points Students need very extensive and clear documentation of interfaces and starting points and,and general approach E Skeleton The provided skeleton is well adopted by students In the first sprint of both course installments however students had unexpected difficulties in understanding the provided skeleton and in finding the proper starting points Students need very extensive and clear documentation of interfaces and starting points and,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,finding the proper starting points Students need very extensive and clear documentation of interfaces and starting points and it seems like the provided explanations were,insufficient,Also students tend not to maintain the coding and testing standards of the skeleton by themselves Several gentle reminders in sprint retrospectives and dedicated design,finding the proper starting points Students need very extensive and clear documentation of interfaces and starting points and it seems like the provided explanations were insufficient Also students tend not to maintain the coding and testing standards of the skeleton by themselves Several gentle reminders in sprint retrospectives and dedicated design,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,motivating and positive learning environment for maximum knowledge transfer On the organizational side we observed in both installments of the lab that the students were,struggling,for proper communication channels Students tried to establish the use of forums or instant chat clients with varying success We cannot provide a conclusive and,motivating and positive learning environment for maximum knowledge transfer On the organizational side we observed in both installments of the lab that the students were struggling for proper communication channels Students tried to establish the use of forums or instant chat clients with varying success We cannot provide a conclusive and,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,well founded recommendation on the best electronic communication means but a group solution like Google groups or Yahoo groups may be a worthwhile addition The,problem,of proper communication channels in both installments is obviously due to the lack of a constantly available shared working place In fact students quickly began,well founded recommendation on the best electronic communication means but a group solution like Google groups or Yahoo groups may be a worthwhile addition The problem of proper communication channels in both installments is obviously due to the lack of a constantly available shared working place In fact students quickly began,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,right away or to provide a meeting place and fixed hours Also we discovered that the use of SVN for version control can cause significant,issues,in collaboration Students that need longer for finishing tasks and therefore refrain from committing often to the repository can find themselves in the challenging situation,right away or to provide a meeting place and fixed hours Also we discovered that the use of SVN for version control can cause significant issues in collaboration Students that need longer for finishing tasks and therefore refrain from committing often to the repository can find themselves in the challenging situation,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,from committing often to the repository can find themselves in the challenging situation of having to merge a considerable amount of conflicts To alleviate this,problem,we consider using a distributed version control system like Git 24 as a replacement for SVN Git would allow students to commit small increments to,from committing often to the repository can find themselves in the challenging situation of having to merge a considerable amount of conflicts To alleviate this problem we consider using a distributed version control system like Git 24 as a replacement for SVN Git would allow students to commit small increments to,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,to be ideal for introducing software processes not to mention its widespread industry acceptance Other key lessons learned from our labs include using a fun,challenge,for student motivation and providing a skeleton and development environment for a quick start We hope that our findings may benefit and inspire other instructors,to be ideal for introducing software processes not to mention its widespread industry acceptance Other key lessons learned from our labs include using a fun challenge for student motivation and providing a skeleton and development environment for a quick start We hope that our findings may benefit and inspire other instructors,2012
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,of the Ministry of Education and Science of Ukraine has been implementing a project on modernization of educational programs based on the project based and,problem,based learning PBL The project investigates the strategies and methods of learning and teaching aimed at contextualizing the educational process and implementing situated learning which,of the Ministry of Education and Science of Ukraine has been implementing a project on modernization of educational programs based on the project based and problem based learning PBL The project investigates the strategies and methods of learning and teaching aimed at contextualizing the educational process and implementing situated learning which,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,knowledge and practical teamwork and project management skills while learning both relevant software and the basics of developing cyber physical systems of varying levels of,complexity,The peculiarity of the course is its interdisciplinary nature and connection between learning outcomes and content with other courses taught to students in each semester,knowledge and practical teamwork and project management skills while learning both relevant software and the basics of developing cyber physical systems of varying levels of complexity The peculiarity of the course is its interdisciplinary nature and connection between learning outcomes and content with other courses taught to students in each semester,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,x The integrated course is aimed at fostering continuity in the formation of soft skills by coordinating the learning outcomes from different semesters x The,complexity,of project tasks is increasing in order to save the hierarchical nature of engineering education x The integration of Agile practices and UML models which,x The integrated course is aimed at fostering continuity in the formation of soft skills by coordinating the learning outcomes from different semesters x The complexity of project tasks is increasing in order to save the hierarchical nature of engineering education x The integration of Agile practices and UML models which,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,the materials offered by the teacher and there is a discussion during the lecture aimed at revealing the level of awareness of the material and,issues,that cause difficulties Self directed student access to the various online tutorials open educational platforms and MOOC is also encouraged This promotes student involvement into,the materials offered by the teacher and there is a discussion during the lecture aimed at revealing the level of awareness of the material and issues that cause difficulties Self directed student access to the various online tutorials open educational platforms and MOOC is also encouraged This promotes student involvement into,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,course Students upload the lab assignment reports via Google Classroom according to an assigned schedule Project tasks are performed in teams As mentioned above their,complexity,will increase with each semester In the first and second semesters of the course Project Work Technology they are primarily aimed at adapting students to,course Students upload the lab assignment reports via Google Classroom according to an assigned schedule Project tasks are performed in teams As mentioned above their complexity will increase with each semester In the first and second semesters of the course Project Work Technology they are primarily aimed at adapting students to,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,system is focused on the need to take standardized tests for admission to higher education institutions This approach leads to the fact that students have,difficulty,engaging in activities that are based on a high degree of autonomy and accordingly the ability to act as self directed learners Therefore we started,system is focused on the need to take standardized tests for admission to higher education institutions This approach leads to the fact that students have difficulty engaging in activities that are based on a high degree of autonomy and accordingly the ability to act as self directed learners Therefore we started,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,components and generic competencies including personal and interpersonal components as well as those required later in the education process and professional field B Types of,problems,and Projects The projects task in the first semester for the course Project Work Technology was to develop the concept of small scale information system,components and generic competencies including personal and interpersonal components as well as those required later in the education process and professional field B Types of problems and Projects The projects task in the first semester for the course Project Work Technology was to develop the concept of small scale information system,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,considered as ill defined Students had to model system goals identify actors and use cases draw main UML diagrams for own system taking into account,constraints,of the real world Additionally attention was paid to the use of the simplest tools of organizing individual and teamwork namely Trello based Kanban boards,considered as ill defined Students had to model system goals identify actors and use cases draw main UML diagrams for own system taking into account constraints of the real world Additionally attention was paid to the use of the simplest tools of organizing individual and teamwork namely Trello based Kanban boards,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,teammates helped me understand the ideas and materials of the project 3 I learned how to plan the work of the team 4 It was,difficult,for me to work with ill defined problem 5 I was active in discussing the project and in expressing my own position 6 I learned,teammates helped me understand the ideas and materials of the project 3 I learned how to plan the work of the team 4 It was difficult for me to work with ill defined problem 5 I was active in discussing the project and in expressing my own position 6 I learned,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,for it 7 I acted as a team leader 8 I played different roles in the team 9 I learned to identify my strengths and,weaknesses,in the team 10 I think the teacher helped organize the collaboration 11 It was difficult to communicate with other team members 12 I felt,for it 7 I acted as a team leader 8 I played different roles in the team 9 I learned to identify my strengths and weaknesses in the team 10 I think the teacher helped organize the collaboration 11 It was difficult to communicate with other team members 12 I felt,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,manage time 10 Present own ideas and speak on behalf of the team Understand the economic social and 11 security aspects of engineering and IT,issues,Mean SD 4 07 1 00 4 21 0 70 4 29 0 83 4 36 0 74 3 79 0 89 3 93 0,manage time 10 Present own ideas and speak on behalf of the team Understand the economic social and 11 security aspects of engineering and IT issues Mean SD 4 07 1 00 4 21 0 70 4 29 0 83 4 36 0 74 3 79 0 89 3 93 0,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,their willingness to cooperate in a team According to the survey results students are interested in tasks related to the real professional context The main,problem,however is a lack of self directed learning skills in students which is especially noticeable for underclassmen The students positively perceive the use of ICT,their willingness to cooperate in a team According to the survey results students are interested in tasks related to the real professional context The main problem however is a lack of self directed learning skills in students which is especially noticeable for underclassmen The students positively perceive the use of ICT,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,participating in the proposed interactive tasks Therefore the general evaluation of the course Project Work Technology implementation reveals the importance of such activity despite some,difficulties,which were observed Such as the necessity of coordinating learning outcomes and course content requires a responsible attitude of all stakeholders as well as regular,participating in the proposed interactive tasks Therefore the general evaluation of the course Project Work Technology implementation reveals the importance of such activity despite some difficulties which were observed Such as the necessity of coordinating learning outcomes and course content requires a responsible attitude of all stakeholders as well as regular,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,implementation At the same time the use of the Scrum method gives an opportunity to form some flexible structure in which separate topics and the,complexity,of projects could change for example during the involvement of local businesses Also among the significant reasons to adopt Agile learning for first year students,implementation At the same time the use of the Scrum method gives an opportunity to form some flexible structure in which separate topics and the complexity of projects could change for example during the involvement of local businesses Also among the significant reasons to adopt Agile learning for first year students,2020
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,subset of final product features The app design team used two week sprints during the second semester of the course Each sprint iteration included planning,issue,triage and assignment demonstration of progress and release all facilitating frequent communication among team members The team held meetings with a faculty mentor and the,subset of final product features The app design team used two week sprints during the second semester of the course Each sprint iteration included planning issue triage and assignment demonstration of progress and release all facilitating frequent communication among team members The team held meetings with a faculty mentor and the,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,similar to Scrum for managing product development and used two week sprints during the second semester of the course fall 2013 Each sprint iteration included,issue,triage and assignment demonstration of progress release and planning all facilitating frequent communication among team members The team held meetings with a faculty mentor and,similar to Scrum for managing product development and used two week sprints during the second semester of the course fall 2013 Each sprint iteration included issue triage and assignment demonstration of progress release and planning all facilitating frequent communication among team members The team held meetings with a faculty mentor and,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,store Those who took the questionnaire and a few others joined the testing group to use UBR Using this as the release system updates and,bug,fixes to the alpha release were automatically received by users At the beginning of fall semester the team met with the client to go over,store Those who took the questionnaire and a few others joined the testing group to use UBR Using this as the release system updates and bug fixes to the alpha release were automatically received by users At the beginning of fall semester the team met with the client to go over,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,next month was spent implementing the other survey protocols From then to the end of the semester most time was spent on finding and fixing,bugs,adding minor functionality and creating project documentation for the senior design course As the team developed UBR using two week sprints during fall semester they,next month was spent implementing the other survey protocols From then to the end of the semester most time was spent on finding and fixing bugs adding minor functionality and creating project documentation for the senior design course As the team developed UBR using two week sprints during fall semester they,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,during fall semester they released new features and fixes every two weeks Before each release they performed scenario validation to detect regressions functional or performance,bugs,in software and test overall usability The scenario validation involved performing simulated surveys using each feature of the app By doing this they were able,during fall semester they released new features and fixes every two weeks Before each release they performed scenario validation to detect regressions functional or performance bugs in software and test overall usability The scenario validation involved performing simulated surveys using each feature of the app By doing this they were able,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,feature of the app By doing this they were able to catch almost all regressions before deployment The client and user base quickly reported other,issues,e g specific to devices not available to the team Scenario validation was selected as the primary means of testing due to the dynamic nature,feature of the app By doing this they were able to catch almost all regressions before deployment The client and user base quickly reported other issues e g specific to devices not available to the team Scenario validation was selected as the primary means of testing due to the dynamic nature,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,progress in their news reader With UBR installed through the Google Play store users were presented with the option to submit a report after an,error,Through the developer console the team could view the stack traces of the errors as well as device information The app itself includes a page,progress in their news reader With UBR installed through the Google Play store users were presented with the option to submit a report after an error Through the developer console the team could view the stack traces of the errors as well as device information The app itself includes a page,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,traces of the errors as well as device information The app itself includes a page through which users can submit feedback in the categories of,bug,feature request and comment These are collected on the UBR server Users also communicated directly with the client who informed the team about feature requests,traces of the errors as well as device information The app itself includes a page through which users can submit feedback in the categories of bug feature request and comment These are collected on the UBR server Users also communicated directly with the client who informed the team about feature requests,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,1 How did the team communicate with you about app functionality as the project proceeded Most meetings lasted approximately one hour We would bring questions,problems,and feedback about things that were updated between meetings We discussed with the students things that were being worked on presently goals for the next,1 How did the team communicate with you about app functionality as the project proceeded Most meetings lasted approximately one hour We would bring questions problems and feedback about things that were updated between meetings We discussed with the students things that were being worked on presently goals for the next,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,on 2 How did the process followed by the team enhance communication with you We always knew what the team was working on and what,challenges,they were facing We also had lots of email communication for problems or questions that came up It was nice to know that the team,on 2 How did the process followed by the team enhance communication with you We always knew what the team was working on and what challenges they were facing We also had lots of email communication for problems or questions that came up It was nice to know that the team,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,facing We also had lots of email communication for problems or questions that came up It was nice to know that the team was working,hard,and always making progress This was the fourth group that I have worked with and their process made it much easier for us to help,facing We also had lots of email communication for problems or questions that came up It was nice to know that the team was working hard and always making progress This was the fourth group that I have worked with and their process made it much easier for us to help,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,3 How was product quality affected by the approach taken by the team the teams approach greatly affected the quality in a positive way Functionality,issues,were solved quickly and effectively with open and constant communication 4 Do you have other observations about the team or product I have very little,3 How was product quality affected by the approach taken by the team the teams approach greatly affected the quality in a positive way Functionality issues were solved quickly and effectively with open and constant communication 4 Do you have other observations about the team or product I have very little,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,sprint There is both a constant pace of development and constant attention to good design The UBR team noted that these benefits helped address two,challenges,from the student perspective The standard waterfall approach sometimes amounts to guesswork The iterative development made planning more tractable Senior design students are also very,sprint There is both a constant pace of development and constant attention to good design The UBR team noted that these benefits helped address two challenges from the student perspective The standard waterfall approach sometimes amounts to guesswork The iterative development made planning more tractable Senior design students are also very,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,prepare students for engineering practice and the workplace During the first semester students work in project teams to propose a design solution to an engineering,problem,and use their technical writing skills to produce a project plan and design report During the second semester students create a design prototype and deliver,prepare students for engineering practice and the workplace During the first semester students work in project teams to propose a design solution to an engineering problem and use their technical writing skills to produce a project plan and design report During the second semester students create a design prototype and deliver,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,experiments as well as to analyze and interpret data c an ability to design a system component or process to meet desired needs within realistic,constraints,such as economic environmental social political ethical health and safety manufacturability and sustainability d an ability to function on multidisciplinary teams e an ability to,experiments as well as to analyze and interpret data c an ability to design a system component or process to meet desired needs within realistic constraints such as economic environmental social political ethical health and safety manufacturability and sustainability d an ability to function on multidisciplinary teams e an ability to,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,political ethical health and safety manufacturability and sustainability d an ability to function on multidisciplinary teams e an ability to identify formulate and solve engineering,problems,f an understanding of professional and ethical responsibility g an ability to communicate effectively h the broad education necessary to understand the impact of engineering,political ethical health and safety manufacturability and sustainability d an ability to function on multidisciplinary teams e an ability to identify formulate and solve engineering problems f an understanding of professional and ethical responsibility g an ability to communicate effectively h the broad education necessary to understand the impact of engineering,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,economic environmental and societal context i a recognition of the need for and an ability to engage in lifelong learning j a knowledge of contemporary,issues,k an ability to use the techniques skills and modern engineering tools necessary for engineering practice Outcomes d f g h i and j have,economic environmental and societal context i a recognition of the need for and an ability to engage in lifelong learning j a knowledge of contemporary issues k an ability to use the techniques skills and modern engineering tools necessary for engineering practice Outcomes d f g h i and j have,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,Engineering Criteria as a culminating design experience in which students apply knowledge from previous coursework and new information as needed to a complex open ended,problem,with realistic constraints Thus design skills associated with outcomes b c e and k are commonly addressed as well Improvements and innovation in senior design,Engineering Criteria as a culminating design experience in which students apply knowledge from previous coursework and new information as needed to a complex open ended problem with realistic constraints Thus design skills associated with outcomes b c e and k are commonly addressed as well Improvements and innovation in senior design,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,Level 1 assessment uses experiential related information from a cross section of students in the program that can be used to identify trends and potential,problems,Level 2 assessment uses senior level information from all students in the culminating capstone courses Students demonstrate attainment of outcomes through senior design projects and,Level 1 assessment uses experiential related information from a cross section of students in the program that can be used to identify trends and potential problems Level 2 assessment uses senior level information from all students in the culminating capstone courses Students demonstrate attainment of outcomes through senior design projects and,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,to accomplish objectives taking action to achieve goals beyond what is required being proactive Key Actions Responds quickly Takes immediate action when confronted with a,problem,or when made aware of a situation Takes independent action Implements new ideas or potential solutions without prompting does not wait for others to take,to accomplish objectives taking action to achieve goals beyond what is required being proactive Key Actions Responds quickly Takes immediate action when confronted with a problem or when made aware of a situation Takes independent action Implements new ideas or potential solutions without prompting does not wait for others to take,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,for use on a project or product Responding effectively with minimal direction by identifying appropriate information tools or people Creating new and effective solutions to,problems,Responding quickly to feedback Initiating discussions with team members when faced with a problem Developing solutions to engineering problems in a timely manner Independently conducting,for use on a project or product Responding effectively with minimal direction by identifying appropriate information tools or people Creating new and effective solutions to problems Responding quickly to feedback Initiating discussions with team members when faced with a problem Developing solutions to engineering problems in a timely manner Independently conducting,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,conferences and seminars Learning local state and federal laws to understand impact on engineering practices Learning new tools to design a product or solve a,problem,Surveys are administered by the college for all students on internships Each supervisor employer of a student intern provides an assessment of the students demonstration,conferences and seminars Learning local state and federal laws to understand impact on engineering practices Learning new tools to design a product or solve a problem Surveys are administered by the college for all students on internships Each supervisor employer of a student intern provides an assessment of the students demonstration,2014
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,for a University Software Engineering Course AbstractTeaching agile software development by pairing lectures with hands on projects has become the norm This approach poses the,problem,of grading and evaluating practical project work as well as process conformance during development Yet few best practices exist for measuring the success of students,for a University Software Engineering Course AbstractTeaching agile software development by pairing lectures with hands on projects has become the norm This approach poses the problem of grading and evaluating practical project work as well as process conformance during development Yet few best practices exist for measuring the success of students,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,be refined The metrics reflect our experiences with running a software engineering course over the last five years They measure aspects which students frequently have,issues,with and that diminish process adoption and student engagement We present the proposed metrics which were tested in the latest course installment alongside tutoring lectures,be refined The metrics reflect our experiences with running a software engineering course over the last five years They measure aspects which students frequently have issues with and that diminish process adoption and student engagement We present the proposed metrics which were tested in the latest course installment alongside tutoring lectures,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,can perform this assessment complementing proven techniques such as assessments by tutors or exams Conformance metrics rely on collected development data e g commits or,issues,which are created during regular development activities This ensures that established workflows do not need to be adapted and additional documentation overhead for students is,can perform this assessment complementing proven techniques such as assessments by tutors or exams Conformance metrics rely on collected development data e g commits or issues which are created during regular development activities This ensures that established workflows do not need to be adapted and additional documentation overhead for students is,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,i e patterns in the collected data that do not comply with the details of the process are referred to as violations Violations can reveal,problem,areas in the executed process that need special attention This approach is comparable to test coverage tools and the Lint 1 tool which do not,i e patterns in the collected data that do not comply with the details of the process are referred to as violations Violations can reveal problem areas in the executed process that need special attention This approach is comparable to test coverage tools and the Lint 1 tool which do not,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,special attention This approach is comparable to test coverage tools and the Lint 1 tool which do not guarantee the absence of defects but identify,weaknesses,II CONFORMANCE METRICS Conformance metrics follow the iterative model described in Figure 1 adapted from Zazworka et al 2 conformance metrics are defined violations are,special attention This approach is comparable to test coverage tools and the Lint 1 tool which do not guarantee the absence of defects but identify weaknesses II CONFORMANCE METRICS Conformance metrics follow the iterative model described in Figure 1 adapted from Zazworka et al 2 conformance metrics are defined violations are,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,this process should be included A list of data sources the metric requires and which the query is based on e g code repositories or,issue,trackers Steps needed to extract violations from the data sources Ideally these steps can be automated e g as a database query Function that maps,this process should be included A list of data sources the metric requires and which the query is based on e g code repositories or issue trackers Steps needed to extract violations from the data sources Ideally these steps can be automated e g as a database query Function that maps,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,the degree of mismatch between the executed process and the one detailed in the description Description of what the metric does not measure e g,limitations,or possible misconceptions about the results of the metric Topics in the domain of agile software development the metric attempts at measuring e g XP,the degree of mismatch between the executed process and the one detailed in the description Description of what the metric does not measure e g limitations or possible misconceptions about the results of the metric Topics in the domain of agile software development the metric attempts at measuring e g XP,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,a list of process violations by teams and iteration as well as a score indicating the seriousness of the extracted violations MATCH m Milestone i,issue,l Label WHERE m title Sprint 12 and m due_on timestamp AND i current_state open WITH m m title as Sprint collect DISTINCT i AS,a list of process violations by teams and iteration as well as a score indicating the seriousness of the extracted violations MATCH m Milestone i issue l Label WHERE m title Sprint 12 and m due_on timestamp AND i current_state open WITH m m title as Sprint collect DISTINCT i AS,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,l Label WHERE m title Sprint 12 and m due_on timestamp AND i current_state open WITH m m title as Sprint collect DISTINCT i AS,issues,count DISTINCT i AS Amount MATCH m milestone j Issue WITH Issues count j AS Total Amount m title as Sprint RETURN Sprint Amount Issues,l Label WHERE m title Sprint 12 and m due_on timestamp AND i current_state open WITH m m title as Sprint collect DISTINCT i AS issues count DISTINCT i AS Amount MATCH m milestone j Issue WITH Issues count j AS Total Amount m title as Sprint RETURN Sprint Amount Issues,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,WITH Issues count j AS Total Amount m title as Sprint RETURN Sprint Amount Issues Total Amount Total AS Percent Sprint Amount Sprint 12 2,issues,129 135 Total Percent 10 0 2 Listing 1 Example of a Neo4J graph database query 4 as well as an example result of user,WITH Issues count j AS Total Amount m title as Sprint RETURN Sprint Amount Issues Total Amount Total AS Percent Sprint Amount Sprint 12 2 issues 129 135 Total Percent 10 0 2 Listing 1 Example of a Neo4J graph database query 4 as well as an example result of user,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,fit the project and team context Especially the amount of false positives i e process violations that were detected but do not actually pose a,problem,for a development team need to be minimized The amount of real violations i e true positives can be reduced by modifying the query or,fit the project and team context Especially the amount of false positives i e process violations that were detected but do not actually pose a problem for a development team need to be minimized The amount of real violations i e true positives can be reduced by modifying the query or,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,many edits by only few authors The more of these there are the less the practice of Collective Code Ownership was followed Name Introducing Untested,complexity,Synopsis Increasing code complexity while decreasing code coverage Severity Normal Effort Medium Data Source version control code coverage stats Description In TDD an automated test,many edits by only few authors The more of these there are the less the practice of Collective Code Ownership was followed Name Introducing Untested complexity Synopsis Increasing code complexity while decreasing code coverage Severity Normal Effort Medium Data Source version control code coverage stats Description In TDD an automated test,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,act as a reminder to work on the current story This metric identifies commits where TDD was not followed i e commits which introduced additional,complexity,to the system but led to decreased code coverage Name Huge User Stories Synopsis User stories that are unusually large Severity Data Source Low User,act as a reminder to work on the current story This metric identifies commits where TDD was not followed i e commits which introduced additional complexity to the system but led to decreased code coverage Name Huge User Stories Synopsis User stories that are unusually large Severity Data Source Low User,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,an index card 11 If a user story is much longer than the average this might be an indicator that it is too large was,hard,to estimate and should be split 10 The user stories identified by this metric are significantly above the average length of stories in the sprint,an index card 11 If a user story is much longer than the average this might be an indicator that it is too large was hard to estimate and should be split 10 The user stories identified by this metric are significantly above the average length of stories in the sprint,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,the main tool of specifying what will be done in a sprint 11 User stories should not overlap in described functionality as there is the,risk,of features being developed twice if these user stories are given to different teams in the same sprint This metric identifies user stories that were,the main tool of specifying what will be done in a sprint 11 User stories should not overlap in described functionality as there is the risk of features being developed twice if these user stories are given to different teams in the same sprint This metric identifies user stories that were,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,If work is slanted towards the end of the sprint and code is committed at the very last minute this can cause a range of,problems,Scrum meetings might be ineffective due to lack of content blockers for or by other teams can not be communicated in a timely fashion and,If work is slanted towards the end of the sprint and code is committed at the very last minute this can cause a range of problems Scrum meetings might be ineffective due to lack of content blockers for or by other teams can not be communicated in a timely fashion and,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,lack of content blockers for or by other teams can not be communicated in a timely fashion and code review through other developers becomes more,difficult,This metric measures commits that were made during the last minutes before sprint deadline The more of these there are the less likely it is,lack of content blockers for or by other teams can not be communicated in a timely fashion and code review through other developers becomes more difficult This metric measures commits that were made during the last minutes before sprint deadline The more of these there are the less likely it is,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,team its capabilities and the technologies in use 11 While the amount of user stories a developer should be able to finish per day is,hard,to state generally working on multiple stories per day results in increased context switching overhead 18 This metric measures the average amount of user stories,team its capabilities and the technologies in use 11 While the amount of user stories a developer should be able to finish per day is hard to state generally working on multiple stories per day results in increased context switching overhead 18 This metric measures the average amount of user stories,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,requests that were closed quickly and had no comments The more of these speedy pulls are found as a percentage of all pull requests the,worse,the score Effort Low IV CONCLUSION Using the presented conformance metrics violations for all teams in all sprints could be extracted from data gathered in,requests that were closed quickly and had no comments The more of these speedy pulls are found as a percentage of all pull requests the worse the score Effort Low IV CONCLUSION Using the presented conformance metrics violations for all teams in all sprints could be extracted from data gathered in,2016
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,development method eXtreme Programming software quality software testing INTRODUCTION The National Institute of Standards and Technology released a report on June 28 2002 that software,failures,cost in the U S economy an estimated 59 5 billion per year 2 The software testing phase cost is 40 70 of the total,development method eXtreme Programming software quality software testing INTRODUCTION The National Institute of Standards and Technology released a report on June 28 2002 that software failures cost in the U S economy an estimated 59 5 billion per year 2 The software testing phase cost is 40 70 of the total,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,quality and they believed that developers did not pay adequate attention in the development phase 3 We believe one of the root causes of this,problem,is our educational system Students do not receive enough knowledge or training about how to test their code and how to develop reliable and higher,quality and they believed that developers did not pay adequate attention in the development phase 3 We believe one of the root causes of this problem is our educational system Students do not receive enough knowledge or training about how to test their code and how to develop reliable and higher,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,lifecycle as an integral part of programming practice Must learn how to test their own code and write test cases before writing code Understand the,problem,requirements better that would be helpful while writing the programs Make a cultural change in program development and consider program quality as an objective THE,lifecycle as an integral part of programming practice Must learn how to test their own code and write test cases before writing code Understand the problem requirements better that would be helpful while writing the programs Make a cultural change in program development and consider program quality as an objective THE,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,like traditional method s students The TBC method would help students understanding the requirements reducing the ambiguities in the system writing the codes and revealing,faults,or failures in the program In our study we collected both the TBC and non TBC sections students programs and created our own black box,like traditional method s students The TBC method would help students understanding the requirements reducing the ambiguities in the system writing the codes and revealing faults or failures in the program In our study we collected both the TBC and non TBC sections students programs and created our own black box,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,suite in the TBC sections was at least 24 higher than the non TBC sections We have also used different automated tools to measure the,fault,density in the programs in both sections and found the similar improvement in the TBC section s code quality I Some activities introduced in the,suite in the TBC sections was at least 24 higher than the non TBC sections We have also used different automated tools to measure the fault density in the programs in both sections and found the similar improvement in the TBC section s code quality I Some activities introduced in the,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,the traditional methods and found that the TBC method improves the program quality II Compare the software quality We have compared the number of warnings,faults,or failures found in both sections of students programs using several automated tools In the previous section we measured the software or program quality in,the traditional methods and found that the TBC method improves the program quality II Compare the software quality We have compared the number of warnings faults or failures found in both sections of students programs using several automated tools In the previous section we measured the software or program quality in,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,passing rate was at least 24 higher than the non TBC sections Using different measuring tools we found that the non TBC section contains more,faults,and failures in the code We concluded that the TBC sections have less faults or failures in their code which supports our previous claim that,passing rate was at least 24 higher than the non TBC sections Using different measuring tools we found that the non TBC section contains more faults and failures in the code We concluded that the TBC sections have less faults or failures in their code which supports our previous claim that,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,terms of the passing rate of the black box test cases Students 67 88 have claimed that this method has helped them in understanding the,problems,and writing the codes made the code easier to debug improved the students code reliability and quality and lot more TABLE I COMPARE SOFTWARE QUALITY,terms of the passing rate of the black box test cases Students 67 88 have claimed that this method has helped them in understanding the problems and writing the codes made the code easier to debug improved the students code reliability and quality and lot more TABLE I COMPARE SOFTWARE QUALITY,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,what they expected it to do Generally they create a toy program that is superficially tested graded and eventually discarded Understand the requirements and the,problems,Data specification data modeling and write test cases before coding cycles force the students to understand the requirements and the problem better 67 88 of,what they expected it to do Generally they create a toy program that is superficially tested graded and eventually discarded Understand the requirements and the problems Data specification data modeling and write test cases before coding cycles force the students to understand the requirements and the problem better 67 88 of,2007
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,of class so class time is spent on the projects and teaching is on demand individual mentoring with lectures labs inserted as necessary One significant,challenge,in managing this course is tracking individual responsibilities and activities to ensure that all of the students are fully engaged in the project To accomplish,of class so class time is spent on the projects and teaching is on demand individual mentoring with lectures labs inserted as necessary One significant challenge in managing this course is tracking individual responsibilities and activities to ensure that all of the students are fully engaged in the project To accomplish,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,of disciplined software engineering methodologies This is done through two courses Traditional Life Cycle and Extreme Programming XP However we have found that it is,difficult,to ensure that students are following the XP methodologies in a disciplined manner This paper describes the challenges that arise in teaching XP and strategies,of disciplined software engineering methodologies This is done through two courses Traditional Life Cycle and Extreme Programming XP However we have found that it is difficult to ensure that students are following the XP methodologies in a disciplined manner This paper describes the challenges that arise in teaching XP and strategies,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,in the quality of the product that plan driven methodologies provide XP includes 12 practices 1 6 and our course includes them all However the,challenges,that we face were rooted in these practices each of which will be discussed later in the paper Test Driven Development Pair Programming The Planning,in the quality of the product that plan driven methodologies provide XP includes 12 practices 1 6 and our course includes them all However the challenges that we face were rooted in these practices each of which will be discussed later in the paper Test Driven Development Pair Programming The Planning,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,require By the end of the lab they had developed a non trivial pair of classes using TDD DESIGNING FOR TESTABILITY One of the significant,challenges,for TDD is automating the tests for GUI aspects of the system In particular writing JUnit tests for code that is initiated through mouse actions,require By the end of the lab they had developed a non trivial pair of classes using TDD DESIGNING FOR TESTABILITY One of the significant challenges for TDD is automating the tests for GUI aspects of the system In particular writing JUnit tests for code that is initiated through mouse actions,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,Thursday of the last week of the iteration STAND UPMEETINGS XP promotes short meetings each morning where each individual reports on their progress and any,challenges,they have encountered Our students started every class period with a 15 minute stand up meeting VISIBLY TRACKING AN ITERATION All of the story and,Thursday of the last week of the iteration STAND UPMEETINGS XP promotes short meetings each morning where each individual reports on their progress and any challenges they have encountered Our students started every class period with a 15 minute stand up meeting VISIBLY TRACKING AN ITERATION All of the story and,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,gives everyone easy access to information about who is working on which tasks and promotes communication amongst the team MAINTAINING ACCOUNTABILITY The most significant instructional,challenge,in this course is to ensure that every student is using the techniques rigorously The students see that the deliverable is the code so they,gives everyone easy access to information about who is working on which tasks and promotes communication amongst the team MAINTAINING ACCOUNTABILITY The most significant instructional challenge in this course is to ensure that every student is using the techniques rigorously The students see that the deliverable is the code so they,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,is using the techniques rigorously The students see that the deliverable is the code so they are often tempted to abandon some of the more,challenging,techniques It is critical that that see that XP is NOT the absence of a process but is a rigorous process in itself The first,is using the techniques rigorously The students see that the deliverable is the code so they are often tempted to abandon some of the more challenging techniques It is critical that that see that XP is NOT the absence of a process but is a rigorous process in itself The first,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,required information Clearly something was terribly wrong After the completion of the iteration we performed a post mortem to diagnose what was clearly a systemic,problem,The students decided that they had focused on the internals of the system because that was the functionality with which they were comfortable they had,required information Clearly something was terribly wrong After the completion of the iteration we performed a post mortem to diagnose what was clearly a systemic problem The students decided that they had focused on the internals of the system because that was the functionality with which they were comfortable they had,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,of possible pairings that the team had used to make them aware of their choices about switching In addition pair programming did cause some logistical,problems,because some students had difficulty arranging for pair programming outside of class While students were allowed to play with strategies by developing throw away prototypes,of possible pairings that the team had used to make them aware of their choices about switching In addition pair programming did cause some logistical problems because some students had difficulty arranging for pair programming outside of class While students were allowed to play with strategies by developing throw away prototypes,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,by developing throw away prototypes and researching technologies alone most of the class time after the spike was spent in pair programming to alleviate this,challenge,In addition this gave ample time for ongoing mentoring in XP techniques by the faculty member Story Number ________ Story Card Date ____________ Priority Customer,by developing throw away prototypes and researching technologies alone most of the class time after the spike was spent in pair programming to alleviate this challenge In addition this gave ample time for ongoing mentoring in XP techniques by the faculty member Story Number ________ Story Card Date ____________ Priority Customer,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,In addition this gave ample time for ongoing mentoring in XP techniques by the faculty member Story Number ________ Story Card Date ____________ Priority Customer,risk,Story Description Notes Task Tracking Task Software Engineer ________ ________ Description Developer ____________ Development Estimate ____________ Date Date Due Complete CODE QUALITY The projects developed,In addition this gave ample time for ongoing mentoring in XP techniques by the faculty member Story Number ________ Story Card Date ____________ Priority Customer risk Story Description Notes Task Tracking Task Software Engineer ________ ________ Description Developer ____________ Development Estimate ____________ Date Date Due Complete CODE QUALITY The projects developed,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,table summarizes some code metrics for the two projects from Fall 2004 TABLE 1 CODE METRIC RESULTS max method length avg method length avg Cyclomatic,complexity,max Cyclomatic Complexity max nested block depth Max num parameters Max num attributes avg weighted methods per class max weighted methods per class max classes,table summarizes some code metrics for the two projects from Fall 2004 TABLE 1 CODE METRIC RESULTS max method length avg method length avg Cyclomatic complexity max Cyclomatic Complexity max nested block depth Max num parameters Max num attributes avg weighted methods per class max weighted methods per class max classes,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,means that in both teams large portions of their code were not covered by their tests In fact the students adherence to TDD was probably,worse,than the LOC measures predict Even for code that was covered by tests much of the code was developed prior to writing the tests and,means that in both teams large portions of their code were not covered by their tests In fact the students adherence to TDD was probably worse than the LOC measures predict Even for code that was covered by tests much of the code was developed prior to writing the tests and,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,green task stickers Practice the Humble Dialog Box design pattern more thoroughly The GUI code was least covered and the source of much of our,difficulties,While we completed a lab using this design pattern further practice would have helped the students generalize its use better CONCLUSIONS This course has been,green task stickers Practice the Humble Dialog Box design pattern more thoroughly The GUI code was least covered and the source of much of our difficulties While we completed a lab using this design pattern further practice would have helped the students generalize its use better CONCLUSIONS This course has been,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,experiences and the comments in those papers underscore the fact that they understand that XP is not the absence of a process The only significant,weakness,we found was in the students ability to stick to TDD particularly for GUI related classes and we have strategies for addressing that challenge in,experiences and the comments in those papers underscore the fact that they understand that XP is not the absence of a process The only significant weakness we found was in the students ability to stick to TDD particularly for GUI related classes and we have strategies for addressing that challenge in,2005
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,comparing these experiences the students learn about making the choices that software engineers have to make regularly In Software Metrics we study methods of assessing,risks,the process and modifications to the process This paper will describe these courses and the results of our assessment of these courses Index Terms software,comparing these experiences the students learn about making the choices that software engineers have to make regularly In Software Metrics we study methods of assessing risks the process and modifications to the process This paper will describe these courses and the results of our assessment of these courses Index Terms software,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,assignments and a system to help evaluate stock buying and selling strategies In this course we have varied the size of the teams and the,complexity,of the projects Originally our teams consisted of four to five students Unfortunately we found that projects that were small enough for a team of,assignments and a system to help evaluate stock buying and selling strategies In this course we have varied the size of the teams and the complexity of the projects Originally our teams consisted of four to five students Unfortunately we found that projects that were small enough for a team of,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,required more significant project management skills Since our students are generally inexperienced in this area a number of teams poorly managed themselves and therefore were,unsuccessful,This hindered their understanding of how a project using this development cycle should function This year the entire class is working to develop a single,required more significant project management skills Since our students are generally inexperienced in this area a number of teams poorly managed themselves and therefore were unsuccessful This hindered their understanding of how a project using this development cycle should function This year the entire class is working to develop a single,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,they experienced but also their ability to analyze the value of the various processes For this we are looking for statements about the positive and,negative,effects each process had on their experience and on the quality of the resulting product Finally we have designed this sequence with the goal of,they experienced but also their ability to analyze the value of the various processes For this we are looking for statements about the positive and negative effects each process had on their experience and on the quality of the resulting product Finally we have designed this sequence with the goal of,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,It is important to note that not all of the comments are positive One student stated As the number of iterations increases so does the,complexity,of the automated testing This student believed that the effort required to develop appropriate new tests would become overwhelming as the project grew large Given,It is important to note that not all of the comments are positive One student stated As the number of iterations increases so does the complexity of the automated testing This student believed that the effort required to develop appropriate new tests would become overwhelming as the project grew large Given,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,grew large Given the tools and strategy we used he is probably correct Unfortunately he did not propose tools or strategies that could relieve this,complexity,Students also comment on the quality that resulted from the testing in extreme programming Code quality improved during the extreme programming portion By testing as,grew large Given the tools and strategy we used he is probably correct Unfortunately he did not propose tools or strategies that could relieve this complexity Students also comment on the quality that resulted from the testing in extreme programming Code quality improved during the extreme programming portion By testing as,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,quality that resulted from the testing in extreme programming Code quality improved during the extreme programming portion By testing as you go you find small,bugs,faster and earlier which can eliminate bigger bugs in the future The students also saw dramatic differences from the pair programming in extreme programming When,quality that resulted from the testing in extreme programming Code quality improved during the extreme programming portion By testing as you go you find small bugs faster and earlier which can eliminate bigger bugs in the future The students also saw dramatic differences from the pair programming in extreme programming When,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,for how to determine when pair programming is inappropriate Finally since the students have had to make several releases of their project they understand the,challenges,of maintaining good code That allows them to appreciate the value of refactoring By having better written code it is easier to make changes in,for how to determine when pair programming is inappropriate Finally since the students have had to make several releases of their project they understand the challenges of maintaining good code That allows them to appreciate the value of refactoring By having better written code it is easier to make changes in,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,between the longer term planning of the traditional model and the shorter term iteration planning of extreme programming Planning a long term schedule is extremely,difficult,There are always unforeseen issues that have a larger impact In addition they begin to appreciate the value of measurable milestones that are relatively close,between the longer term planning of the traditional model and the shorter term iteration planning of extreme programming Planning a long term schedule is extremely difficult There are always unforeseen issues that have a larger impact In addition they begin to appreciate the value of measurable milestones that are relatively close,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,be combined or altered for particular situations This focus on process improvement is exactly what a good software engineer needs While there are too many,challenges,for our students to see them all some of our students begin to see how process improvement fits within an existing organization For a company,be combined or altered for particular situations This focus on process improvement is exactly what a good software engineer needs While there are too many challenges for our students to see them all some of our students begin to see how process improvement fits within an existing organization For a company,2004
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,are as follows Design and programming skills Due to core Fundamentals of Software Engineering and Software Project Management courses CS IS students usually had no,problems,with actual individual software engineering design programming and testing of various components of mobile software systems on various technical platforms Team work skills Several learning,are as follows Design and programming skills Due to core Fundamentals of Software Engineering and Software Project Management courses CS IS students usually had no problems with actual individual software engineering design programming and testing of various components of mobile software systems on various technical platforms Team work skills Several learning,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,VI above to document APM iterations and work flow Integration of software components developed by several team members or student teams There were some reported,problems,relevant to a process of integration of software components within assigned mobile software system i e with integrative programming skills these technical skills are currently,VI above to document APM iterations and work flow Integration of software components developed by several team members or student teams There were some reported problems relevant to a process of integration of software components within assigned mobile software system i e with integrative programming skills these technical skills are currently,2014
