File,Left Context,Hit,Right Context,Full Passage,Year
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"dual-track agile is presented in [8]. However, simplicity comes handy when it comes to teaching and learning. In the next section, we show how this ",simple ,process has been used to guide the design of a new course integrating interaction design into software development.  IV. COURSE DESIGN  The Software Requirements ,"dual-track agile is presented in [8]. However, simplicity comes handy when it comes to teaching and learning. In the next section, we show how this simple process has been used to guide the design of a new course integrating interaction design into software development.  IV. COURSE DESIGN  The Software Requirements ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"the messy reality of software product design and development. An attempt to more effectively convey the disorderliness of dual-track agile is presented in [8]. However, ",simplicity ,"comes handy when it comes to teaching and learning. In the next section, we show how this simple process has been used to guide ","the messy reality of software product design and development. An attempt to more effectively convey the disorderliness of dual-track agile is presented in [8]. However, simplicity comes handy when it comes to teaching and learning. In the next section, we show how this simple process has been used to guide ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"be created around individual artifacts for enhanced collaboration.  Overall, the tool reduces the overhead of structuring the information, at both project and artifact levels, as ",well ,"as the overhead of understanding what content to produce. As a result, students can focus on content creation instead.   C. Effective Feedback  In the ","be created around individual artifacts for enhanced collaboration.  Overall, the tool reduces the overhead of structuring the information, at both project and artifact levels, as well as the overhead of understanding what content to produce. As a result, students can focus on content creation instead.   C. Effective Feedback  In the ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"course presented in this paper starts by introducing two main characters, Remi, the Requirements Engineer (often called Product Manager), and Iris, the Interaction Designer, as ",well ,"as their backgrounds and traditional ways of working.  Remi, our Requirements Engineer (or Product Manager), belongs to a software development team and is in ","course presented in this paper starts by introducing two main characters, Remi, the Requirements Engineer (often called Product Manager), and Iris, the Interaction Designer, as well as their backgrounds and traditional ways of working.  Remi, our Requirements Engineer (or Product Manager), belongs to a software development team and is in ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,be timely and targeted in order to be effective and guide further learning. Failing to so do might compromise students’ ability to succeed.  Here as ,"well, ","the requirements management tool has helped. The tool provides instructors with an improved visibility of the students’ work throughout the project. At any time, ","be timely and targeted in order to be effective and guide further learning. Failing to so do might compromise students’ ability to succeed.  Here as well, the requirements management tool has helped. The tool provides instructors with an improved visibility of the students’ work throughout the project. At any time, ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"of success in the course, students are asked to auto-form their team primarily based on project interest. Interpersonal relationship certainly plays a role as ",well ,for students who already know each other.  2) Project Tasks: The project tasks are designed based on the dual-track agile process presented in Section ,"of success in the course, students are asked to auto-form their team primarily based on project interest. Interpersonal relationship certainly plays a role as well for students who already know each other.  2) Project Tasks: The project tasks are designed based on the dual-track agile process presented in Section ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"these domains. It is an opportunity to improve the students’ interview and communication skills while enlarging their professional network.  V. CHALLENGES  Overall, the course is ",well ,"received by students, as illustrated by the following quotes taken from the online course evaluation: “Excellent course with great teaching style combining industry practice ","these domains. It is an opportunity to improve the students’ interview and communication skills while enlarging their professional network.  V. CHALLENGES  Overall, the course is well received by students, as illustrated by the following quotes taken from the online course evaluation: “Excellent course with great teaching style combining industry practice ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,classroom under the guidance of a faculty mentor. Flipping a project-based course could amplify its benefits by freeing-up time inside the classroom to ,better ,"prepare students for the demands of the course project. However, because video lectures are initially long to create, and later on difficult to maintain, ","classroom under the guidance of a faculty mentor. Flipping a project-based course could amplify its benefits by freeing-up time inside the classroom to better prepare students for the demands of the course project. However, because video lectures are initially long to create, and later on difficult to maintain, ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,notable aspect of the project is the high level of stakeholder involvement. Each interaction with stakeholders is an opportunity to pivot the product direction to ,better ,"satisfy their needs. Also notable, is the fact that each team goes beyond creating an interaction design addressing their opportunity by preparing a backlog ","notable aspect of the project is the high level of stakeholder involvement. Each interaction with stakeholders is an opportunity to pivot the product direction to better satisfy their needs. Also notable, is the fact that each team goes beyond creating an interaction design addressing their opportunity by preparing a backlog ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"communities into integrated software development approaches [5]. Most of these approaches share similar underlying principles, including parallel interwoven tracks of interaction design and software development, as ",best ,"exemplified by dual-track agile software development [6]. Unfortunately, the disconnect between SE and HCI remains prevalent in academia, where very few courses cover both ","communities into integrated software development approaches [5]. Most of these approaches share similar underlying principles, including parallel interwoven tracks of interaction design and software development, as best exemplified by dual-track agile software development [6]. Unfortunately, the disconnect between SE and HCI remains prevalent in academia, where very few courses cover both ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"development [6]. Unfortunately, the disconnect between SE and HCI remains prevalent in academia, where very few courses cover both disciplines in an integrated fashion. To the ",best ,"of the author’s knowledge, no publication has reported the existence of a scholarly course covering dual-track agile. Furthermore, the way most software ","development [6]. Unfortunately, the disconnect between SE and HCI remains prevalent in academia, where very few courses cover both disciplines in an integrated fashion. To the best of the author’s knowledge, no publication has reported the existence of a scholarly course covering dual-track agile. Furthermore, the way most software ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"To do so, they first brainstorm design ideas, often using sketches to boost creativity [40]. The team combines and synthesizes these ideas, and then showcases the ",best ,resulting concepts using storyboards [41]. These storyboards illustrate how personas [42] interact with the software solution to achieve their goal within the context of use. Finally ,"To do so, they first brainstorm design ideas, often using sketches to boost creativity [40]. The team combines and synthesizes these ideas, and then showcases the best resulting concepts using storyboards [41]. These storyboards illustrate how personas [42] interact with the software solution to achieve their goal within the context of use. Finally ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"the class session is dedicated to an in-class activity where students apply the concepts to a toy example. That way, the course retains the ",benefits ,"of flipped classroom without the drawbacks of video lectures. When time permits, students are encouraged to stay after the in-class activity to work ","the class session is dedicated to an in-class activity where students apply the concepts to a toy example. That way, the course retains the benefits of flipped classroom without the drawbacks of video lectures. When time permits, students are encouraged to stay after the in-class activity to work ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"the classroom, and interactive group learning activities inside the classroom under the guidance of a faculty mentor. Flipping a project-based course could amplify its ",benefits ,"by freeing-up time inside the classroom to better prepare students for the demands of the course project. However, because video lectures are initially ","the classroom, and interactive group learning activities inside the classroom under the guidance of a faculty mentor. Flipping a project-based course could amplify its benefits by freeing-up time inside the classroom to better prepare students for the demands of the course project. However, because video lectures are initially ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"a project of realistic complexity. While working in teams on project tasks, students experiment with and reason about the underlying concepts of a discipline. Potential ",benefits ,"include active participation in the learning process, promotion of critical thinking, development of soft skills, and a taste of real-world projects.  Flipped classroom [11] ","a project of realistic complexity. While working in teams on project tasks, students experiment with and reason about the underlying concepts of a discipline. Potential benefits include active participation in the learning process, promotion of critical thinking, development of soft skills, and a taste of real-world projects.  Flipped classroom [11] ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"challenges. This section covers past and current challenges, together with attempts to overcome them.  A. Project Selection  In the context of project-based learning, the ",success ,"of the course relies on finding motivating projects that effectively  support the course learning objectives. To reach the SRID course objectives, students must work ","challenges. This section covers past and current challenges, together with attempts to overcome them.  A. Project Selection  In the context of project-based learning, the success of the course relies on finding motivating projects that effectively  support the course learning objectives. To reach the SRID course objectives, students must work ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,"finding and contacting stakeholders on their own (with only the help of a provided recruitment email template), all teams have managed to do so fairly ",successfully.  ,"Finally, most teams have proposed project ideas with a goal of making a unique contribution to society. The domains of these projects have included ","finding and contacting stakeholders on their own (with only the help of a provided recruitment email template), all teams have managed to do so fairly successfully.  Finally, most teams have proposed project ideas with a goal of making a unique contribution to society. The domains of these projects have included ",2019
ICSE_Dual-Track_Agile_in_Software_Engineering_Education_2019_IEEE_cleaned.txt,and 6 relate to this opportunity.  A project team of four or five students is formed around each opportunity. Because motivation is a key factor of ,success ,"in the course, students are asked to auto-form their team primarily based on project interest. Interpersonal relationship certainly plays a role as well ","and 6 relate to this opportunity.  A project team of four or five students is formed around each opportunity. Because motivation is a key factor of success in the course, students are asked to auto-form their team primarily based on project interest. Interpersonal relationship certainly plays a role as well ",2019
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"not understand that functionality is not everything in a software product. Given basic functionality, the marketplace differentiates on quality attributes such as task efficiency, learnability, ",ease ,"of use, aesthetics, and engagement. Software Verification and Validation. Without extensive exposure to larger systems and to the theory of testing, the perception Of ","not understand that functionality is not everything in a software product. Given basic functionality, the marketplace differentiates on quality attributes such as task efficiency, learnability, ease of use, aesthetics, and engagement. Software Verification and Validation. Without extensive exposure to larger systems and to the theory of testing, the perception Of ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"convince students about the value, let alone necessity, of software configuration management. In class, students tend to work on ""toy"" examples, and configuration management seems ",simply ,"an unnecessary overhead. Like any other engineering discipline, to be efficient in a production environment, tools as well as specific techniques and methods are ","convince students about the value, let alone necessity, of software configuration management. In class, students tend to work on ""toy"" examples, and configuration management seems simply an unnecessary overhead. Like any other engineering discipline, to be efficient in a production environment, tools as well as specific techniques and methods are ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"a small scale model in a wind tunnel to establish the suitability of some of the properties of the final system. In principle, this is ",simple ,for a tangible product like an aircraft. The very fact that software is intangible means that the only evidence of development is in the ,"a small scale model in a wind tunnel to establish the suitability of some of the properties of the final system. In principle, this is simple for a tangible product like an aircraft. The very fact that software is intangible means that the only evidence of development is in the ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"liaison person for interaction. Also, students are loathe to be continually contacting the client: ""we do not want to bother our clients with small or ",trivial ,"issues all the time."" As a result, students often spend quite some time in getting certain aspects of the system ""perfect"" and understandably get ","liaison person for interaction. Also, students are loathe to be continually contacting the client: ""we do not want to bother our clients with small or trivial issues all the time."" As a result, students often spend quite some time in getting certain aspects of the system ""perfect"" and understandably get ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"what ""Professional Practice"" should encompass, it is fair to say that students need to learn about the ethical and social aspects of their profession, as ",well ,"as more business-oriented aspects such as contracting models. Software Requirements. Empirically, we know that an inadequate consideration of the perspectives of all stakeholders ","what ""Professional Practice"" should encompass, it is fair to say that students need to learn about the ethical and social aspects of their profession, as well as more business-oriented aspects such as contracting models. Software Requirements. Empirically, we know that an inadequate consideration of the perspectives of all stakeholders ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"skills enabling them to identify where and what changes are needed. For this, they need a good understanding of the architecture of the system, as ",well ,"as clear ideas on the role of regression testing. Software Engineering Process. The concept of ""Process"" goes hand-in-hand with that of management. ","skills enabling them to identify where and what changes are needed. For this, they need a good understanding of the architecture of the system, as well as clear ideas on the role of regression testing. Software Engineering Process. The concept of ""Process"" goes hand-in-hand with that of management. ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"on ""toy"" examples, and configuration management seems simply an unnecessary overhead. Like any other engineering discipline, to be efficient in a production environment, tools as ",well ,"as specific techniques and methods are needed. Students need motivation to learn to use the tools, but also need to understand both the rationale ","on ""toy"" examples, and configuration management seems simply an unnecessary overhead. Like any other engineering discipline, to be efficient in a production environment, tools as well as specific techniques and methods are needed. Students need motivation to learn to use the tools, but also need to understand both the rationale ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"course, (iii) the learning experience, and (iv) helping another student. A re-engineering of this mindset is necessary before the practices of XP can work ",well. ,"The question of how to refocus the student experience is being considered by many educationalists, but clearly an early focus on teamwork and cooperation ","course, (iii) the learning experience, and (iv) helping another student. A re-engineering of this mindset is necessary before the practices of XP can work well. The question of how to refocus the student experience is being considered by many educationalists, but clearly an early focus on teamwork and cooperation ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,planning for change went into the original product. They will more likely agree that running software alone should not be the criterion o f a ,well-,"engineered product. In academia, it is appropriate to place the primary emphasis on process, rather than product, which does not always delight the management-","planning for change went into the original product. They will more likely agree that running software alone should not be the criterion o f a well-engineered product. In academia, it is appropriate to place the primary emphasis on process, rather than product, which does not always delight the management-",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"is principally nothing new, but ""takes a set of common sense principles and practices to extreme levels."" Most of these principles and practices are fairly ",well-,"known, were part of other software development methodologies, and have been taught in the context of a variety of courses before. Unfortunately, some of ","is principally nothing new, but ""takes a set of common sense principles and practices to extreme levels."" Most of these principles and practices are fairly well-known, were part of other software development methodologies, and have been taught in the context of a variety of courses before. Unfortunately, some of ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"Inevitably, the stronger one of the pair did most of the work, the weaker one usually failed the later examination, and only where there were ",well-,"matched pairs was the goal reached. We also noted different personality types and/or genders had a significant impact on pair programming performance. Unfortunately, ","Inevitably, the stronger one of the pair did most of the work, the weaker one usually failed the later examination, and only where there were well-matched pairs was the goal reached. We also noted different personality types and/or genders had a significant impact on pair programming performance. Unfortunately, ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,methodology such as XP cannot be successfully applied in an educational environment. We therefore argue that a less flexible development process with more guidance is ,better ,"suited to the educational environment than a process based on ""less process, more discipline?' The latter should only be applied if all participants have ","methodology such as XP cannot be successfully applied in an educational environment. We therefore argue that a less flexible development process with more guidance is better suited to the educational environment than a process based on ""less process, more discipline?' The latter should only be applied if all participants have ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"the focus on producing quality software in the first place, and the importance of coding standards and configuration management. We noticed there is definitely a ",better ,acceptance and understanding of these practices when they are introduced in an XP-like context. The eXtreme metaphor is the main contributing factor here ,"the focus on producing quality software in the first place, and the importance of coding standards and configuration management. We noticed there is definitely a better acceptance and understanding of these practices when they are introduced in an XP-like context. The eXtreme metaphor is the main contributing factor here ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"both industrial and academic settings (e.g. see [1, 5, 7, 11, 18]). In particular, there is empirical evidence that a pair of developers working on one computer can produce ",better ,"quality software faster than the pair working separately. However, we argue that this observation only holds if pair programming is done in the ""right"" ","both industrial and academic settings (e.g. see [1, 5, 7, 11, 18]). In particular, there is empirical evidence that a pair of developers working on one computer can produce better quality software faster than the pair working separately. However, we argue that this observation only holds if pair programming is done in the ""right"" ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"where the requirement originated? Or, later, why should a design decision be documented? As any parent knows, it is in the experience itself, that the ",best ,"learning takes place. Most undergraduate software engineering programs have a final project to provide the capstone of the studies. In the discussion that follows, ","where the requirement originated? Or, later, why should a design decision be documented? As any parent knows, it is in the experience itself, that the best learning takes place. Most undergraduate software engineering programs have a final project to provide the capstone of the studies. In the discussion that follows, ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"be applied if all participants have the necessary experience and maturity, and fully understand the consequences of choosing a light-weight development process. This was ",best ,"summarized by another colleague: ""XP is for professionals, not students."" Distribution and Availability. One of the main practices of XP (and most other agile ","be applied if all participants have the necessary experience and maturity, and fully understand the consequences of choosing a light-weight development process. This was best summarized by another colleague: ""XP is for professionals, not students."" Distribution and Availability. One of the main practices of XP (and most other agile ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"to change almost as fast as this. Therefore we have tended to place too much reliance on traditional process models to ""explain"" to students the ",best ,"way to engineer software. However, experience has shown that education in ""traditional"" software development practices, such as the waterfall approach, will not always endow ","to change almost as fast as this. Therefore we have tended to place too much reliance on traditional process models to ""explain"" to students the best way to engineer software. However, experience has shown that education in ""traditional"" software development practices, such as the waterfall approach, will not always endow ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"to use the tools, but also need to understand both the rationale for their use and the principles on which they are built. It is ",good ,"for them to be exposed to specific tools, but it is also important that they realise the range available. This becomes an issue of ","to use the tools, but also need to understand both the rationale for their use and the principles on which they are built. It is good for them to be exposed to specific tools, but it is also important that they realise the range available. This becomes an issue of ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"prior educational experiences of students. There are problems when the student mindset prioritizes outcomes in the order (i) a pass in a course, (ii) a ",good ,"grade in a course, (iii) the learning experience, and (iv) helping another student. A re-engineering of this mindset is necessary before the practices ","prior educational experiences of students. There are problems when the student mindset prioritizes outcomes in the order (i) a pass in a course, (ii) a good grade in a course, (iii) the learning experience, and (iv) helping another student. A re-engineering of this mindset is necessary before the practices ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"software development. Similarly, it is a somewhat foreign idea that a complex system does not lend itself to a haphazard approach for development, and requires ",good ,"management. Additionally, time and resource constraints usually limit the scope of the systems on which students can work. Therefore, the Software Engineering curricula must ","software development. Similarly, it is a somewhat foreign idea that a complex system does not lend itself to a haphazard approach for development, and requires good management. Additionally, time and resource constraints usually limit the scope of the systems on which students can work. Therefore, the Software Engineering curricula must ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"pair programming performance. Unfortunately, there is little evidence that researchers have considered this yet.  Educational systems seem to be primarily based on a scheme where ",good ,"marks are most highly rewarded, and many students are uncomfortable leaving this framework. In an XP environment, however, an ego-less attitude is required ","pair programming performance. Unfortunately, there is little evidence that researchers have considered this yet.  Educational systems seem to be primarily based on a scheme where good marks are most highly rewarded, and many students are uncomfortable leaving this framework. In an XP environment, however, an ego-less attitude is required ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"lack of academic maturity to deal with ambiguity and conflicts between reality and theory, and (iii) their underdeveloped interpersonal skills. Young people usually have very ",good ,"memories, and trust in their own ability to recall information. In this context, it is often difficult to convince students about the value, let ","lack of academic maturity to deal with ambiguity and conflicts between reality and theory, and (iii) their underdeveloped interpersonal skills. Young people usually have very good memories, and trust in their own ability to recall information. In this context, it is often difficult to convince students about the value, let ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"software is considered to be the most important deliverable"" of a software project and ""working software is the primary measure of progress."" There are very ",good ,"reasons why this applies to certain types of projects (and possibly not to others), but we must question the relevance in an educational context. ","software is considered to be the most important deliverable"" of a software project and ""working software is the primary measure of progress."" There are very good reasons why this applies to certain types of projects (and possibly not to others), but we must question the relevance in an educational context. ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"but on maintaining existing systems. Therefore, they need analytical skills enabling them to identify where and what changes are needed. For this, they need a ",good ,"understanding of the architecture of the system, as well as clear ideas on the role of regression testing. Software Engineering Process. The concept of ""","but on maintaining existing systems. Therefore, they need analytical skills enabling them to identify where and what changes are needed. For this, they need a good understanding of the architecture of the system, as well as clear ideas on the role of regression testing. Software Engineering Process. The concept of """,2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"are probably more aligned with distributed projects than co-located ones. Thus, one of the main prerequisites for applying XP is not fulfilled and the ",benefits ,"of a joint working environment are lost, in particular the warm communication paths [4]. As a result, stricter rules for documenting project activities have to ","are probably more aligned with distributed projects than co-located ones. Thus, one of the main prerequisites for applying XP is not fulfilled and the benefits of a joint working environment are lost, in particular the warm communication paths [4]. As a result, stricter rules for documenting project activities have to ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,at one of the students' homes. Encouragement of the second team to use the laboratory more seems to have failed because of ignorance of the ,benefits ,"of joint working sessions. They reverted to ""the way we have been working throughout the previous years of our studies?' On-site Client. A ","at one of the students' homes. Encouragement of the second team to use the laboratory more seems to have failed because of ignorance of the benefits of joint working sessions. They reverted to ""the way we have been working throughout the previous years of our studies?' On-site Client. A ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"working hours is as ""ideal"" a situation as we can hope for. We have noted on several projects that clients do not fully understand the ",benefits ,"of regular developer-client interactions. They do not want to be ""bothered"" by giving feedback to all team members, and they often ask for ","working hours is as ""ideal"" a situation as we can hope for. We have noted on several projects that clients do not fully understand the benefits of regular developer-client interactions. They do not want to be ""bothered"" by giving feedback to all team members, and they often ask for ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,the requirements resulted in that team running into trouble in semester two. It can be said that development processes such as XP certainly have their ,benefits ,"and can have a positive impact in an educational context. However, there are important educational goals which are not met and, therefore, changes to ","the requirements resulted in that team running into trouble in semester two. It can be said that development processes such as XP certainly have their benefits and can have a positive impact in an educational context. However, there are important educational goals which are not met and, therefore, changes to ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,engineers is the ability to tailor a process to suit their needs. Teaching students how to tailor their processes is likely to have a more ,beneficial ,effect than seeing a light-weight development process such as XP as the answer. 6. Conclusions Agile development processes like XP are increasingly popular in ,engineers is the ability to tailor a process to suit their needs. Teaching students how to tailor their processes is likely to have a more beneficial effect than seeing a light-weight development process such as XP as the answer. 6. Conclusions Agile development processes like XP are increasingly popular in ,2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"dislike process, but they like discipline even less."" Hence there is a big risk that a light-weight development methodology such as XP cannot be ",successfully ,applied in an educational environment. We therefore argue that a less flexible development process with more guidance is better suited to the educational environment ,"dislike process, but they like discipline even less."" Hence there is a big risk that a light-weight development methodology such as XP cannot be successfully applied in an educational environment. We therefore argue that a less flexible development process with more guidance is better suited to the educational environment ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"and many students are uncomfortable leaving this framework. In an XP environment, however, an ego-less attitude is required as people have to favour team ",success ,over personal rewards and assist other team members improve their working skills. These issues require a level of maturity to accept. Process and Discipline. ,"and many students are uncomfortable leaving this framework. In an XP environment, however, an ego-less attitude is required as people have to favour team success over personal rewards and assist other team members improve their working skills. These issues require a level of maturity to accept. Process and Discipline. ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"with iterations taking one to two weeks and a new release coming out every month or two. In fact, short development cycles are crucial for ",successful ,"projects [1, 3]. Each iteration is supposed to add  functionality of a certain value to the customer. To achieve these kinds of development, XP assumes that ","with iterations taking one to two weeks and a new release coming out every month or two. In fact, short development cycles are crucial for successful projects [1, 3]. Each iteration is supposed to add  functionality of a certain value to the customer. To achieve these kinds of development, XP assumes that ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"for final year software engineering projects, using XP as the development process would certainly be a feasible approach. Recent work has shown that despite its ","success, ",XP does not address some important issues of software development [17] or should not be used for larger-scale and/or safety-critical systems [4]. Although ,"for final year software engineering projects, using XP as the development process would certainly be a feasible approach. Recent work has shown that despite its success, XP does not address some important issues of software development [17] or should not be used for larger-scale and/or safety-critical systems [4]. Although ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"of techniques that help them manage a variety o f projects (from small to large-scale), introduced the ideas in the context o f the ",positive ,"and negative issues associated with any process model, and given guidelines how to select a process model for the particular situation. The Crystal methodologies [4] ","of techniques that help them manage a variety o f projects (from small to large-scale), introduced the ideas in the context o f the positive and negative issues associated with any process model, and given guidelines how to select a process model for the particular situation. The Crystal methodologies [4] ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,team running into trouble in semester two. It can be said that development processes such as XP certainly have their benefits and can have a ,positive ,"impact in an educational context. However, there are important educational goals which are not met and, therefore, changes to the process have to be ","team running into trouble in semester two. It can be said that development processes such as XP certainly have their benefits and can have a positive impact in an educational context. However, there are important educational goals which are not met and, therefore, changes to the process have to be ",2003
ICSE_eXtreme_programming_at_universities_-_an_educational_perspective_2003_IEEE_cleaned.txt,"them as experts in the techniques and processes which are currently most popular and being touted as ""the way to go?' While XP has many ",positive ,"aspects, many of its tenets are not compatible with the real environment of most students. Some of the difficulties lie with the prior educational ","them as experts in the techniques and processes which are currently most popular and being touted as ""the way to go?' While XP has many positive aspects, many of its tenets are not compatible with the real environment of most students. Some of the difficulties lie with the prior educational ",2003
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"they use them to question their process implementation and provide feedback about the significance of metrics, it is possible that they identify weak spots and ",simply ,"try to avoid generating negative scores, e.g., through automation of tasks. In that case, however, it will be again interesting to see which ","they use them to question their process implementation and provide feedback about the significance of metrics, it is possible that they identify weak spots and simply try to avoid generating negative scores, e.g., through automation of tasks. In that case, however, it will be again interesting to see which ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"violations with additional information indicating priority and cause.  5.4 Improve Metric or Process In the last step, measures on how to improve the metrics themselves as ",well ,"as the overlap between defined and executed practice should be decided and implemented. If metrics return false positives, these should be eliminated by fine-","violations with additional information indicating priority and cause.  5.4 Improve Metric or Process In the last step, measures on how to improve the metrics themselves as well as the overlap between defined and executed practice should be decided and implemented. If metrics return false positives, these should be eliminated by fine-",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"Survey  The primary survey (S1) aimed at tracking students’ satisfaction with different aspects of the Scrum method, such as effort estimation and backlog maintenance as ",well ,as the perceived level of cooperation with various team members. These were goals shared by previous work performed by Mahnic [14]. Adapting this existing survey ,"Survey  The primary survey (S1) aimed at tracking students’ satisfaction with different aspects of the Scrum method, such as effort estimation and backlog maintenance as well as the perceived level of cooperation with various team members. These were goals shared by previous work performed by Mahnic [14]. Adapting this existing survey ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"detecting instances where processes were violated. Figure 4 describes the lifecycle of a “conformance metric”, which includes information about the agile practices that are measured, as ",well ,"as the specifics of how to measure and evaluate deviations. The lifecycle includes four steps, which are described in the following subsections.  5.1 Define Conformance ","detecting instances where processes were violated. Figure 4 describes the lifecycle of a “conformance metric”, which includes information about the agile practices that are measured, as well as the specifics of how to measure and evaluate deviations. The lifecycle includes four steps, which are described in the following subsections.  5.1 Define Conformance ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"understanding of the practice that should be executed and measured. This involves both the teaching staff, who have knowledge and experience in agile development, as ",well ,"as the team, who might have personal preferences or different understandings. Agile methodologies such as XP or Scrum advise a multitude of practices, e.","understanding of the practice that should be executed and measured. This involves both the teaching staff, who have knowledge and experience in agile development, as well as the team, who might have personal preferences or different understandings. Agile methodologies such as XP or Scrum advise a multitude of practices, e.",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"is added.  6.2 Data Analyses Once data is collected, conformance metrics are used to analyze it. These include a description of the measured agile principle as ",well ,as a database query that is able to extract instances of process violations (see Table 4). Queries are defined using Neo4j’s Cypher query ,"is added.  6.2 Data Analyses Once data is collected, conformance metrics are used to analyze it. These include a description of the measured agile principle as well as a database query that is able to extract instances of process violations (see Table 4). Queries are defined using Neo4j’s Cypher query ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"detected in an automated fashion. The output of this step is a list of indicators for possible process violations, grouped by teams and iteration, as ",well ,"as a score that indicates their severity. Details of the developed tool and its implementation are described in Section 6.  5.3 Research Violation Context Once detected, ","detected in an automated fashion. The output of this step is a list of indicators for possible process violations, grouped by teams and iteration, as well as a score that indicates their severity. Details of the developed tool and its implementation are described in Section 6.  5.3 Research Violation Context Once detected, ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"a promising addition to the development process that could potentially reduce manual efforts in future courses and allow for more concrete and targeted feedback, as ",well ,"as more objective assessment.  1. INTRODUCTION & MOTIVATION   Classroom projects allow students to deepen their theoretical understanding of software engineering practices through first-hand experience [5, 16, 20]. Contrary ","a promising addition to the development process that could potentially reduce manual efforts in future courses and allow for more concrete and targeted feedback, as well as more objective assessment.  1. INTRODUCTION & MOTIVATION   Classroom projects allow students to deepen their theoretical understanding of software engineering practices through first-hand experience [5, 16, 20]. Contrary ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,format (a variant of Cockburn’s “Keep/Problem/Try” [4]).  The tutors rated the students on two aspects: their dedication to Scrum and associated methods as ,well ,"as their progress in implementing these. Teams that were very enthusiastic and embraced Scrum practices would score high on the “dedication” scale, whereas to ","format (a variant of Cockburn’s “Keep/Problem/Try” [4]).  The tutors rated the students on two aspects: their dedication to Scrum and associated methods as well as their progress in implementing these. Teams that were very enthusiastic and embraced Scrum practices would score high on the “dedication” scale, whereas to ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"adding priorities and effort estimations to the titles of tickets11. Through the Github API, information regarding the tickets / user stories, including titles and content, as ",well ,"as all changes and their timestamps, e.g. assigned to Team A at 12:30 AM on Jan 14, 2015, could be retrieved. Collecting data on user stories ","adding priorities and effort estimations to the titles of tickets11. Through the Github API, information regarding the tickets / user stories, including titles and content, as well as all changes and their timestamps, e.g. assigned to Team A at 12:30 AM on Jan 14, 2015, could be retrieved. Collecting data on user stories ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,understanding of Scrum practices and their adaptations. Tutor scores were recorded in an online system which allowed team ratings on a score of 1 through 10 as ,well ,"as comments on the team and individual students (see Figure 3). Five meetings per team were evaluated, the first was the planning meeting for the ","understanding of Scrum practices and their adaptations. Tutor scores were recorded in an online system which allowed team ratings on a score of 1 through 10 as well as comments on the team and individual students (see Figure 3). Five meetings per team were evaluated, the first was the planning meeting for the ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"proposed solutions. With more knowledge of the Scrum process, tutors are able to determine whether students have learned and progressed, both in Scrum practices as ",well ,as in organizational aspects.  7.3 ScrumLint In the described course ScrumLint was able to detect process violations for every team in every sprint. No team ,"proposed solutions. With more knowledge of the Scrum process, tutors are able to determine whether students have learned and progressed, both in Scrum practices as well as in organizational aspects.  7.3 ScrumLint In the described course ScrumLint was able to detect process violations for every team in every sprint. No team ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"scores”, “developer productivity”, “Backlog maintenance” and “XP practices”, that were developed for the course. These include more general measurements, e.g. the “bus number” [17], as ",well ,"as measurements specific to the context of our course, e.g. the percentage of commits in the last 30 minutes before sprint deadline.  6.3 Displaying Results ","scores”, “developer productivity”, “Backlog maintenance” and “XP practices”, that were developed for the course. These include more general measurements, e.g. the “bus number” [17], as well as measurements specific to the context of our course, e.g. the percentage of commits in the last 30 minutes before sprint deadline.  6.3 Displaying Results ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,were included in the survey that were adapted to the specific context of our course: the quality of the product vision (a measure of how ,well ,the product owners of each of the different teams worked together) and the quality of Weekly Scrums (instead of Daily Scrums). The supplementary survey ,were included in the survey that were adapted to the specific context of our course: the quality of the product vision (a measure of how well the product owners of each of the different teams worked together) and the quality of Weekly Scrums (instead of Daily Scrums). The supplementary survey ,2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,to extract areas of improvement in the Scrum workflow of student teams for all iterations.  7. LEARNINGS Using the three presented sources of data on how ,well ,"teams implemented and embraced Scrum (surveys, tutors, and software) it is possible to gain a more complete picture of how development teams work. Combining ","to extract areas of improvement in the Scrum workflow of student teams for all iterations.  7. LEARNINGS Using the three presented sources of data on how well teams implemented and embraced Scrum (surveys, tutors, and software) it is possible to gain a more complete picture of how development teams work. Combining ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"coverage or Lint code quality tools [10] could be used to objectively assess whether students adhered to taught coding principles. However, we aim at measuring how ",well ,"teams implemented Scrum. As such, it is not sufficient to restrict analyses to code, but all collaboration artifacts that reflect teamwork, should be included. ","coverage or Lint code quality tools [10] could be used to objectively assess whether students adhered to taught coding principles. However, we aim at measuring how well teams implemented Scrum. As such, it is not sufficient to restrict analyses to code, but all collaboration artifacts that reflect teamwork, should be included. ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"for the first sprint, the last the sprint review of the fourth sprint.  The scores assigned by tutors represent quantified, more objective data on how ",well ,"teams implemented Scrum. As tutors were present at meetings, immediate, detailed feedback could be given to teams. Tutors were able to apply their knowledge ","for the first sprint, the last the sprint review of the fourth sprint.  The scores assigned by tutors represent quantified, more objective data on how well teams implemented Scrum. As tutors were present at meetings, immediate, detailed feedback could be given to teams. Tutors were able to apply their knowledge ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"scores, the same person would have had to attend every meeting. Though this could be possible through strict scheduling of meetings, it does not scale ",well (,"e.g., a previous iteration of the lecture that included 13 teams [12] would be impossible to handle by a single tutor in a reasonable manner) ","scores, the same person would have had to attend every meeting. Though this could be possible through strict scheduling of meetings, it does not scale well (e.g., a previous iteration of the lecture that included 13 teams [12] would be impossible to handle by a single tutor in a reasonable manner) ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"violations are not considered harmful to development, there is little benefit in continuing to classify them as violations. The defined process can be adjusted to ",better ,"fit the executed practices, resulting in less detected process violations. Alternatively, process conformance can be improved by modifying the executed day-to-day process, ","violations are not considered harmful to development, there is little benefit in continuing to classify them as violations. The defined process can be adjusted to better fit the executed practices, resulting in less detected process violations. Alternatively, process conformance can be improved by modifying the executed day-to-day process, ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"are the basis of ScrumLint, their quality is mainly responsible for the quality of overall results. However, there is little research yet on what constitutes ",best ,practices for agile metrics. Zazworka et al. state that the “biggest challenge was to find definitions for the XP practices that contained enough detail” [21]. ,"are the basis of ScrumLint, their quality is mainly responsible for the quality of overall results. However, there is little research yet on what constitutes best practices for agile metrics. Zazworka et al. state that the “biggest challenge was to find definitions for the XP practices that contained enough detail” [21]. ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,scales poorly with the amount of participating students. Automating this process with software can help gain new insights into the implementation of agile methods and ,best ,"practices. It provides a constantly available resource of feedback for students, an approach not unlike that of code quality tools, pointing out areas where ","scales poorly with the amount of participating students. Automating this process with software can help gain new insights into the implementation of agile methods and best practices. It provides a constantly available resource of feedback for students, an approach not unlike that of code quality tools, pointing out areas where ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"At the same time, there were different opinions and attitudes towards Scrum and its application between tutors, which influenced assessments. In order to reach the ",best ,"possible comparability of scores, the same person would have had to attend every meeting. Though this could be possible through strict scheduling of meetings, ","At the same time, there were different opinions and attitudes towards Scrum and its application between tutors, which influenced assessments. In order to reach the best possible comparability of scores, the same person would have had to attend every meeting. Though this could be possible through strict scheduling of meetings, ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"How Surveys, Tutors, and Software Help to Assess Scrum Adoption in a Classroom Software Engineering Project   ABSTRACT Agile methods are ",best ,taught in a hands-on fashion in realistic projects. The main challenge in doing so is to assess whether students apply the methods correctly ,"How Surveys, Tutors, and Software Help to Assess Scrum Adoption in a Classroom Software Engineering Project   ABSTRACT Agile methods are best taught in a hands-on fashion in realistic projects. The main challenge in doing so is to assess whether students apply the methods correctly ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,and the quality of Weekly Scrums (instead of Daily Scrums). The supplementary survey consisted of six questions. They were answerable on a scale of 1 (“very ,good”) ,"to 6 “insufficient”, representing German school grades, which were intuitive to students of the course.   Table 2: Excerpt of questions from S18. # Question   1  Clarity of requirements ","and the quality of Weekly Scrums (instead of Daily Scrums). The supplementary survey consisted of six questions. They were answerable on a scale of 1 (“very good”) to 6 “insufficient”, representing German school grades, which were intuitive to students of the course.   Table 2: Excerpt of questions from S18. # Question   1  Clarity of requirements ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"and support. For example, Team A scored much higher than the rest of the teams and was thought of by tutors to have a very ",good ,"working atmosphere, while Team B received below average scores in the middle of the course (see Figure 10). This development is not as noticeable in ","and support. For example, Team A scored much higher than the rest of the teams and was thought of by tutors to have a very good working atmosphere, while Team B received below average scores in the middle of the course (see Figure 10). This development is not as noticeable in ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"modifying the metric or improving the executed process. In the first case, if the found violations are not considered harmful to development, there is little ",benefit ,"in continuing to classify them as violations. The defined process can be adjusted to better fit the executed practices, resulting in less detected process ","modifying the metric or improving the executed process. In the first case, if the found violations are not considered harmful to development, there is little benefit in continuing to classify them as violations. The defined process can be adjusted to better fit the executed practices, resulting in less detected process ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"day process, making sure the defined process is followed. This can be achieved, for example, by directly reminding teams about the defined process and its ",benefits.  6. ,SCRUMLINT ScrumLint is the implementation of the automated “linting” approach that was developed for the course. It gives feedback to students and educators on ,"day process, making sure the defined process is followed. This can be achieved, for example, by directly reminding teams about the defined process and its benefits.  6. SCRUMLINT ScrumLint is the implementation of the automated “linting” approach that was developed for the course. It gives feedback to students and educators on ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"in the background. They only interfered in meetings when directly asked by students or when blatant violations of Scrum principles occurred, that would threaten the ",success ,"of the meeting. Otherwise, students received feedback at the end of meetings in an “I like, I wish” format (a variant of Cockburn’s “","in the background. They only interfered in meetings when directly asked by students or when blatant violations of Scrum principles occurred, that would threaten the success of the meeting. Otherwise, students received feedback at the end of meetings in an “I like, I wish” format (a variant of Cockburn’s “",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,adequate / realistic?  5  Cooperation with the Scrum Master Was the cooperation with the Scrum Master adequate / satisfactory? Did the Scrum Master contribute to the team’s ,success?   ,"Table 3: Excerpt of questions from S28. # Question  1 How do you rate the quality of tests (amount, coverage, relevance, effectiveness, regression, etc.)?  2 How was the ","adequate / realistic?  5  Cooperation with the Scrum Master Was the cooperation with the Scrum Master adequate / satisfactory? Did the Scrum Master contribute to the team’s success?   Table 3: Excerpt of questions from S28. # Question  1 How do you rate the quality of tests (amount, coverage, relevance, effectiveness, regression, etc.)?  2 How was the ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"in progress”. Test execution is performed automatically through the continuous integration platform Travis-CI2, which also triggers a deployment to Heroku3 servers in case of ",successful ,"tests. The deployed instances of the system are monitored by errbit4 in order to notify developers in case of errors that occurred, e.g., ","in progress”. Test execution is performed automatically through the continuous integration platform Travis-CI2, which also triggers a deployment to Heroku3 servers in case of successful tests. The deployed instances of the system are monitored by errbit4 in order to notify developers in case of errors that occurred, e.g., ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"students were satisfied with Scrum and would recommend it, only sank below 4 (“yes”) once, after Sprint 2 (average rating of 3.82). These findings of students having a ",positive ,"attitude towards hands-on learning of Scrum are in line with previous studies [14, 15]. Using the answers to the regular surveys we were furthermore able ","students were satisfied with Scrum and would recommend it, only sank below 4 (“yes”) once, after Sprint 2 (average rating of 3.82). These findings of students having a positive attitude towards hands-on learning of Scrum are in line with previous studies [14, 15]. Using the answers to the regular surveys we were furthermore able ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"in the vast majority of questions: 8/10 after Sprint 1, 7/10 after Sprint 2, 8/10 after Sprint 3, 9/10 after Sprint 4. All of these questions show average ratings higher than 3, indicating a ",positive ,attitude towards Scrum and its practices. We can therefore lend some credibility to the hypothesis that students on average had a positive attitude towards ,"in the vast majority of questions: 8/10 after Sprint 1, 7/10 after Sprint 2, 8/10 after Sprint 3, 9/10 after Sprint 4. All of these questions show average ratings higher than 3, indicating a positive attitude towards Scrum and its practices. We can therefore lend some credibility to the hypothesis that students on average had a positive attitude towards ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"than 3, indicating a positive attitude towards Scrum and its practices. We can therefore lend some credibility to the hypothesis that students on average had a ",positive ,"attitude towards the use of the Scrum methodology in our course. In particular, the average rating for question 10, asking whether students were satisfied with ","than 3, indicating a positive attitude towards Scrum and its practices. We can therefore lend some credibility to the hypothesis that students on average had a positive attitude towards the use of the Scrum methodology in our course. In particular, the average rating for question 10, asking whether students were satisfied with ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"the satisfaction with Scrum depends on knowing how to effectively deal with user stories. Furthermore, in S2, the perceived quality of tests (q1) also showed ",positive ,correlation (r=0.24) with the satisfaction with Scrum. These results suggest that the satisfaction with Scrum of student teams not only depends on the perceived ,"the satisfaction with Scrum depends on knowing how to effectively deal with user stories. Furthermore, in S2, the perceived quality of tests (q1) also showed positive correlation (r=0.24) with the satisfaction with Scrum. These results suggest that the satisfaction with Scrum of student teams not only depends on the perceived ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"significant correlations between the satisfaction with Scrum (q10) and other questions could be found [14]. In our repeat of the survey (S1), however, we found significant ",positive ,"correlations in answers to this question with all questions regarding collaboration with Scrum roles (see Table 5): collaboration with the SM (q5), collaboration with the ","significant correlations between the satisfaction with Scrum (q10) and other questions could be found [14]. In our repeat of the survey (S1), however, we found significant positive correlations in answers to this question with all questions regarding collaboration with Scrum roles (see Table 5): collaboration with the SM (q5), collaboration with the ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"tuning the way the metric detects process violations. Two general courses of action lend themselves to reducing the amount of real violations, i.e. true ","positives, ","in the future: modifying the metric or improving the executed process. In the first case, if the found violations are not considered harmful to ","tuning the way the metric detects process violations. Two general courses of action lend themselves to reducing the amount of real violations, i.e. true positives, in the future: modifying the metric or improving the executed process. In the first case, if the found violations are not considered harmful to ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,how to improve the metrics themselves as well as the overlap between defined and executed practice should be decided and implemented. If metrics return false ,"positives, ",these should be eliminated by fine-tuning the way the metric detects process violations. Two general courses of action lend themselves to reducing the ,"how to improve the metrics themselves as well as the overlap between defined and executed practice should be decided and implemented. If metrics return false positives, these should be eliminated by fine-tuning the way the metric detects process violations. Two general courses of action lend themselves to reducing the ",2016
ICSE_How_Surveys_Tutors_and_Software_Help_to_Assess_2016_IEEE_cleaned.txt,"symptoms of deeper problems, which should be tackled in the following improvement step. Furthermore, violations may not actually point to problems but can be false ",positives. ,"This can be the case when queries are not refined enough, some special cases were forgotten, or the development context was not considered. The ","symptoms of deeper problems, which should be tackled in the following improvement step. Furthermore, violations may not actually point to problems but can be false positives. This can be the case when queries are not refined enough, some special cases were forgotten, or the development context was not considered. The ",2016
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"communication, how we should spell out everything to them [to the Canadian students] and they have to spell out everything to us. It is so ",easy ,"to get misunderstandings. — A Finnish student With regard to asynchronous communication you gotta make it more effective, so that you are not going back ","communication, how we should spell out everything to them [to the Canadian students] and they have to spell out everything to us. It is so easy to get misunderstandings. — A Finnish student With regard to asynchronous communication you gotta make it more effective, so that you are not going back ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"part of them, were afraid of saying aloud their opinions. (...) I would have hoped for more Finnish style of directness, it would have made it ",easier ,to make decisions. — Finnish student  Even though the students found some cultural differences they commented that the bigger differences were often in personalities of ,"part of them, were afraid of saying aloud their opinions. (...) I would have hoped for more Finnish style of directness, it would have made it easier to make decisions. — Finnish student  Even though the students found some cultural differences they commented that the bigger differences were often in personalities of ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,and sometimes the Finns. You have to try to be available and you have to try to see what you can do to make things ,easier ,"for everyone else. — A Canadian student Even though both the students and teachers tried to be fair in this, the pain was not always ","and sometimes the Finns. You have to try to be available and you have to try to see what you can do to make things easier for everyone else. — A Canadian student Even though both the students and teachers tried to be fair in this, the pain was not always ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,the pain was not always shared equally. The Finnish students noted that the timing of the combined Sprint Planning/Demo/Retro meeting was so much ,easier ,"for the Canadian students, since these meetings took place during their regular class hours in the morning, but for the Finns it was always ","the pain was not always shared equally. The Finnish students noted that the timing of the combined Sprint Planning/Demo/Retro meeting was so much easier for the Canadian students, since these meetings took place during their regular class hours in the morning, but for the Finns it was always ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"and interpret people, their opinions better than when only hearing their voice. Especially when there are some language difficulties, it helps to understand, communication is ",easier ,"when you can see the others. — A Finnish student  2) Finding the Appropriate Amount, Style and Tools for Communication: Scrum’s short sprints, need for ","and interpret people, their opinions better than when only hearing their voice. Especially when there are some language difficulties, it helps to understand, communication is easier when you can see the others. — A Finnish student  2) Finding the Appropriate Amount, Style and Tools for Communication: Scrum’s short sprints, need for ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"stand-up is really good in just communicating what people are doing right now, what have they done, if anybody’s in trouble. And as ",simple ,"as they are, they’re really good. — A Canadian student The stand-up meetings in Hangout so that everybody could see each other were ","stand-up is really good in just communicating what people are doing right now, what have they done, if anybody’s in trouble. And as simple as they are, they’re really good. — A Canadian student The stand-up meetings in Hangout so that everybody could see each other were ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,used the waterfall model. Implementing distributed Scrum in classroom environments requires additional technological support for the frequent synchronous interaction across sites and is far from ,trivial. ,"The Scrum implementation reported by Scharff and colleagues had several discrepancies compared to industrial best practice for distributed Scrum. For example, they did not ","used the waterfall model. Implementing distributed Scrum in classroom environments requires additional technological support for the frequent synchronous interaction across sites and is far from trivial. The Scrum implementation reported by Scharff and colleagues had several discrepancies compared to industrial best practice for distributed Scrum. For example, they did not ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"of post-course interviews. As evidence of learning, we describe the students’ reported challenges in their distributed collaboration and teamwork, strategies to overcome them, as ",well ,as the effectiveness of these strategies.   III. COURSE INSTRUCTIONAL DESIGN  A. Learning Goals Our main goal was to teach GSE competences by emulating a ,"of post-course interviews. As evidence of learning, we describe the students’ reported challenges in their distributed collaboration and teamwork, strategies to overcome them, as well as the effectiveness of these strategies.   III. COURSE INSTRUCTIONAL DESIGN  A. Learning Goals Our main goal was to teach GSE competences by emulating a ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"into three distributed Scrum teams, each consisting of 7-8 members (4-5 Canadian students and 23 Finnish students). The Product Owner (PO), a staff member at Aalto University, as ",well ,"as the Scrum Master (SM) were located in Finland. The SM was an experienced student, who worked as a SM for all the teams, ","into three distributed Scrum teams, each consisting of 7-8 members (4-5 Canadian students and 23 Finnish students). The Product Owner (PO), a staff member at Aalto University, as well as the Scrum Master (SM) were located in Finland. The SM was an experienced student, who worked as a SM for all the teams, ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"videoconferencing session, between the two war rooms. First, the Finnish PO presented an overview of the user stories to be developed in the sprint, as ",well ,"as an initial allocation of user stories to the three teams. Then, the teams split into three separate videoconference sessions to estimate the stories, ","videoconferencing session, between the two war rooms. First, the Finnish PO presented an overview of the user stories to be developed in the sprint, as well as an initial allocation of user stories to the three teams. Then, the teams split into three separate videoconference sessions to estimate the stories, ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"of GSE competencies we employed a mixed-method approach including 13 post-course interviews, pre-, post-course and iteration questionnaires, observations, recordings of Daily Scrums as ",well ,"as collection of project asynchronous communication data. Our analysis indicates that the Scrum method, along with supporting collaboration practices and tools, supports the learning ","of GSE competencies we employed a mixed-method approach including 13 post-course interviews, pre-, post-course and iteration questionnaires, observations, recordings of Daily Scrums as well as collection of project asynchronous communication data. Our analysis indicates that the Scrum method, along with supporting collaboration practices and tools, supports the learning ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"for instructional design in teaching these critical GSE competencies. As Scrum has short sprints with several formal meetings for Sprint Planning, Demos and Retrospectives, as ",well ,"as emphasizes early and frequent communication within and between teams, as well as with the Product Owner (PO), it gives the students the possibility ","for instructional design in teaching these critical GSE competencies. As Scrum has short sprints with several formal meetings for Sprint Planning, Demos and Retrospectives, as well as emphasizes early and frequent communication within and between teams, as well as with the Product Owner (PO), it gives the students the possibility ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"of the teams decided in a Retrospective to introduce Google Docs for briefly reporting the things each had done during their last working pass, as ",well ,"as for asking questions and for help. The students reported that this had improved the situation. (...) we created this sprint communication log, which is ","of the teams decided in a Retrospective to introduce Google Docs for briefly reporting the things each had done during their last working pass, as well as for asking questions and for help. The students reported that this had improved the situation. (...) we created this sprint communication log, which is ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"lectures but fully worked on the project, the University of Victoria course setup included a more traditional structure in which students participated in lectures, as ",well ,"as in-class and online discussions of experience. The Finnish course started in September 2011, thus the Finnish students had already worked for a few ","lectures but fully worked on the project, the University of Victoria course setup included a more traditional structure in which students participated in lectures, as well as in-class and online discussions of experience. The Finnish course started in September 2011, thus the Finnish students had already worked for a few ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"the role played by distributed Scrum in teaching GSE skills of distributed communication and teamwork, using tools for distributed collaboration, building and maintaining trust, as ",well ,"as inter-cultural collaboration. By analyzing data from before, during and after the course, we were able to discuss how by using practices of ","the role played by distributed Scrum in teaching GSE skills of distributed communication and teamwork, using tools for distributed collaboration, building and maintaining trust, as well as inter-cultural collaboration. By analyzing data from before, during and after the course, we were able to discuss how by using practices of ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"zone difference. The teams had innovative ways to create awareness, strategies for coping with the time-zone differences and for managing their own time, as ",well ,"as introduced pair work, both for distributed and collocated pairs. Figure 1b shows the data we collected on the teamwork quality indicator [22] after each ","zone difference. The teams had innovative ways to create awareness, strategies for coping with the time-zone differences and for managing their own time, as well as introduced pair work, both for distributed and collocated pairs. Figure 1b shows the data we collected on the teamwork quality indicator [22] after each ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"Finnish Student The students commented that with their pair programming pairs they had personal discussions, which both helped them get to know each other, as ",well ,as lowered the cultural boundaries. Several of our interviewed students appreciated the moments when some of their fellow students had shared personal stories that ,"Finnish Student The students commented that with their pair programming pairs they had personal discussions, which both helped them get to know each other, as well as lowered the cultural boundaries. Several of our interviewed students appreciated the moments when some of their fellow students had shared personal stories that ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"systematic data analysis of learning of GSE competences either. In this paper we report on a richer implementation of distributed Scrum in teaching GSE, as ",well ,"as our assessment of learning of GSE competencies such as distributed communication and teamwork, building and maintaining trust, using collaborative tools, and inter-cultural ","systematic data analysis of learning of GSE competences either. In this paper we report on a richer implementation of distributed Scrum in teaching GSE, as well as our assessment of learning of GSE competencies such as distributed communication and teamwork, building and maintaining trust, using collaborative tools, and inter-cultural ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"and triangulated results whenever possible. For each of our learning goals (the GSE competences) we sought to identify the students’ expectation of learning, experiences, as ",well ,as reported actual learning. A summary of data collection instruments and analysis methods used is shown in Table I.  V. RESULTS In this section ,"and triangulated results whenever possible. For each of our learning goals (the GSE competences) we sought to identify the students’ expectation of learning, experiences, as well as reported actual learning. A summary of data collection instruments and analysis methods used is shown in Table I.  V. RESULTS In this section ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"with GSE best practices [3]. Adopting agile methods in distributed settings seems to be a rising industry trend, as agile methods both provide several benefits, as ",well ,"as strategies for addressing GSE challenges [4], [5]. Therefore, software engineering curricula must respond by providing students with knowledge and experiences of globally distributed agile projects. ","with GSE best practices [3]. Adopting agile methods in distributed settings seems to be a rising industry trend, as agile methods both provide several benefits, as well as strategies for addressing GSE challenges [4], [5]. Therefore, software engineering curricula must respond by providing students with knowledge and experiences of globally distributed agile projects. ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"knowledge of the project and agile practices (one of them the SM) visited the Canadian site for nine days. During the visit, Scrum training, as ",well ,as technical training on Agilefant was given. The Canadians also performed one actively coached six-day mini-sprint to familiarize themselves with both the ,"knowledge of the project and agile practices (one of them the SM) visited the Canadian site for nine days. During the visit, Scrum training, as well as technical training on Agilefant was given. The Canadians also performed one actively coached six-day mini-sprint to familiarize themselves with both the ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"emulating a modern real-world GSE environment through the use of agile practices that involve significant inter-team, inter-site and inter-cultural communication, as ",well ,as to teach and expose students to various collaborative technologies that provide infrastructural and cognitive support for effective communication in global teams. Based on ,"emulating a modern real-world GSE environment through the use of agile practices that involve significant inter-team, inter-site and inter-cultural communication, as well as to teach and expose students to various collaborative technologies that provide infrastructural and cognitive support for effective communication in global teams. Based on ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"methodology as described in Section IV. We used pre-course, post-course, and sprint surveys to collect data on communication, teamwork and trust levels, as ",well ,"as tracking of online communication in email and chat channels, analysis of videoconferencing project meetings and a series of post-course interviews. As evidence ","methodology as described in Section IV. We used pre-course, post-course, and sprint surveys to collect data on communication, teamwork and trust levels, as well as tracking of online communication in email and chat channels, analysis of videoconferencing project meetings and a series of post-course interviews. As evidence ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"short sprints with several formal meetings for Sprint Planning, Demos and Retrospectives, as well as emphasizes early and frequent communication within and between teams, as ",well ,"as with the Product Owner (PO), it gives the students the possibility to experience the whole life-cycle of a distributed project, while reflecting ","short sprints with several formal meetings for Sprint Planning, Demos and Retrospectives, as well as emphasizes early and frequent communication within and between teams, as well as with the Product Owner (PO), it gives the students the possibility to experience the whole life-cycle of a distributed project, while reflecting ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"decline when the PO asked for too many user stories in an iteration, and ask him to prioritize whenever everything planned could not be done: ","Well, [","the PO] overloaded us during the sprints, but that was partially our fault for not budgeting or scoping things properly. (...) when we are overloaded ","decline when the PO asked for too many user stories in an iteration, and ask him to prioritize whenever everything planned could not be done: Well, [the PO] overloaded us during the sprints, but that was partially our fault for not budgeting or scoping things properly. (...) when we are overloaded ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"persistently there. — A Canadian student The backlog management tool Agilefant, that the teams were developing, were used by the teams in their own work as ",well. ,"The students found it as a very good tool for creating awareness both between the teams and inside one team, since there everybody could ","persistently there. — A Canadian student The backlog management tool Agilefant, that the teams were developing, were used by the teams in their own work as well. The students found it as a very good tool for creating awareness both between the teams and inside one team, since there everybody could ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"They were nice, and they were good at getting things done. — Canadian student I think it was nice how our team sort of jelled really ",well. (...) ,And we all sort of took a collective pride in the quality work that we were doing. (...) That was the most positive aspect of ,"They were nice, and they were good at getting things done. — Canadian student I think it was nice how our team sort of jelled really well. (...) And we all sort of took a collective pride in the quality work that we were doing. (...) That was the most positive aspect of ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,about. — A Canadian student  2) Trust Building through Seeing High Quality work: The role of high quality work in building trust among the software developers is ,well ,"documented in software engineering literature, e.g., [24]. The short sprints enabled our student teams to track everyone’s contributions and quality of work early ","about. — A Canadian student  2) Trust Building through Seeing High Quality work: The role of high quality work in building trust among the software developers is well documented in software engineering literature, e.g., [24]. The short sprints enabled our student teams to track everyone’s contributions and quality of work early ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"also in this kind of an environment. (..) I did not believe that the stand-ups twice a week would correspond the normal Daily stand-up, ","well, ","it did not, but it worked, our team was able to keep aware of what was happening. — A Finnish student Due to the mostly ","also in this kind of an environment. (..) I did not believe that the stand-ups twice a week would correspond the normal Daily stand-up, well, it did not, but it worked, our team was able to keep aware of what was happening. — A Finnish student Due to the mostly ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"the main communication medium it became overused, resulting in the teams soon replacing part of email communication with other media better suited for their needs. ","Well, ","we definitely learned which tools were the best to communicate. (...) So, at the beginning we had I think six or seven tools to communicate, ","the main communication medium it became overused, resulting in the teams soon replacing part of email communication with other media better suited for their needs. Well, we definitely learned which tools were the best to communicate. (...) So, at the beginning we had I think six or seven tools to communicate, ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,one distributed pair worked at 3 am/1 pm in Canada and Finland respectively. (...) we did quite a lot Google Hangout programming and it worked out surprisingly ,well. (...) ,"With [a Canadian student] we did all programming, or maybe 70% in Hangout, so that the other ones screen was shared and then we looked ","one distributed pair worked at 3 am/1 pm in Canada and Finland respectively. (...) we did quite a lot Google Hangout programming and it worked out surprisingly well. (...) With [a Canadian student] we did all programming, or maybe 70% in Hangout, so that the other ones screen was shared and then we looked ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"the communication. When email was the main communication medium it became overused, resulting in the teams soon replacing part of email communication with other media ",better ,"suited for their needs. Well, we definitely learned which tools were the best to communicate. (...) So, at the beginning we had I think six ","the communication. When email was the main communication medium it became overused, resulting in the teams soon replacing part of email communication with other media better suited for their needs. Well, we definitely learned which tools were the best to communicate. (...) So, at the beginning we had I think six ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"so that everybody could see each other were great. (...) That you could see each other was cool. (...) You can read and interpret people, their opinions ",better ,"than when only hearing their voice. Especially when there are some language difficulties, it helps to understand, communication is easier when you can see ","so that everybody could see each other were great. (...) That you could see each other was cool. (...) You can read and interpret people, their opinions better than when only hearing their voice. Especially when there are some language difficulties, it helps to understand, communication is easier when you can see ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,is good for some things. — A Finnish student  Now I understand better the differences between the different communication tools and would be able to do ,better ,decisions. — A Finnish student In the post-course survey we asked the students to evaluate the usefulness of different tools they used for creating ,is good for some things. — A Finnish student  Now I understand better the differences between the different communication tools and would be able to do better decisions. — A Finnish student In the post-course survey we asked the students to evaluate the usefulness of different tools they used for creating ,2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"course that there had been even more communication and collaboration between the countries, so that they would have gotten to know even more Canadians / Finns ","better, ","not only the ones they had been, e.g., pair programming with. [The best thing] was the team work with them [Canadians]. And then ","course that there had been even more communication and collaboration between the countries, so that they would have gotten to know even more Canadians / Finns better, not only the ones they had been, e.g., pair programming with. [The best thing] was the team work with them [Canadians]. And then ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"this large time-zone distance, required good time management. Several students mentioned that during this course they had learned to manage their own time much ","better, ","positively influencing their ability to estimate, schedule, and allocate tasks in the short sprints. I think the technical things I could have learned just ","this large time-zone distance, required good time management. Several students mentioned that during this course they had learned to manage their own time much better, positively influencing their ability to estimate, schedule, and allocate tasks in the short sprints. I think the technical things I could have learned just ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"time, but that enables also pair discussions, and as a third [tool] email, which is good for some things. — A Finnish student  Now I understand ",better ,the differences between the different communication tools and would be able to do better decisions. — A Finnish student In the post-course survey we ,"time, but that enables also pair discussions, and as a third [tool] email, which is good for some things. — A Finnish student  Now I understand better the differences between the different communication tools and would be able to do better decisions. — A Finnish student In the post-course survey we ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,Teaching Students Global Software Engineering Skills using Distributed Scrum  Abstract—In this paper we describe distributed Scrum augmented with ,best ,practices in global software engineering (GSE) as an important paradigm for teaching critical competencies in GSE. We report on a globally distributed project course ,Teaching Students Global Software Engineering Skills using Distributed Scrum  Abstract—In this paper we describe distributed Scrum augmented with best practices in global software engineering (GSE) as an important paradigm for teaching critical competencies in GSE. We report on a globally distributed project course ,2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"instruments and analysis methods used is shown in Table I.  V. RESULTS In this section we describe how distributed Scrum, augmented with a number of ",best ,"practices in GSE, enabled the learning of the GSE competencies in our course: distributed communication and teamwork, building and maintaining trust, usage of collaboration ","instruments and analysis methods used is shown in Table I.  V. RESULTS In this section we describe how distributed Scrum, augmented with a number of best practices in GSE, enabled the learning of the GSE competencies in our course: distributed communication and teamwork, building and maintaining trust, usage of collaboration ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,instructional design of a GSE course between two universities located in Finland and Canada in Section III. Our distributed Scrum implementation was based on known ,best ,"practices in industrial agile GSE, such as frequent synchronous communication between the sites, the use of videoconferences for the Daily Scrums and Sprint Planning ","instructional design of a GSE course between two universities located in Finland and Canada in Section III. Our distributed Scrum implementation was based on known best practices in industrial agile GSE, such as frequent synchronous communication between the sites, the use of videoconferences for the Daily Scrums and Sprint Planning ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,favorite part of it. — A Canadian student  VI. CONCLUSIONS In this paper we presented the course design using Scrum adapted to distributed environment following industry ,best ,practices and tools to support collaboration. This is to our knowledge the first GSE course to adopt such a combination of agile methodologies and ,favorite part of it. — A Canadian student  VI. CONCLUSIONS In this paper we presented the course design using Scrum adapted to distributed environment following industry best practices and tools to support collaboration. This is to our knowledge the first GSE course to adopt such a combination of agile methodologies and ,2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"their reported (1) challenges in applying these skills, (2) strategies to overcome the challenges and (3) effectiveness of these strategies. We conclude that distributed Scrum augmented with GSE ",best ,practices is a suitable and important paradigm to consider in GSE course instructional design.  ,"their reported (1) challenges in applying these skills, (2) strategies to overcome the challenges and (3) effectiveness of these strategies. We conclude that distributed Scrum augmented with GSE best practices is a suitable and important paradigm to consider in GSE course instructional design.  ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,the frequent synchronous interaction across sites and is far from trivial. The Scrum implementation reported by Scharff and colleagues had several discrepancies compared to industrial ,best ,"practice for distributed Scrum. For example, they did not stress synchronous communication or exclusively use cross-functional teams, and had a single team of ","the frequent synchronous interaction across sites and is far from trivial. The Scrum implementation reported by Scharff and colleagues had several discrepancies compared to industrial best practice for distributed Scrum. For example, they did not stress synchronous communication or exclusively use cross-functional teams, and had a single team of ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,best practices and tools to support collaboration. This is to our knowledge the first GSE course to adopt such a combination of agile methodologies and ,best ,"practices. As previously reported GSE courses have mainly used plan-driven methods, this course using distributed Scrum and our assessment of students expectations and ","best practices and tools to support collaboration. This is to our knowledge the first GSE course to adopt such a combination of agile methodologies and best practices. As previously reported GSE courses have mainly used plan-driven methods, this course using distributed Scrum and our assessment of students expectations and ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"sense of teamwork, closely followed by Agilefant, email, Google Docs and git. For creating a shared understanding git, the configuration management system, was considered the ",best ,"tool closely followed by Agilefant, Google Hangout, email and Google Docs. For completing the project, the most important tools were Google Hangout and Agilefant, ","sense of teamwork, closely followed by Agilefant, email, Google Docs and git. For creating a shared understanding git, the configuration management system, was considered the best tool closely followed by Agilefant, Google Hangout, email and Google Docs. For completing the project, the most important tools were Google Hangout and Agilefant, ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"shared understanding in the project, for developing a sense of teamwork, and for completing the project. Figure 2 shows the results. Google Hangout was considered the ",best ,"tool for creating sense of teamwork, closely followed by Agilefant, email, Google Docs and git. For creating a shared understanding git, the configuration management ","shared understanding in the project, for developing a sense of teamwork, and for completing the project. Figure 2 shows the results. Google Hangout was considered the best tool for creating sense of teamwork, closely followed by Agilefant, email, Google Docs and git. For creating a shared understanding git, the configuration management ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"and other development-related purposes. The Finnish war room was an open office space with several computers, but no dedicated equipment. To follow the GSE ",best ,"practices [24], two visits were organized to kick-off the project and enabled the instructors and students to get to know each other and their ","and other development-related purposes. The Finnish war room was an open office space with several computers, but no dedicated equipment. To follow the GSE best practices [24], two visits were organized to kick-off the project and enabled the instructors and students to get to know each other and their ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"communication, transparency of progress and short iterations, they in fact provide an effective approach to address challenges in distributed collaboration, especially when augmented with GSE ",best ,"practices [3]. Adopting agile methods in distributed settings seems to be a rising industry trend, as agile methods both provide several benefits, as well as ","communication, transparency of progress and short iterations, they in fact provide an effective approach to address challenges in distributed collaboration, especially when augmented with GSE best practices [3]. Adopting agile methods in distributed settings seems to be a rising industry trend, as agile methods both provide several benefits, as well as ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"that they would have gotten to know even more Canadians / Finns better, not only the ones they had been, e.g., pair programming with. [The ",best ,"thing] was the team work with them [Canadians]. And then the technical variety of this product, and the variety in these people working with ","that they would have gotten to know even more Canadians / Finns better, not only the ones they had been, e.g., pair programming with. [The best thing] was the team work with them [Canadians]. And then the technical variety of this product, and the variety in these people working with ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"in the teams soon replacing part of email communication with other media better suited for their needs. Well, we definitely learned which tools were the ",best ,"to communicate. (...) So, at the beginning we had I think six or seven tools to communicate, and we learned that less is more, so ","in the teams soon replacing part of email communication with other media better suited for their needs. Well, we definitely learned which tools were the best to communicate. (...) So, at the beginning we had I think six or seven tools to communicate, and we learned that less is more, so ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"something where the whole team can be at the same time, but that enables also pair discussions, and as a third [tool] email, which is ",good ,for some things. — A Finnish student  Now I understand better the differences between the different communication tools and would be able to do better ,"something where the whole team can be at the same time, but that enables also pair discussions, and as a third [tool] email, which is good for some things. — A Finnish student  Now I understand better the differences between the different communication tools and would be able to do better ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,beginning. (2) Trust building through seeing good quality work. (3) How lack of quality work damaged trust in remote colleagues. (4) Maintaining trust through awareness. (1) Experience with a ,good ,"number of collaboration tools. (2) Being able to select a good combination of tools, after having been overwhelmed by too many tools. 3) Selecting the suitable ","beginning. (2) Trust building through seeing good quality work. (3) How lack of quality work damaged trust in remote colleagues. (4) Maintaining trust through awareness. (1) Experience with a good number of collaboration tools. (2) Being able to select a good combination of tools, after having been overwhelmed by too many tools. 3) Selecting the suitable ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,student teams to track everyone’s contributions and quality of work early in the project. Students quickly learned to appreciate the team members who did ,good ,"work and finished what they had promised, and took collective pride over the work done: I just liked working with the Finnish team members. ","student teams to track everyone’s contributions and quality of work early in the project. Students quickly learned to appreciate the team members who did good work and finished what they had promised, and took collective pride over the work done: I just liked working with the Finnish team members. ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"not expect much from the Canadians in the beginning, as they did not know whether they would be good coders or not. However, noticing the ",good ,"work done by the Canadians the trust towards them started to rise. On the other hand, the Canadians had high expectations of the Finns, ","not expect much from the Canadians in the beginning, as they did not know whether they would be good coders or not. However, noticing the good work done by the Canadians the trust towards them started to rise. On the other hand, the Canadians had high expectations of the Finns, ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"communicating what people are doing right now, what have they done, if anybody’s in trouble. And as simple as they are, they’re really ",good. — ,A Canadian student The stand-up meetings in Hangout so that everybody could see each other were great. (...) That you could see each other ,"communicating what people are doing right now, what have they done, if anybody’s in trouble. And as simple as they are, they’re really good. — A Canadian student The stand-up meetings in Hangout so that everybody could see each other were great. (...) That you could see each other ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"had promised, and took collective pride over the work done: I just liked working with the Finnish team members. They were nice, and they were ",good ,at getting things done. — Canadian student I think it was nice how our team sort of jelled really well. (...) And we all sort of ,"had promised, and took collective pride over the work done: I just liked working with the Finnish team members. They were nice, and they were good at getting things done. — Canadian student I think it was nice how our team sort of jelled really well. (...) And we all sort of ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"Our interviews indicate that the Finns did not expect much from the Canadians in the beginning, as they did not know whether they would be ",good ,"coders or not. However, noticing the good work done by the Canadians the trust towards them started to rise. On the other hand, the ","Our interviews indicate that the Finns did not expect much from the Canadians in the beginning, as they did not know whether they would be good coders or not. However, noticing the good work done by the Canadians the trust towards them started to rise. On the other hand, the ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,of quality work damaged trust in remote colleagues. (4) Maintaining trust through awareness. (1) Experience with a good number of collaboration tools. (2) Being able to select a ,good ,"combination of tools, after having been overwhelmed by too many tools. 3) Selecting the suitable tool for particular purposes in collaboration. (1) Understanding the differences in ","of quality work damaged trust in remote colleagues. (4) Maintaining trust through awareness. (1) Experience with a good number of collaboration tools. (2) Being able to select a good combination of tools, after having been overwhelmed by too many tools. 3) Selecting the suitable tool for particular purposes in collaboration. (1) Understanding the differences in ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"the trust started to deteriorate over time. Interestingly however, a team which had already established trust became stronger when faced with difficulties: Because of the ",good ,"communication and team trust that we build up, I think those sort of problems actually build up the trust more, which is good.  3) Maintaining ","the trust started to deteriorate over time. Interestingly however, a team which had already established trust became stronger when faced with difficulties: Because of the good communication and team trust that we build up, I think those sort of problems actually build up the trust more, which is good.  3) Maintaining ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"person’s 9-day visit to Canada. Both visits were highly appreciated by the students, especially the Finn’s longer trip to Canada. This trip created ",good ,"contacts and gave the Canadians a kick-start for the project. I think that when we were there, they got a good picture of ","person’s 9-day visit to Canada. Both visits were highly appreciated by the students, especially the Finn’s longer trip to Canada. This trip created good contacts and gave the Canadians a kick-start for the project. I think that when we were there, they got a good picture of ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"the project and availability for questions and ad-hoc meetings whenever he was awake was motivating: He was very enthusiastic about the project, which was ",good. ,He sort of encouraged a team spirit and motivated us. — Canadian student We observed that the students’ communication behavior with the PO changed during ,"the project and availability for questions and ad-hoc meetings whenever he was awake was motivating: He was very enthusiastic about the project, which was good. He sort of encouraged a team spirit and motivated us. — Canadian student We observed that the students’ communication behavior with the PO changed during ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"communication, and were found as the most useful form of communication: I really liked how we did the stand-ups (...) the stand-up is really ",good ,"in just communicating what people are doing right now, what have they done, if anybody’s in trouble. And as simple as they are, ","communication, and were found as the most useful form of communication: I really liked how we did the stand-ups (...) the stand-up is really good in just communicating what people are doing right now, what have they done, if anybody’s in trouble. And as simple as they are, ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,could easily see what tasks had been finished and what were ongoing tasks and who was working with what. I thought that Agilefant did a ,good ,"job of communicating the status of the stories, to see where the groups are in terms of burndown. — A Canadian student  2) Coping with Time-","could easily see what tasks had been finished and what were ongoing tasks and who was working with what. I thought that Agilefant did a good job of communicating the status of the stories, to see where the groups are in terms of burndown. — A Canadian student  2) Coping with Time-",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"of the good communication and team trust that we build up, I think those sort of problems actually build up the trust more, which is ",good.  3) ,Maintaining Trust through Awareness: Daily Scrum meetings scheduled twice a week created visibility of team progress. Some of the students even commented that these ,"of the good communication and team trust that we build up, I think those sort of problems actually build up the trust more, which is good.  3) Maintaining Trust through Awareness: Daily Scrum meetings scheduled twice a week created visibility of team progress. Some of the students even commented that these ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"This trip created good contacts and gave the Canadians a kick-start for the project. I think that when we were there, they got a ",good ,"picture of the Finns and it also lowered the barrier [for the Canadians] to communicate with other Finns. Thus, even though they had not ","This trip created good contacts and gave the Canadians a kick-start for the project. I think that when we were there, they got a good picture of the Finns and it also lowered the barrier [for the Canadians] to communicate with other Finns. Thus, even though they had not ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,How to benefit from distributed pair work. (1) The importance of getting to know each other (especially remote colleagues) in the beginning. (2) Trust building through seeing ,good ,quality work. (3) How lack of quality work damaged trust in remote colleagues. (4) Maintaining trust through awareness. (1) Experience with a good number of collaboration tools. (2) ,How to benefit from distributed pair work. (1) The importance of getting to know each other (especially remote colleagues) in the beginning. (2) Trust building through seeing good quality work. (3) How lack of quality work damaged trust in remote colleagues. (4) Maintaining trust through awareness. (1) Experience with a good number of collaboration tools. (2) ,2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"worked a lot and got a lot of stuff done, then he’d have more for us next sprint, and that’s I think a ",good ,"thing. If you need to defer something or say you have too much work, then you’ll have to actually tell him. Otherwise, you’","worked a lot and got a lot of stuff done, then he’d have more for us next sprint, and that’s I think a good thing. If you need to defer something or say you have too much work, then you’ll have to actually tell him. Otherwise, you’",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"each team. They learned that arranging common meeting times and synchronous working slots for pair/team work, especially across this large time-zone distance, required ",good ,"time management. Several students mentioned that during this course they had learned to manage their own time much better, positively influencing their ability to ","each team. They learned that arranging common meeting times and synchronous working slots for pair/team work, especially across this large time-zone distance, required good time management. Several students mentioned that during this course they had learned to manage their own time much better, positively influencing their ability to ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"tool Agilefant, that the teams were developing, were used by the teams in their own work as well. The students found it as a very ",good ,"tool for creating awareness both between the teams and inside one team, since there everybody could easily see what tasks had been finished and ","tool Agilefant, that the teams were developing, were used by the teams in their own work as well. The students found it as a very good tool for creating awareness both between the teams and inside one team, since there everybody could easily see what tasks had been finished and ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"even though they had not met everybody, in a way they had now some kind of contact surface to Finland. — A Finnish student Thus, the ",benefits ,"of the Finns’ visit to Canada extended to the other Finns who could not travel. Besides the face-to-face visits, many students mentioned ","even though they had not met everybody, in a way they had now some kind of contact surface to Finland. — A Finnish student Thus, the benefits of the Finns’ visit to Canada extended to the other Finns who could not travel. Besides the face-to-face visits, many students mentioned ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,in a project. (2) Strategies for creating awareness of work asynchronously. (3) Strategies to share the pain of time-zone differences. (4) Strategies for time management. (5) How to ,benefit ,from distributed pair work. (1) The importance of getting to know each other (especially remote colleagues) in the beginning. (2) Trust building through seeing good quality ,in a project. (2) Strategies for creating awareness of work asynchronously. (3) Strategies to share the pain of time-zone differences. (4) Strategies for time management. (5) How to benefit from distributed pair work. (1) The importance of getting to know each other (especially remote colleagues) in the beginning. (2) Trust building through seeing good quality ,2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"sometimes, if they hadn’t checked in their code. — A Canadian student Although the Daily Scrums were scheduled twice a week, students remarked their added ",benefits ,"in improving the aware- ness and in encouraging the students to work daily: If we could somehow have actually Daily Scrums, that would force ","sometimes, if they hadn’t checked in their code. — A Canadian student Although the Daily Scrums were scheduled twice a week, students remarked their added benefits in improving the aware- ness and in encouraging the students to work daily: If we could somehow have actually Daily Scrums, that would force ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"when augmented with GSE best practices [3]. Adopting agile methods in distributed settings seems to be a rising industry trend, as agile methods both provide several ","benefits, ","as well as strategies for addressing GSE challenges [4], [5]. Therefore, software engineering curricula must respond by providing students with knowledge and experiences of globally distributed ","when augmented with GSE best practices [3]. Adopting agile methods in distributed settings seems to be a rising industry trend, as agile methods both provide several benefits, as well as strategies for addressing GSE challenges [4], [5]. Therefore, software engineering curricula must respond by providing students with knowledge and experiences of globally distributed ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,and supporting GSE practices in our instructional design (summary in Table II).  A. Distributed Communication Our first goal was to teach the students strategies for ,successful ,"distributed communication, thus we will first look at how the student teams communicated. Figure 1a shows the social network of the entire project, based ","and supporting GSE practices in our instructional design (summary in Table II).  A. Distributed Communication Our first goal was to teach the students strategies for successful distributed communication, thus we will first look at how the student teams communicated. Figure 1a shows the social network of the entire project, based ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,of jelled really well. (...) And we all sort of took a collective pride in the quality work that we were doing. (...) That was the most ,positive ,"aspect of the course. — A Canadian student The reverse effect was also observed in some teams: when programming difficulties resulted in some members underperforming, ","of jelled really well. (...) And we all sort of took a collective pride in the quality work that we were doing. (...) That was the most positive aspect of the course. — A Canadian student The reverse effect was also observed in some teams: when programming difficulties resulted in some members underperforming, ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"a sprint. A couple of teams used also pair programming with distributed pairs. To our surprise, this ended up being a practice that received very ",positive ,"comments and the students wished they had used it even more, despite the challenges created by the time-zone difference. (...) maybe we should have ","a sprint. A couple of teams used also pair programming with distributed pairs. To our surprise, this ended up being a practice that received very positive comments and the students wished they had used it even more, despite the challenges created by the time-zone difference. (...) maybe we should have ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"However, most courses so far have used the waterfall development process in the distributed course projects, with the exception of Scharff et al. [9]–[11], who report ",positive ,"experiences from the adoption of Scrum, having previously used the waterfall model. Implementing distributed Scrum in classroom environments requires additional technological support for the ","However, most courses so far have used the waterfall development process in the distributed course projects, with the exception of Scharff et al. [9]–[11], who report positive experiences from the adoption of Scrum, having previously used the waterfall model. Implementing distributed Scrum in classroom environments requires additional technological support for the ",2013
ICSE_Teaching_students_global_software_engineering_skills_using_distributed_Scrum_2013_IEEE_cleaned.txt,"large time-zone distance, required good time management. Several students mentioned that during this course they had learned to manage their own time much better, ",positively ,"influencing their ability to estimate, schedule, and allocate tasks in the short sprints. I think the technical things I could have learned just on ","large time-zone distance, required good time management. Several students mentioned that during this course they had learned to manage their own time much better, positively influencing their ability to estimate, schedule, and allocate tasks in the short sprints. I think the technical things I could have learned just on ",2013
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"opportunities amongst other team members. One of the teams dropped the SM role toward the end. This way team members contributed where they could, making ",easy ,"for the customer to communicate equally with all.   5.2.10. Product owner  In typical agile projects, a product owner is a dedicated role in agile team ","opportunities amongst other team members. One of the teams dropped the SM role toward the end. This way team members contributed where they could, making easy for the customer to communicate equally with all.   5.2.10. Product owner  In typical agile projects, a product owner is a dedicated role in agile team ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,programming  Online communication  Perceived effectiveness Positives (+ )  (+ ) knowledge transfer (+ ) collaborative learning (+ ) remote pair programming worked via screen sharing (+ ) combined with code review for improved code quality (+ ) ,easy ,approach to customer  Negatives (-) (-) scheduling common time  (-) confusion in remote pair programming sessions sometimes  (-) difficulties communicating with customer during sprints due to technical issues (-) ,programming  Online communication  Perceived effectiveness Positives (+ )  (+ ) knowledge transfer (+ ) collaborative learning (+ ) remote pair programming worked via screen sharing (+ ) combined with code review for improved code quality (+ ) easy approach to customer  Negatives (-) (-) scheduling common time  (-) confusion in remote pair programming sessions sometimes  (-) difficulties communicating with customer during sprints due to technical issues (-) ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"in university contexts comes with challenges for students and to counter these challenges, they perform some adaptations to standard agile practices making them effective and ",easier ,to use in university contexts. This study describes the constraints the students faced while applying agile practices in a university course taught at the ,"in university contexts comes with challenges for students and to counter these challenges, they perform some adaptations to standard agile practices making them effective and easier to use in university contexts. This study describes the constraints the students faced while applying agile practices in a university course taught at the ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,at the university.  • Having a combined sprint review and planning session can help make the most of the limited customer availability.  • Utilizing online tools to ,simplify ,"communication within teams such as team emails, messengers, chat channels, digital scrum boards, virtual pair programming tools, bots to update direct from chats to ","at the university.  • Having a combined sprint review and planning session can help make the most of the limited customer availability.  • Utilizing online tools to simplify communication within teams such as team emails, messengers, chat channels, digital scrum boards, virtual pair programming tools, bots to update direct from chats to ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"it was time to rotate a new scrum master. After a couple of sprints, the team decided to assign a dedicated scrum master, which fit ",well ,"in their context. Everyone knew who to contact when there were any troubles, and the customer preferred having one consistent point of contact.  Most ","it was time to rotate a new scrum master. After a couple of sprints, the team decided to assign a dedicated scrum master, which fit well in their context. Everyone knew who to contact when there were any troubles, and the customer preferred having one consistent point of contact.  Most ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"standard ways to apply and follow agile methods in university settings. Not all adaptations proved useful to the teams, but most were seen to work ",well ,in university contexts.  The research questions driving this study are listed below:  RQ1: What are the most common constraints faced by students while practicing ,"standard ways to apply and follow agile methods in university settings. Not all adaptations proved useful to the teams, but most were seen to work well in university contexts.  The research questions driving this study are listed below:  RQ1: What are the most common constraints faced by students while practicing ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"peak workload.  Often, teams experimented by modifying a few practices at the beginning of the project, but with time they realized it did not work ",well ,"and so adapted it another way, thus being agile with their practices. For example, one of the teams initially started with daily virtual standup ","peak workload.  Often, teams experimented by modifying a few practices at the beginning of the project, but with time they realized it did not work well and so adapted it another way, thus being agile with their practices. For example, one of the teams initially started with daily virtual standup ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"working on the project every day, so the meetings were not always productive or necessary. They later reduced the number of standups and that worked ",well ,"for the team as each team member had something useful and new to report at each standup. Similarly, another team started off with a ","working on the project every day, so the meetings were not always productive or necessary. They later reduced the number of standups and that worked well for the team as each team member had something useful and new to report at each standup. Similarly, another team started off with a ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,are the challenges of agile and Lean software development?  • Please rate your overall level of satisfaction with your customer on a scale of 1–10; where 1 is ,well ,below standard and 10 is excellent?  • How did your team 'tweak' standard agile practices to fit the university context?  The essays were between 4 and 6 pages ,are the challenges of agile and Lean software development?  • Please rate your overall level of satisfaction with your customer on a scale of 1–10; where 1 is well below standard and 10 is excellent?  • How did your team 'tweak' standard agile practices to fit the university context?  The essays were between 4 and 6 pages ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,Negatives (-) (-) scheduling common time  (-) confusion in remote pair programming sessions sometimes  (-) difficulties communicating with customer during sprints due to technical issues (-) Emailed tasks not accepted ,well ,"by team  Customer communication Customer related issues      5.2.2. Scrum board  All the teams opted to use online tools (Trello, Jira, GitHub using ZenHub) as scrum ","Negatives (-) (-) scheduling common time  (-) confusion in remote pair programming sessions sometimes  (-) difficulties communicating with customer during sprints due to technical issues (-) Emailed tasks not accepted well by team  Customer communication Customer related issues      5.2.2. Scrum board  All the teams opted to use online tools (Trello, Jira, GitHub using ZenHub) as scrum ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"T1-T18] and conflicting due dates of deliverables in other courses such as assignments, tests and projects [raised by 15 teams T4-T18]. This constraint is ",well ,captured by the following comment from one of the students in T9.  “It was extremely challenging to organize times for the entire team to ,"T1-T18] and conflicting due dates of deliverables in other courses such as assignments, tests and projects [raised by 15 teams T4-T18]. This constraint is well captured by the following comment from one of the students in T9.  “It was extremely challenging to organize times for the entire team to ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"in detail, the challenges they faced associated with applying agile practices in a university context, the adaptations they made due to these challenges, and how ",well ,"those adaptations worked in their experience.  The data collected was saved and analysed in NVivo, a data analysis software, using open coding and constant ","in detail, the challenges they faced associated with applying agile practices in a university context, the adaptations they made due to these challenges, and how well those adaptations worked in their experience.  The data collected was saved and analysed in NVivo, a data analysis software, using open coding and constant ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,e.g. sometimes messages were lost in the channel or poor voice quality when video chatting). The strategy that was most commonly reported to work ,well ,was having at least 1–2 physical stand-ups (typically held before or after the weekly lectures or customer meetings) accompanied by a few virtual meetings ,e.g. sometimes messages were lost in the channel or poor voice quality when video chatting). The strategy that was most commonly reported to work well was having at least 1–2 physical stand-ups (typically held before or after the weekly lectures or customer meetings) accompanied by a few virtual meetings ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,times a week (before lecture and PO meeting with the PO) seen as more valuable than virtual (+ ) convenient and suited team members (+ ) Slack bot worked ,better ,than manual slack updates  (+ ) tidier than a physical scrum board (+ ) phone notifications useful (+ ) constant availability and sharing (+ ) improved workload balance (+ ) more frequent customer collaboration ,times a week (before lecture and PO meeting with the PO) seen as more valuable than virtual (+ ) convenient and suited team members (+ ) Slack bot worked better than manual slack updates  (+ ) tidier than a physical scrum board (+ ) phone notifications useful (+ ) constant availability and sharing (+ ) improved workload balance (+ ) more frequent customer collaboration ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,than a physical scrum board (+ ) phone notifications useful (+ ) constant availability and sharing (+ ) improved workload balance (+ ) more frequent customer collaboration due to short sprints (+ ) increased focus (+ ) ,better ,communication (+ ) improved mutual understanding of schedule (+ ) improved workload balance (+ ) combining/sequencing meetings proved efficient for customer collaboration  (+ ) moving retrospective before review followed by sprint ,than a physical scrum board (+ ) phone notifications useful (+ ) constant availability and sharing (+ ) improved workload balance (+ ) more frequent customer collaboration due to short sprints (+ ) increased focus (+ ) better communication (+ ) improved mutual understanding of schedule (+ ) improved workload balance (+ ) combining/sequencing meetings proved efficient for customer collaboration  (+ ) moving retrospective before review followed by sprint ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,these modifications based on reflection of the students. Recommendations for educators and students are also provided. Our findings and recommendations will help educators and students ,better ,coordinate and apply agile practices on industry-based projects in university contexts.  1. Introduction  Agile courses have been taught at both the graduate and undergraduate ,these modifications based on reflection of the students. Recommendations for educators and students are also provided. Our findings and recommendations will help educators and students better coordinate and apply agile practices on industry-based projects in university contexts.  1. Introduction  Agile courses have been taught at both the graduate and undergraduate ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,customer collaboration  (+ ) moving retrospective before review followed by sprint planning for next sprint suited PO and the team (+ ) PO in first few retrospectives provides direction (+ ) ,better ,focus on one area  (+ ) specialization increased productivity and efficiency of team members in short term (+ ) single point of contact (+ ) experienced SM effective in running ,customer collaboration  (+ ) moving retrospective before review followed by sprint planning for next sprint suited PO and the team (+ ) PO in first few retrospectives provides direction (+ ) better focus on one area  (+ ) specialization increased productivity and efficiency of team members in short term (+ ) single point of contact (+ ) experienced SM effective in running ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,some students not suited as SM (-) reduced opportunity to consolidate learning  (-) Collectively sharing product ownership added more responsibilities so having dedicated PO would have been ,better ,for the team to focus on work (-) reduced velocity due to private reconciliations of (two) PO disagreements  (-) attrition over time (-) messy log (-) untimely reminders (-) ,some students not suited as SM (-) reduced opportunity to consolidate learning  (-) Collectively sharing product ownership added more responsibilities so having dedicated PO would have been better for the team to focus on work (-) reduced velocity due to private reconciliations of (two) PO disagreements  (-) attrition over time (-) messy log (-) untimely reminders (-) ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"of deliverables in other courses, and limited dedication of team members due to demands from other courses. This leads to students adapting agile practices to ",better ,"suit the university context.  As an example, it was impossible for the students to meet every morning to perform a stand-up meeting. Also, ","of deliverables in other courses, and limited dedication of team members due to demands from other courses. This leads to students adapting agile practices to better suit the university context.  As an example, it was impossible for the students to meet every morning to perform a stand-up meeting. Also, ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"one student noted that:  “... at university, the technically competency and programming skills of students vary. Some students are more proficient at coding than others.”  To ",better ,"understand the frequency of these constraints, the students in 2017 were given these constraints as a closed list to select the ones they faced while ","one student noted that:  “... at university, the technically competency and programming skills of students vary. Some students are more proficient at coding than others.”  To better understand the frequency of these constraints, the students in 2017 were given these constraints as a closed list to select the ones they faced while ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"Where possible, teams should be provided a dedicated place for them to arrange collocated code sessions and have their physical  • Scrum boards.  • Educate teams on ",best ,practices for virtual communication.  Allocating time for daily standups during classes and lab sessions  • can prove to be useful.  Allocate a training period before ,"Where possible, teams should be provided a dedicated place for them to arrange collocated code sessions and have their physical  • Scrum boards.  • Educate teams on best practices for virtual communication.  Allocating time for daily standups during classes and lab sessions  • can prove to be useful.  Allocate a training period before ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,Programming or Test Driven Development so they do not have to experiment during the project.   7. Conclusion  It has long been acknowledged that learning agile is ,best ,"done through practical hands-on projects. Yet, university projects cannot fully replicate real-world scenarios. Students face many constraints such as difficulty in setting ","Programming or Test Driven Development so they do not have to experiment during the project.   7. Conclusion  It has long been acknowledged that learning agile is best done through practical hands-on projects. Yet, university projects cannot fully replicate real-world scenarios. Students face many constraints such as difficulty in setting ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,practices to university contexts is not a straightforward process and requires modifications to standard ways to work around the constraints imposed by university settings. A ,good ,number of agile practices were adapted to suit university settings; but not all were found effective to students in learning agile practices. The adaptations ,practices to university contexts is not a straightforward process and requires modifications to standard ways to work around the constraints imposed by university settings. A good number of agile practices were adapted to suit university settings; but not all were found effective to students in learning agile practices. The adaptations ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"least 2 stand-ups weekly. However, the frequency of can be adjusted to suit the needs. Combining physical and online stand-ups can serve as a ",good ,compromise.  • Sprint length can remain fixed most of the time but consider varying the sprint length occasionally to balance student workloads during busy assessment ,"least 2 stand-ups weekly. However, the frequency of can be adjusted to suit the needs. Combining physical and online stand-ups can serve as a good compromise.  • Sprint length can remain fixed most of the time but consider varying the sprint length occasionally to balance student workloads during busy assessment ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,practices do students choose to follow and how were those practices adapted to fit the university context?  RQ3: Which adapted practices are perceived to be ,beneficial ,and effective in terms of outcomes and which are not?   4.1. Data collection and analysis  This research is based on data collected from two years’ ,practices do students choose to follow and how were those practices adapted to fit the university context?  RQ3: Which adapted practices are perceived to be beneficial and effective in terms of outcomes and which are not?   4.1. Data collection and analysis  This research is based on data collected from two years’ ,2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"schedules and common understanding.   5.3. Perceived effectiveness of adaptations  As described in Section 4, we asked the teams. Which tweaked [adapted] practices did and did not prove ",beneficial ,"and effective in terms of outcomes and why? In response to this, they shared their experiences with the adapted practices and we then synthesized ","schedules and common understanding.   5.3. Perceived effectiveness of adaptations  As described in Section 4, we asked the teams. Which tweaked [adapted] practices did and did not prove beneficial and effective in terms of outcomes and why? In response to this, they shared their experiences with the adapted practices and we then synthesized ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"differences in  student schedules. Digital scrum board such as Trello, Jira, Visual Studio Team Services (VSTS) was adopted by all the teams and reported to ",benefit ,in the university context if regularly updated by all team members. The main benefit was that the team members and industry partners could access ,"differences in  student schedules. Digital scrum board such as Trello, Jira, Visual Studio Team Services (VSTS) was adopted by all the teams and reported to benefit in the university context if regularly updated by all team members. The main benefit was that the team members and industry partners could access ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"remotely at any time, still few team members reported keeping the digital board up to date cumbersome.  Using online communication for meetings did not prove ",beneficial ,at all times and email was reported as challenging for the teams (e.g. missing details). There were instances when technical issues led to ,"remotely at any time, still few team members reported keeping the digital board up to date cumbersome.  Using online communication for meetings did not prove beneficial at all times and email was reported as challenging for the teams (e.g. missing details). There were instances when technical issues led to ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"university context is acknowledged to be challenging (Kropp and Meier, 2013; Matthies et al., 2016; Lu and DeClue, 2011), it is also seen as useful due to numerous ","benefits, ","such as gaining agile experience (Schneider and Vasa, 2006), customer coordination and collaboration (Shukla and Williams, 2002), and improving job prospects (Hanks, 2007). It nurtures software development ","university context is acknowledged to be challenging (Kropp and Meier, 2013; Matthies et al., 2016; Lu and DeClue, 2011), it is also seen as useful due to numerous benefits, such as gaining agile experience (Schneider and Vasa, 2006), customer coordination and collaboration (Shukla and Williams, 2002), and improving job prospects (Hanks, 2007). It nurtures software development ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"be done in person where possible, as immediate feedback from team members can be extremely useful.  • Having one stable scrum master and others rotating can ",benefit ,"the teams and members individually.   6.2.2. Recommendations for educators  • Where resources are available, provide teams with experienced tutors or make masters students the Scrum Master ","be done in person where possible, as immediate feedback from team members can be extremely useful.  • Having one stable scrum master and others rotating can benefit the teams and members individually.   6.2.2. Recommendations for educators  • Where resources are available, provide teams with experienced tutors or make masters students the Scrum Master ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,Services (VSTS) was adopted by all the teams and reported to benefit in the university context if regularly updated by all team members. The main ,benefit ,"was that the team members and industry partners could access it remotely at any time, still few team members reported keeping the digital board ","Services (VSTS) was adopted by all the teams and reported to benefit in the university context if regularly updated by all team members. The main benefit was that the team members and industry partners could access it remotely at any time, still few team members reported keeping the digital board ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"but less frequently, daily but virtually, physically once weekly accompanied with bi/tri-weekly virtually meetings, and only daily virtual meetings. These adaptations had both ",positive ,"and negative effects, some of which are shown in Fig. 2 (and also summarized in Table 2 earlier).   6. Discussion  Applying agile practices to university contexts is ","but less frequently, daily but virtually, physically once weekly accompanied with bi/tri-weekly virtually meetings, and only daily virtual meetings. These adaptations had both positive and negative effects, some of which are shown in Fig. 2 (and also summarized in Table 2 earlier).   6. Discussion  Applying agile practices to university contexts is ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,determine the effectiveness of these adaptations as summarised in Table 2 and few elaborated below. It is evident from the results that the adaptations had both ,positive ,"and negative effects.  To address the problem of conflicting schedules and physically meeting each other every day, every team adapted daily stand-ups someway ","determine the effectiveness of these adaptations as summarised in Table 2 and few elaborated below. It is evident from the results that the adaptations had both positive and negative effects.  To address the problem of conflicting schedules and physically meeting each other every day, every team adapted daily stand-ups someway ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"individual reflection surveys and analysis of 75 student essays. We discuss the adaptations students made to fit their needs and their impact on practice, including both ",positive ,"and negative. Based on the lessons learned, recommendations are presented for educators and students interested in tailoring agile for a tertiary course. The remainder ","individual reflection surveys and analysis of 75 student essays. We discuss the adaptations students made to fit their needs and their impact on practice, including both positive and negative. Based on the lessons learned, recommendations are presented for educators and students interested in tailoring agile for a tertiary course. The remainder ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,"attrition over time (-) messy log (-) untimely reminders (-) notifications disabled Standard practices  Pair programming  Constraints  Technical, schedule  Main adaptations  Remote pair programming  Online communication  Perceived effectiveness ",Positives (+ )  (+ ) ,knowledge transfer (+ ) collaborative learning (+ ) remote pair programming worked via screen sharing (+ ) combined with code review for improved code quality (+ ) easy approach to customer  Negatives (-) (-) ,"attrition over time (-) messy log (-) untimely reminders (-) notifications disabled Standard practices  Pair programming  Constraints  Technical, schedule  Main adaptations  Remote pair programming  Online communication  Perceived effectiveness Positives (+ )  (+ ) knowledge transfer (+ ) collaborative learning (+ ) remote pair programming worked via screen sharing (+ ) combined with code review for improved code quality (+ ) easy approach to customer  Negatives (-) (-) ",2018
JSS_Adapting_agile_practices_in_university_contexts_2018_ScienceDirect_cleaned.txt,sub teams (backend/frontend) Decreased cross-functionality  Dedicated SM  Rotating SM  No SM Overseer with SM Collective product ownership  Multiple POs Condensed collaboration  Perceived effectiveness ,Positives (+ )  (+ ) 2–3 ,times a week (before lecture and PO meeting with the PO) seen as more valuable than virtual (+ ) convenient and suited team members (+ ) Slack bot ,sub teams (backend/frontend) Decreased cross-functionality  Dedicated SM  Rotating SM  No SM Overseer with SM Collective product ownership  Multiple POs Condensed collaboration  Perceived effectiveness Positives (+ )  (+ ) 2–3 times a week (before lecture and PO meeting with the PO) seen as more valuable than virtual (+ ) convenient and suited team members (+ ) Slack bot ,2018
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,II.  Each workshop introduced Scrum to freshmen and students who did not know the method or how it worked. First-year students were invited as ,"well, ","to allow the understanding of the learning process in different knowledge levels.  After an introduction to Scrum, we presented the challenge of building a ","II.  Each workshop introduced Scrum to freshmen and students who did not know the method or how it worked. First-year students were invited as well, to allow the understanding of the learning process in different knowledge levels.  After an introduction to Scrum, we presented the challenge of building a ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"such as process steps of Scrum, main roles, and artifacts. When compared to other traditional learning processes it is expected from students of this activity ",better ,"feelings and good motivations.  In Section II, the Scrum methodology is presented. Section III briefly presents some of the techniques and methods used to ","such as process steps of Scrum, main roles, and artifacts. When compared to other traditional learning processes it is expected from students of this activity better feelings and good motivations.  In Section II, the Scrum methodology is presented. Section III briefly presents some of the techniques and methods used to ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"such as watching videos, developing real projects under Scrum process, reading books, having tutorial classes, among others.  Finally, in question 13, students were asked about the ",best ,alternative to learn Scrum quickly. Students could choose only one alternative. Results show that 91.5% of students consider practical activities in academic or professional environments ,"such as watching videos, developing real projects under Scrum process, reading books, having tutorial classes, among others.  Finally, in question 13, students were asked about the best alternative to learn Scrum quickly. Students could choose only one alternative. Results show that 91.5% of students consider practical activities in academic or professional environments ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,learning needs [8]. Teaching Agile methodologies in educational institutions tends to be more effective if done in an agile environment: valuing students that fit the method ,"best, ","building their skills through real practice [8]. Scrum is an Agile Methodology which focuses on project management and allows iterative development. However, the learning process ","learning needs [8]. Teaching Agile methodologies in educational institutions tends to be more effective if done in an agile environment: valuing students that fit the method best, building their skills through real practice [8]. Scrum is an Agile Methodology which focuses on project management and allows iterative development. However, the learning process ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"very effective to learn Scrum. When analyzing other techniques, students also indicated that the practicality of activities such as the Lego blocks city is a ",good ,"alternative.  As further works we encourage the analysis of learning activities, including Lego blocks, for methodologies such as XP, FDD, Lean or Kanban Software ","very effective to learn Scrum. When analyzing other techniques, students also indicated that the practicality of activities such as the Lego blocks city is a good alternative.  As further works we encourage the analysis of learning activities, including Lego blocks, for methodologies such as XP, FDD, Lean or Kanban Software ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"games. A Scrum-based game seeks to create an interactive and collaborative environment among students. Among other developed trait, we can mention: responsibility, team work, ",good ,"design, adherence to deadlines, workspace organization, respect to the methodology stages and face-to-face communication.  B. Students Feedback  Initially, any student could participate ","games. A Scrum-based game seeks to create an interactive and collaborative environment among students. Among other developed trait, we can mention: responsibility, team work, good design, adherence to deadlines, workspace organization, respect to the methodology stages and face-to-face communication.  B. Students Feedback  Initially, any student could participate ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"steps of Scrum, main roles, and artifacts. When compared to other traditional learning processes it is expected from students of this activity better feelings and ",good ,"motivations.  In Section II, the Scrum methodology is presented. Section III briefly presents some of the techniques and methods used to teach Scrum in ","steps of Scrum, main roles, and artifacts. When compared to other traditional learning processes it is expected from students of this activity better feelings and good motivations.  In Section II, the Scrum methodology is presented. Section III briefly presents some of the techniques and methods used to teach Scrum in ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"accomplished. A creative and entertaining environment makes students feel outside an academic mental state, improving their learning process due to unusual techniques. Creative environments are ",positively ,"accepted, especially among people aged 18 to 25, because they are used to fast changing concepts like technology and electronic games. A Scrum-based game seeks ","accomplished. A creative and entertaining environment makes students feel outside an academic mental state, improving their learning process due to unusual techniques. Creative environments are positively accepted, especially among people aged 18 to 25, because they are used to fast changing concepts like technology and electronic games. A Scrum-based game seeks ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"they had known before and which ones they came to know after the workshop. Among students who had no knowledge of Scrum, the results were ",positive. ,"Unfortunately, many students indicated they knew “Development Time” because they had some experience in academic projects that used this term and related that to ","they had known before and which ones they came to know after the workshop. Among students who had no knowledge of Scrum, the results were positive. Unfortunately, many students indicated they knew “Development Time” because they had some experience in academic projects that used this term and related that to ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"Scrum sing Lego City is more effective than lectures, slides and theoretical classes. When asked in question 11 if students consider Lego City to be competitive ",advantage ,"in comparison to students who only had theoretical classes, the results have varied. Students who fully agreed were majority with about 72.3%, but students also ","Scrum sing Lego City is more effective than lectures, slides and theoretical classes. When asked in question 11 if students consider Lego City to be competitive advantage in comparison to students who only had theoretical classes, the results have varied. Students who fully agreed were majority with about 72.3%, but students also ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"became more confident as US were update in real time, allowing visualization of each activity.  Figure 8 shows the final Lego City. One of the great ",advantages ,"of these workshops is not exactly the fact students are learning new contents or a new methodology, but rather the way activities are accomplished. ","became more confident as US were update in real time, allowing visualization of each activity.  Figure 8 shows the final Lego City. One of the great advantages of these workshops is not exactly the fact students are learning new contents or a new methodology, but rather the way activities are accomplished. ",2020
JSS_Learning_Process_of_Agile_Scrum_Methodology_With_Lego_Blocks_in_Interactive_Academic_Games_Viewpoint_of_Students_2020_IEEE_cleaned.txt,"performance. The next sprint then started and this process was repeated until Effort reached zero.  After all iterations were done, each student listed the main ",advantages ,"of Scrum. In order to validate the learning process, we collected feedback using a form. The questions are presented in Table IV.  Notes that ","performance. The next sprint then started and this process was repeated until Effort reached zero.  After all iterations were done, each student listed the main advantages of Scrum. In order to validate the learning process, we collected feedback using a form. The questions are presented in Table IV.  Notes that ",2020
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"assumption of normality was verified by means of Shapiro–Wilk normality test. The assumption of homogeneity of variances was verified through Levene’s test, as ",well ,as the results of the student’s t-test. The latter shows that the p-value is less than 0.0001. The values in the scores ,"assumption of normality was verified by means of Shapiro–Wilk normality test. The assumption of homogeneity of variances was verified through Levene’s test, as well as the results of the student’s t-test. The latter shows that the p-value is less than 0.0001. The values in the scores ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"the market [9]. Scrum is an iterative and incremental approach that organizes tasks to make them manageable for small, self-organized and cross-functional teams, as ",well ,"as allowing teams to systematize software development projects, encouraging good software engineering practices by fostering teamwork cooperation [12]. The roles in Scrum are quite different ","the market [9]. Scrum is an iterative and incremental approach that organizes tasks to make them manageable for small, self-organized and cross-functional teams, as well as allowing teams to systematize software development projects, encouraging good software engineering practices by fostering teamwork cooperation [12]. The roles in Scrum are quite different ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,implementing a Scrum-based training model enhanced with agile coaching. The promising results showed that the training model helped students to upgrade their technical as ,well ,as non-technical skills. Most students commented that the proposed strategy allowed them to enhance Scrum comprehension. The survey indicated that the course offered ,implementing a Scrum-based training model enhanced with agile coaching. The promising results showed that the training model helped students to upgrade their technical as well as non-technical skills. Most students commented that the proposed strategy allowed them to enhance Scrum comprehension. The survey indicated that the course offered ,2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,gain with scales that address about six categories of answers.  B. Survey Our survey consists of 22 questions (Q) as follows. User Stories failed to be ,well ,"clarified at the time of Product Backlog building (Q1). Product Backlog evolution was always clear, traceable and visible (Q2). Planning Poker of smaller user ","gain with scales that address about six categories of answers.  B. Survey Our survey consists of 22 questions (Q) as follows. User Stories failed to be well clarified at the time of Product Backlog building (Q1). Product Backlog evolution was always clear, traceable and visible (Q2). Planning Poker of smaller user ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"Q1 and Q3 were formulated with a negative sense, we can state that most of the students agree with the idea that User Stories were ",well ,"clarified at the time of Product Backlog building (Q1, 27.07%) and Planning Poker of smaller user stories improve student engagement (Q3, 57.04%). In terms of Weekly ","Q1 and Q3 were formulated with a negative sense, we can state that most of the students agree with the idea that User Stories were well clarified at the time of Product Backlog building (Q1, 27.07%) and Planning Poker of smaller user stories improve student engagement (Q3, 57.04%). In terms of Weekly ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"Sprint Retrospective. In terms of Sprint Planning, we observed that, during this meeting at the beginning of each sprint, students felt that User Stories were ",well ,"clarified at the time of Product Backlog building and its refinement along the project. Besides, the use of Planning Poker in refined user stories (","Sprint Retrospective. In terms of Sprint Planning, we observed that, during this meeting at the beginning of each sprint, students felt that User Stories were well clarified at the time of Product Backlog building and its refinement along the project. Besides, the use of Planning Poker in refined user stories (",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"and complete the Product Backlog. However, it is worth noting that most of the students felt that their Scrum Master failed to play its role ",well. ,"To address this issue in the future, we plan to adjust our training model and leave the role of Scrum Master to be played ","and complete the Product Backlog. However, it is worth noting that most of the students felt that their Scrum Master failed to play its role well. To address this issue in the future, we plan to adjust our training model and leave the role of Scrum Master to be played ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"context, would be helpful in order to offer students an opportunity to practice using Scrum in a secure and controlled setting. In spite of the ",well-,"known benefits of coaching, effective agile coaching approaches have been proven difficult to be applied even within academia [24]. Agile coaching involves taking into account ","context, would be helpful in order to offer students an opportunity to practice using Scrum in a secure and controlled setting. In spite of the well-known benefits of coaching, effective agile coaching approaches have been proven difficult to be applied even within academia [24]. Agile coaching involves taking into account ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"Q3). Teamwork and communication among team members were good (Q4). As a team member, I consider that the Scrum Master did not play its role ",well (,Q5). The answers of the students in Weekly Meeting were more accurate in relation to the suggestions received previously (Q6). Weekly Meetings were crucial ,"Q3). Teamwork and communication among team members were good (Q4). As a team member, I consider that the Scrum Master did not play its role well (Q5). The answers of the students in Weekly Meeting were more accurate in relation to the suggestions received previously (Q6). Weekly Meetings were crucial ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"and communication among team members was good (Q4)”, 74.2% agree on “As a team member, I consider that the Scrum Master did not play its role ",well (,"Q5)”, and 51.61% agree on “Communication with the Product Owner was good (Q9)”. In terms of Sprint Review meeting, 32.25% agree on “Deployment planning at the ","and communication among team members was good (Q4)”, 74.2% agree on “As a team member, I consider that the Scrum Master did not play its role well (Q5)”, and 51.61% agree on “Communication with the Product Owner was good (Q9)”. In terms of Sprint Review meeting, 32.25% agree on “Deployment planning at the ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"by the industry. According to Yamaguti et al. [5], nowadays, there is a significant challenge in the teaching of Software Engineering, due to a demand for ",well-,"qualified professionals to develop software efficiently. According to Yamaguti et al., innovative approaches should be adopted to enable the integration of content through an ","by the industry. According to Yamaguti et al. [5], nowadays, there is a significant challenge in the teaching of Software Engineering, due to a demand for well-qualified professionals to develop software efficiently. According to Yamaguti et al., innovative approaches should be adopted to enable the integration of content through an ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"we used a six-point Likert scale [25]: absolutely agree (score 6), agree (score 5), agree somewhat (score 4), disagree somewhat (score 3), disagree (score 2) or disagree totally (score 1). To ",better ,"prepare the students to fill out the survey, we added some general “warming up” questions placed at the beginning of the survey, asking, for ","we used a six-point Likert scale [25]: absolutely agree (score 6), agree (score 5), agree somewhat (score 4), disagree somewhat (score 3), disagree (score 2) or disagree totally (score 1). To better prepare the students to fill out the survey, we added some general “warming up” questions placed at the beginning of the survey, asking, for ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"Also, students’ perception of Scrum for the first time was studied in [15]. One of Scrum’s advantages is that it helps students to provide a ",better ,atmosphere for teamwork and improved communication resulting in high quality products [10]. Each of the above strategies shares the fact that there are management roles ,"Also, students’ perception of Scrum for the first time was studied in [15]. One of Scrum’s advantages is that it helps students to provide a better atmosphere for teamwork and improved communication resulting in high quality products [10]. Each of the above strategies shares the fact that there are management roles ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"but consulted. Unlike other studies that have used an odd-numbered scale of agreement (e.g., [33], [34]), we decided to employ an even-numbered scale to ",better ,"capture the opinions of the students (no neutral mid-point). Additionally, each item had to be given a brief but full textual argument. We ","but consulted. Unlike other studies that have used an odd-numbered scale of agreement (e.g., [33], [34]), we decided to employ an even-numbered scale to better capture the opinions of the students (no neutral mid-point). Additionally, each item had to be given a brief but full textual argument. We ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"goal. Collected and processed data showed that the students agreed that our model helped them to reinforce team communication and communication with the Product Owner, ",better ,"comprehend the Scrum Master’s role, how to achieve Sprint goals and leverage feedback from checkpoint meetings, among other non-technical skills. Furthermore, students ","goal. Collected and processed data showed that the students agreed that our model helped them to reinforce team communication and communication with the Product Owner, better comprehend the Scrum Master’s role, how to achieve Sprint goals and leverage feedback from checkpoint meetings, among other non-technical skills. Furthermore, students ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"to accomplish the sprint. When working towards the same goal, the students gained motivation, appreciated working as they realized how they were contributing, and made ",better ,decisions and took responsibility while visualizing what they should do together with the course project. The following sub-sections describe the setup of the ,"to accomplish the sprint. When working towards the same goal, the students gained motivation, appreciated working as they realized how they were contributing, and made better decisions and took responsibility while visualizing what they should do together with the course project. The following sub-sections describe the setup of the ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,would like to clarify that each student team held daily meetings usually performed by WhatsApp3 or Slack.4 Each team decided on using the tool that ,best ,"fits it. Moreover, once a week, student teams, the Product Owner and the Agile Coach held a checkpoint meeting named Weekly Meeting.  IV. METHODOLOGY ","would like to clarify that each student team held daily meetings usually performed by WhatsApp3 or Slack.4 Each team decided on using the tool that best fits it. Moreover, once a week, student teams, the Product Owner and the Agile Coach held a checkpoint meeting named Weekly Meeting.  IV. METHODOLOGY ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"agreed (i. e., the Sprint goal definition). In terms of Sprint, the students have embraced the idea that teamwork and communication among team members was ","good, ","and the communication with the Product Owner was positive to refine and complete the Product Backlog. However, it is worth noting that most of ","agreed (i. e., the Sprint goal definition). In terms of Sprint, the students have embraced the idea that teamwork and communication among team members was good, and the communication with the Product Owner was positive to refine and complete the Product Backlog. However, it is worth noting that most of ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"always clear, traceable and visible (Q2). Planning Poker of smaller user stories did not improve student engagement (Q3). Teamwork and communication among team members were ",good (,"Q4). As a team member, I consider that the Scrum Master did not play its role well (Q5). The answers of the students in ","always clear, traceable and visible (Q2). Planning Poker of smaller user stories did not improve student engagement (Q3). Teamwork and communication among team members were good (Q4). As a team member, I consider that the Scrum Master did not play its role well (Q5). The answers of the students in ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"Meeting were more accurate concerning the suggestions received previously (Q6)”. In terms of Sprint, 61.3% of students agree on “Teamwork and communication among team members was ",good (,"Q4)”, 74.2% agree on “As a team member, I consider that the Scrum Master did not play its role well (Q5)”, and 51.61% agree on “Communication ","Meeting were more accurate concerning the suggestions received previously (Q6)”. In terms of Sprint, 61.3% of students agree on “Teamwork and communication among team members was good (Q4)”, 74.2% agree on “As a team member, I consider that the Scrum Master did not play its role well (Q5)”, and 51.61% agree on “Communication ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,and monitor the progress of the course project (Q7). Exposing metrics helped team members reflect on what happened (Q8). Communication with the Product Owner was ,good (,Q9). Sprint Review meetings did not help to receive feedback from the client and the Product Owner (Q10). Sprint retrospective meetings allowed for identifying ,and monitor the progress of the course project (Q7). Exposing metrics helped team members reflect on what happened (Q8). Communication with the Product Owner was good (Q9). Sprint Review meetings did not help to receive feedback from the client and the Product Owner (Q10). Sprint retrospective meetings allowed for identifying ,2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"a team member, I consider that the Scrum Master did not play its role well (Q5)”, and 51.61% agree on “Communication with the Product Owner was ",good (,"Q9)”. In terms of Sprint Review meeting, 32.25% agree on “Deployment planning at the end of each Sprint was acceptable (Q19)”, and finally, 67.74% agree on “","a team member, I consider that the Scrum Master did not play its role well (Q5)”, and 51.61% agree on “Communication with the Product Owner was good (Q9)”. In terms of Sprint Review meeting, 32.25% agree on “Deployment planning at the end of each Sprint was acceptable (Q19)”, and finally, 67.74% agree on “",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"organizes tasks to make them manageable for small, self-organized and cross-functional teams, as well as allowing teams to systematize software development projects, encouraging ",good ,software engineering practices by fostering teamwork cooperation [12]. The roles in Scrum are quite different from the traditional software methods. Clearly defined roles and expectations ,"organizes tasks to make them manageable for small, self-organized and cross-functional teams, as well as allowing teams to systematize software development projects, encouraging good software engineering practices by fostering teamwork cooperation [12]. The roles in Scrum are quite different from the traditional software methods. Clearly defined roles and expectations ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,be helpful in order to offer students an opportunity to practice using Scrum in a secure and controlled setting. In spite of the well-known ,benefits ,"of coaching, effective agile coaching approaches have been proven difficult to be applied even within academia [24]. Agile coaching involves taking into account important challenges ","be helpful in order to offer students an opportunity to practice using Scrum in a secure and controlled setting. In spite of the well-known benefits of coaching, effective agile coaching approaches have been proven difficult to be applied even within academia [24]. Agile coaching involves taking into account important challenges ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"in order to carry out the course project. We allowed students to make their own decision and learn from their mistakes, which is an invaluable ",benefit ,from the experience of a course project.  VI. RESULTS AND DISCUSSION The following sub-sections provide a qualitative (sub-section A) and quantitative analysis ,"in order to carry out the course project. We allowed students to make their own decision and learn from their mistakes, which is an invaluable benefit from the experience of a course project.  VI. RESULTS AND DISCUSSION The following sub-sections provide a qualitative (sub-section A) and quantitative analysis ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"added some general “warming up” questions placed at the beginning of the survey, asking, for example, what Scrum is and what kinds of situations actually ",benefit ,"from it. Then, we included several query items designed to collect the students’ opinions with respect to how our proposed model [24] can effectively help ","added some general “warming up” questions placed at the beginning of the survey, asking, for example, what Scrum is and what kinds of situations actually benefit from it. Then, we included several query items designed to collect the students’ opinions with respect to how our proposed model [24] can effectively help ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"the responsibility of the Development Team. The Scrum Master is responsible for initiating the process, assisting the Product Owner in preparing releases and assisting the ",success ,of the Development Team by eliminating impediments and making resources available. The widespread use of Scrum has shown a disparity between academic guidance and ,"the responsibility of the Development Team. The Scrum Master is responsible for initiating the process, assisting the Product Owner in preparing releases and assisting the success of the Development Team by eliminating impediments and making resources available. The widespread use of Scrum has shown a disparity between academic guidance and ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"Scrum Masters [23]. While all of the above-mentioned academic works have acknowledged that agile coaching is a significant consideration, the effect of coaching on the ",success ,of students in software development has not been adequately analyzed.  The Agile Coach is intended to help and scaffold the growth of students by ,"Scrum Masters [23]. While all of the above-mentioned academic works have acknowledged that agile coaching is a significant consideration, the effect of coaching on the success of students in software development has not been adequately analyzed.  The Agile Coach is intended to help and scaffold the growth of students by ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"As professors, we have focused on both enhancing technical software experience learning and retaining software process efficiency. We found that Scrum software development teaching is ",successful ,"when students are interested in the development of a project rather than traditional classes. In addition, solving software engineering issues in a regulated environment ","As professors, we have focused on both enhancing technical software experience learning and retaining software process efficiency. We found that Scrum software development teaching is successful when students are interested in the development of a project rather than traditional classes. In addition, solving software engineering issues in a regulated environment ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"On the basis of the research goal, the following research questions (RQ) are formulated. RQ1: Does our training model enriched with the Agile Coach role ",positively ,impact the performance of the Sprint Planning meeting? RQ2: Does our training model enriched with the Agile Coach role promote a clear understanding of ,"On the basis of the research goal, the following research questions (RQ) are formulated. RQ1: Does our training model enriched with the Agile Coach role positively impact the performance of the Sprint Planning meeting? RQ2: Does our training model enriched with the Agile Coach role promote a clear understanding of ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"plan to adjust our training model and leave the role of Scrum Master to be played by a professor [15]. In terms of Weekly Meeting, we ",positively ,"observed that the answers of the students in Weekly Meeting were more accurate concerning the suggestions received previously by the Agile Coach. Moreover, the ","plan to adjust our training model and leave the role of Scrum Master to be played by a professor [15]. In terms of Weekly Meeting, we positively observed that the answers of the students in Weekly Meeting were more accurate concerning the suggestions received previously by the Agile Coach. Moreover, the ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"Sprint Retrospective. To achieve our goal, we applied a 22-item survey to 31 undergraduate students to gather students’ opinions. Results showed that most students had a ",positive ,"opinion about team communication, the position of Scrum Master, Sprint goals definition, and guidance using meetings as a means of checkpoints.  I. INTRODUCTION COURSE ","Sprint Retrospective. To achieve our goal, we applied a 22-item survey to 31 undergraduate students to gather students’ opinions. Results showed that most students had a positive opinion about team communication, the position of Scrum Master, Sprint goals definition, and guidance using meetings as a means of checkpoints.  I. INTRODUCTION COURSE ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"Weekly Meetings since they should be crucial to follow and monitor the progress of the course project. In terms of Sprint Review, the students considered ",positively ,"the advice from the Agile Coach to plan the deployment at the end of each Sprint. Furthermore, meetings before the Sprint demo were useful ","Weekly Meetings since they should be crucial to follow and monitor the progress of the course project. In terms of Sprint Review, the students considered positively the advice from the Agile Coach to plan the deployment at the end of each Sprint. Furthermore, meetings before the Sprint demo were useful ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"of Sprint, the students have embraced the idea that teamwork and communication among team members was good, and the communication with the Product Owner was ",positive ,"to refine and complete the Product Backlog. However, it is worth noting that most of the students felt that their Scrum Master failed to ","of Sprint, the students have embraced the idea that teamwork and communication among team members was good, and the communication with the Product Owner was positive to refine and complete the Product Backlog. However, it is worth noting that most of the students felt that their Scrum Master failed to ",2021
JSS_Students_Perception_of_Scrum_in_a_Course_Project_2021_IEEE_cleaned.txt,"planning skills in Scrum-based projects is addressed in [21]. Also, students’ perception of Scrum for the first time was studied in [15]. One of Scrum’s ",advantages ,is that it helps students to provide a better atmosphere for teamwork and improved communication resulting in high quality products [10]. Each of the above ,"planning skills in Scrum-based projects is addressed in [21]. Also, students’ perception of Scrum for the first time was studied in [15]. One of Scrum’s advantages is that it helps students to provide a better atmosphere for teamwork and improved communication resulting in high quality products [10]. Each of the above ",2021
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,finish the loop body of method display (see Figure 20).  Now we need to implement the new private methods displayRow and newLine. The newLine method is ,easy ,"to do (see Figure 21).  The displayRow method involves two aspects: an iteration over the actors in the given row, and the display of each ","finish the loop body of method display (see Figure 20).  Now we need to implement the new private methods displayRow and newLine. The newLine method is easy to do (see Figure 21).  The displayRow method involves two aspects: an iteration over the actors in the given row, and the display of each ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"have become more popular, which are described as ”lightweight”— they remove some of the overhead associated with more traditional processes. However, they are still not ",easy ,to follow for new students. An even simpler process is needed.  Stepwise Improvement is a model of program development that unifies elements of Stepwise ,"have become more popular, which are described as ”lightweight”— they remove some of the overhead associated with more traditional processes. However, they are still not easy to follow for new students. An even simpler process is needed.  Stepwise Improvement is a model of program development that unifies elements of Stepwise ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,methods are included from here on.   5.7 Implementing the Methods of Date  The next step is to implement and test the methods. Some methods may be ,easy ,"to implement in one step; toString in our example falls into this category.    Other methods may require more work. In this case, partial solutions ","methods are included from here on.   5.7 Implementing the Methods of Date  The next step is to implement and test the methods. Some methods may be easy to implement in one step; toString in our example falls into this category.    Other methods may require more work. In this case, partial solutions ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"in Section 4. The most relevant observation is that every step is broken into small, manageable chunks.   Some of the steps in our technique are fairly ",easy ,"to learn (creating method stubs, defining the instance fields after deciding on a representation); others require much practice (creating tests, implementing methods).  The detailed ","in Section 4. The most relevant observation is that every step is broken into small, manageable chunks.   Some of the steps in our technique are fairly easy to learn (creating method stubs, defining the instance fields after deciding on a representation); others require much practice (creating tests, implementing methods).  The detailed ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"for students who are not entirely confident is to choose the method that, according to the Effort REM, is easiest to implement first.  It is ",easy ,"to see that this completes the implementation. If a student successfully completes this step, the class is finished.  All the magic now lies in ","for students who are not entirely confident is to choose the method that, according to the Effort REM, is easiest to implement first.  It is easy to see that this completes the implementation. If a student successfully completes this step, the class is finished.  All the magic now lies in ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"the principle in general. This principle—and the specific rules—may sound abstract or complicated when presented in this theoretical form, but they are quite ",easy ,"to understand when presented in the context of an example. In the next section, we discuss the development of a class defining objects for ","the principle in general. This principle—and the specific rules—may sound abstract or complicated when presented in this theoretical form, but they are quite easy to understand when presented in the context of an example. In the next section, we discuss the development of a class defining objects for ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"Simulator based on R2. We have seen that by carefully choosing the simpler representation overall, and repeatedly applying the Manana Principle, each method becomes reasonably ",easy ,to write and understand.   6.7 Discussion of the Development of Simulator  The discussion of the simulation example has shown the application of the Nested Loop ,"Simulator based on R2. We have seen that by carefully choosing the simpler representation overall, and repeatedly applying the Manana Principle, each method becomes reasonably easy to write and understand.   6.7 Discussion of the Development of Simulator  The discussion of the simulation example has shown the application of the Nested Loop ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"set of rules that can be applied in certain cases.  Some methods, of course, consist of only a few lines of code and may be ",easy ,to write. Our rules aim at breaking all methods down into smaller chunks until they approach the complexity of those easy-to-write methods. ,"set of rules that can be applied in certain cases.  Some methods, of course, consist of only a few lines of code and may be easy to write. Our rules aim at breaking all methods down into smaller chunks until they approach the complexity of those easy-to-write methods. ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,R1: Use unordered list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() Trivial Trivial getActor() Easy Trivial act() ,Easy ,Average display() Hard Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our stub version of Simulator (see Figure 15). ,R1: Use unordered list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() Trivial Trivial getActor() Easy Trivial act() Easy Average display() Hard Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our stub version of Simulator (see Figure 15). ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"it takes to implement each method using a particular object representation. As values, we use a small ordered set of effort qualifiers. They are Trivial, ","Easy, ","Average, Challenging, and Hard (the “TEACH scale”).  In later exercises, different REMs may be used for other criteria that are explicitly mentioned in the ","it takes to implement each method using a particular object representation. As values, we use a small ordered set of effort qualifiers. They are Trivial, Easy, Average, Challenging, and Hard (the “TEACH scale”).  In later exercises, different REMs may be used for other criteria that are explicitly mentioned in the ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,first representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  Challenging  Trivial  method2 ()  Trivial  Hard  method3 ()  ,Easy  ,"Hard   4.5 Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our implementation class.  We now define the ","first representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  Challenging  Trivial  method2 ()  Trivial  Hard  method3 ()  Easy  Hard   4.5 Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our implementation class.  We now define the ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"greatly influence our discussion at this stage.) We might assign an REM value of Trivial to R2, while R1 is slightly more work, but still ",Easy.  ,"Implementation of the simulator’s act method (invoking act on all actors) requires a simple sweep of all actors in R1. Again, we classify ","greatly influence our discussion at this stage.) We might assign an REM value of Trivial to R2, while R1 is slightly more work, but still Easy.  Implementation of the simulator’s act method (invoking act on all actors) requires a simple sweep of all actors in R1. Again, we classify ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,code and may be easy to write. Our rules aim at breaking all methods down into smaller chunks until they approach the complexity of those ,easy-,to-write methods. This is essentially a small variation of stepwise refinement [Dijkstra 1969; Wirth 1971].  Principle says:  When – during implementation of a method – you wish ,code and may be easy to write. Our rules aim at breaking all methods down into smaller chunks until they approach the complexity of those easy-to-write methods. This is essentially a small variation of stepwise refinement [Dijkstra 1969; Wirth 1971].  Principle says:  When – during implementation of a method – you wish ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,Implement Class Simulator R1: Use unordered list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() Trivial Trivial getActor() ,Easy ,Trivial act() Easy Average display() Hard Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our stub version of ,Implement Class Simulator R1: Use unordered list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() Trivial Trivial getActor() Easy Trivial act() Easy Average display() Hard Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our stub version of ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"s act method (invoking act on all actors) requires a simple sweep of all actors in R1. Again, we classify a simple iterator loop as ",Easy. ,"Using R2, this method requires a traversal of the grid, which includes a nested loop. Since this is harder than a single sweep, we ","s act method (invoking act on all actors) requires a simple sweep of all actors in R1. Again, we classify a simple iterator loop as Easy. Using R2, this method requires a traversal of the grid, which includes a nested loop. Since this is harder than a single sweep, we ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"created. (If the programming environment had specific tool support for the  Manana principle, this could be automated by the IDE.) The specific rules are initially ",easier ,"to apply, because they provide concrete  hints to times when they should be applied. They are, however, just instances of the Mañana Principle, and, ","created. (If the programming environment had specific tool support for the  Manana principle, this could be automated by the IDE.) The specific rules are initially easier to apply, because they provide concrete  hints to times when they should be applied. They are, however, just instances of the Mañana Principle, and, ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,we have explicitly separated two independent problems: the correct use of this method and the implementation of the method. Separating these problems makes each half ,easier ,"to solve.  Since our checkDayOverflow method is now complete, we might now proceed to implement checkMonthOverflow. In the general case, implementing one method may ","we have explicitly separated two independent problems: the correct use of this method and the implementation of the method. Separating these problems makes each half easier to solve.  Since our checkDayOverflow method is now complete, we might now proceed to implement checkMonthOverflow. In the general case, implementing one method may ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"discussion of the simulation example has shown the application of the Nested Loop rule. When consistently applying this rule, the code remains considerably simpler (and ",easier ,"to understand for beginners) than an alternative using a nested loop.  In this example, all the methods introduced through our rules were private methods ","discussion of the simulation example has shown the application of the Nested Loop rule. When consistently applying this rule, the code remains considerably simpler (and easier to understand for beginners) than an alternative using a nested loop.  In this example, all the methods introduced through our rules were private methods ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"is that this does not seem to be true. Many teachers now agree that the teaching of programming has recently become more difficult, rather than ","easier, ",as it should have been had maturity of the discipline been the significant factor. Instructors now look back at the days of teaching Pascal ,"is that this does not seem to be true. Many teachers now agree that the teaching of programming has recently become more difficult, rather than easier, as it should have been had maturity of the discipline been the significant factor. Instructors now look back at the days of teaching Pascal ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"remains, a very difficult task that has no quick solutions. What is especially worrying, though, is that the task of teaching programming did not become ",easier ,"over the last decades. Initially, one might have claimed that much of the difficulty could be related to the relative immaturity of our discipline: ","remains, a very difficult task that has no quick solutions. What is especially worrying, though, is that the task of teaching programming did not become easier over the last decades. Initially, one might have claimed that much of the difficulty could be related to the relative immaturity of our discipline: ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"methods is essentially arbitrary. Our recommendation for students who are not entirely confident is to choose the method that, according to the Effort REM, is ",easiest ,"to implement first.  It is easy to see that this completes the implementation. If a student successfully completes this step, the class is finished.  ","methods is essentially arbitrary. Our recommendation for students who are not entirely confident is to choose the method that, according to the Effort REM, is easiest to implement first.  It is easy to see that this completes the implementation. If a student successfully completes this step, the class is finished.  ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"Simulator  The discussion of the simulation example has shown the application of the Nested Loop rule. When consistently applying this rule, the code remains considerably ",simpler (,"and easier to understand for beginners) than an alternative using a nested loop.  In this example, all the methods introduced through our rules were ","Simulator  The discussion of the simulation example has shown the application of the Nested Loop rule. When consistently applying this rule, the code remains considerably simpler (and easier to understand for beginners) than an alternative using a nested loop.  In this example, all the methods introduced through our rules were ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,have been had maturity of the discipline been the significant factor. Instructors now look back at the days of teaching Pascal and mourn the relative ,simplicity ,"of teaching in those days.  Some attribute the increased level of difficulty to intrinsic characteristics of new paradigms used in teaching, such as object ","have been had maturity of the discipline been the significant factor. Instructors now look back at the days of teaching Pascal and mourn the relative simplicity of teaching in those days.  Some attribute the increased level of difficulty to intrinsic characteristics of new paradigms used in teaching, such as object ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"lightweight”— they remove some of the overhead associated with more traditional processes. However, they are still not easy to follow for new students. An even ",simpler ,process is needed.  Stepwise Improvement is a model of program development that unifies elements of Stepwise Refinement and agile methods. It provides a conceptual ,"lightweight”— they remove some of the overhead associated with more traditional processes. However, they are still not easy to follow for new students. An even simpler process is needed.  Stepwise Improvement is a model of program development that unifies elements of Stepwise Refinement and agile methods. It provides a conceptual ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"come up with more creative alternatives, for example, representing the month or the complete date as a string.)   5.5 Evaluation of Alternative Representations for Date  R1 ",simplifies ,"the implementation of toString whereas the implementation of setToNextDate will be more challenging, since it must deal with the special case of the last ","come up with more creative alternatives, for example, representing the month or the complete date as a string.)   5.5 Evaluation of Alternative Representations for Date  R1 simplifies the implementation of toString whereas the implementation of setToNextDate will be more challenging, since it must deal with the special case of the last ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"trivial (adding an element to the end of the list for R1, or storing an actor object at a given grid position in R2).  R2 ",simplifies ,"the programming task of getActorAt, since only a single access to the grid at a known location is required, whereas a linear search of ","trivial (adding an element to the end of the list for R1, or storing an actor object at a given grid position in R2).  R2 simplifies the programming task of getActorAt, since only a single access to the grid at a known location is required, whereas a linear search of ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"new line onscreen, named newLine (see Figure 19). Note that the Manana Principle can be used independently of method complexity: the newLine method will be very ",simple—,"we can see that already. However, following this principle still has value, leading to readable, decoupled code that lends itself to modification more easily (","new line onscreen, named newLine (see Figure 19). Note that the Manana Principle can be used independently of method complexity: the newLine method will be very simple—we can see that already. However, following this principle still has value, leading to readable, decoupled code that lends itself to modification more easily (",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,this special case the above implementation of setToNextDate fails to work properly. We have to check for this special case and handle it appropriately. For ,"simplicity, ","we temporarily assume 30 days in every month.  In the special case where day after being incremented exceeds the number of days in the month, ","this special case the above implementation of setToNextDate fails to work properly. We have to check for this special case and handle it appropriately. For simplicity, we temporarily assume 30 days in every month.  In the special case where day after being incremented exceeds the number of days in the month, ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"is an instance of the principle separation of concerns—Dijkstra’s mantra and primary instrument of thought [Dijkstra 1976, p. 211].  The add method can be implemented ",simply ,by storing the new actor at the specified location in the grid (assuming replacement of possibly existing actors is the intended behaviour). This gives ,"is an instance of the principle separation of concerns—Dijkstra’s mantra and primary instrument of thought [Dijkstra 1976, p. 211].  The add method can be implemented simply by storing the new actor at the specified location in the grid (assuming replacement of possibly existing actors is the intended behaviour). This gives ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"Refinement and agile methods. It provides a conceptual framework which can be used to derive a simple, semiformal programming process. This process, named STREAM, is ",simple ,enough to be taught to beginners. It provides clear guidance through development steps while its overhead is kept low enough to be integrated into ,"Refinement and agile methods. It provides a conceptual framework which can be used to derive a simple, semiformal programming process. This process, named STREAM, is simple enough to be taught to beginners. It provides clear guidance through development steps while its overhead is kept low enough to be integrated into ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"of setToNextDate will be more challenging, since it must deal with the special case of the last day of a month.  R2 leads to a ",simple ,"implementation of setToNextDate (a simple increment), whereas implementing toString will be hard.  The result of this analysis is the Effort REM for Date (see ","of setToNextDate will be more challenging, since it must deal with the special case of the last day of a month.  R2 leads to a simple implementation of setToNextDate (a simple increment), whereas implementing toString will be hard.  The result of this analysis is the Effort REM for Date (see ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"at all mean that we intend to encourage “quick-and-dirty” implementations, and thus are prepared to compromise implementation quality. On the contrary! Usually, a ",simpler ,"implementation (one that requires less effort to understand and implement) will include fewer bugs, and therefore be of higher quality. This focus merely intends ","at all mean that we intend to encourage “quick-and-dirty” implementations, and thus are prepared to compromise implementation quality. On the contrary! Usually, a simpler implementation (one that requires less effort to understand and implement) will include fewer bugs, and therefore be of higher quality. This focus merely intends ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,actors is the intended behaviour). This gives us the implementation for the first of our four methods (see Figure 16).  The getActorAt method has a similarly ,simple ,"implementation. All that is required is a direct access at the specified world location, and a return of that value found at that position (","actors is the intended behaviour). This gives us the implementation for the first of our four methods (see Figure 16).  The getActorAt method has a similarly simple implementation. All that is required is a direct access at the specified world location, and a return of that value found at that position (",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"challenging, since it must deal with the special case of the last day of a month.  R2 leads to a simple implementation of setToNextDate (a ",simple ,"increment), whereas implementing toString will be hard.  The result of this analysis is the Effort REM for Date (see Table II).  We choose to ","challenging, since it must deal with the special case of the last day of a month.  R2 leads to a simple implementation of setToNextDate (a simple increment), whereas implementing toString will be hard.  The result of this analysis is the Effort REM for Date (see Table II).  We choose to ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"Implementation of the simulator’s act method (invoking act on all actors) requires a simple sweep of all actors in R1. Again, we classify a ",simple ,"iterator loop as Easy. Using R2, this method requires a traversal of the grid, which includes a nested loop. Since this is harder than ","Implementation of the simulator’s act method (invoking act on all actors) requires a simple sweep of all actors in R1. Again, we classify a simple iterator loop as Easy. Using R2, this method requires a traversal of the grid, which includes a nested loop. Since this is harder than ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,the analysis phase or the finding of the classes from the problem domain. This may be achieved by using the noun/verb method or other ,simple ,"methodologies. More likely, in very early student exercises, the teacher or the textbook will provide the class structure. The name STREAM is an acronym ","the analysis phase or the finding of the classes from the problem domain. This may be achieved by using the noun/verb method or other simple methodologies. More likely, in very early student exercises, the teacher or the textbook will provide the class structure. The name STREAM is an acronym ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"in the REM. (This is a good group exercise.)  Once the Effort REM is complete, we choose the representation that is judged to have the ",simplest ,overall implementation.   Table I. Representation Evaluation Matrix (Effort) R1: a short description of the first representation alternative here R2: a short description of the ,"in the REM. (This is a good group exercise.)  Once the Effort REM is complete, we choose the representation that is judged to have the simplest overall implementation.   Table I. Representation Evaluation Matrix (Effort) R1: a short description of the first representation alternative here R2: a short description of the ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"day, month, and year) to illustrate these techniques in practice.   5. A FIRST EXAMPLE: DATE  We demonstrate the techniques discussed above in the context of a ",simple ,"programming problem: the implementation of a class representing a date.   5.1 Specification of Date  Here, we give the specification of the problem as a Java ","day, month, and year) to illustrate these techniques in practice.   5. A FIRST EXAMPLE: DATE  We demonstrate the techniques discussed above in the context of a simple programming problem: the implementation of a class representing a date.   5.1 Specification of Date  Here, we give the specification of the problem as a Java ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,proceed straight to the implementation.  This completes the development of an implementation of Simulator based on R2. We have seen that by carefully choosing the ,simpler ,"representation overall, and repeatedly applying the Manana Principle, each method becomes reasonably easy to write and understand.   6.7 Discussion of the Development of Simulator  The ","proceed straight to the implementation.  This completes the development of an implementation of Simulator based on R2. We have seen that by carefully choosing the simpler representation overall, and repeatedly applying the Manana Principle, each method becomes reasonably easy to write and understand.   6.7 Discussion of the Development of Simulator  The ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"development environment. For students in early stages of learning, however, it might help to write this class skeleton by hand. The important thing is that ",simple ,rules can be given to guide the creation of this class.   5.3 Test Cases  The next step is to ensure that appropriate test cases exist. ,"development environment. For students in early stages of learning, however, it might help to write this class skeleton by hand. The important thing is that simple rules can be given to guide the creation of this class.   5.3 Test Cases  The next step is to ensure that appropriate test cases exist. ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,model of program development that unifies elements of Stepwise Refinement and agile methods. It provides a conceptual framework which can be used to derive a ,"simple, ","semiformal programming process. This process, named STREAM, is simple enough to be taught to beginners. It provides clear guidance through development steps while its ","model of program development that unifies elements of Stepwise Refinement and agile methods. It provides a conceptual framework which can be used to derive a simple, semiformal programming process. This process, named STREAM, is simple enough to be taught to beginners. It provides clear guidance through development steps while its ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"occasional hints on what to do next” [Collins 1991, p. 24].   4. STREAM: A SYSTEMATIC PROCESS FOR NOVICES  In this section, we describe, in a general way, some ",simple ,steps that can be followed to implement classes whose intended behavior is essentially understood.  This section is kept brief and is intended as an ,"occasional hints on what to do next” [Collins 1991, p. 24].   4. STREAM: A SYSTEMATIC PROCESS FOR NOVICES  In this section, we describe, in a general way, some simple steps that can be followed to implement classes whose intended behavior is essentially understood.  This section is kept brief and is intended as an ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"to R2, while R1 is slightly more work, but still Easy.  Implementation of the simulator’s act method (invoking act on all actors) requires a ",simple ,"sweep of all actors in R1. Again, we classify a simple iterator loop as Easy. Using R2, this method requires a traversal of the ","to R2, while R1 is slightly more work, but still Easy.  Implementation of the simulator’s act method (invoking act on all actors) requires a simple sweep of all actors in R1. Again, we classify a simple iterator loop as Easy. Using R2, this method requires a traversal of the ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,and agile software development covers many aspects of software engineering [Beck 2000; Martin 2003]; two of the basic principles are: “Take small steps” and “Always do the ,simplest ,thing that will work.” We use these principles as guidelines for choosing among several possible implementations of an abstraction (a method specification or an ,and agile software development covers many aspects of software engineering [Beck 2000; Martin 2003]; two of the basic principles are: “Take small steps” and “Always do the simplest thing that will work.” We use these principles as guidelines for choosing among several possible implementations of an abstraction (a method specification or an ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"screen. To separate those two aspects, we use the Manana Principle again, and assume we have a displayActor method. The displayRow method then becomes quite ",simple ,"to write (see Figure 22).  The last thing to do is to create the displayActor method, which is shown in Figure 23. Since this is our ","screen. To separate those two aspects, we use the Manana Principle again, and assume we have a displayActor method. The displayRow method then becomes quite simple to write (see Figure 22).  The last thing to do is to create the displayActor method, which is shown in Figure 23. Since this is our ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"in the world can be specified as a coordinate pair in a grid (row, column).  For the purpose of this discussion, we examine a fairly ",simple ,"version of such a simulation. The principles discussed here are, however, generally applicable. We examine two classes that specify this application: a class Actor ","in the world can be specified as a coordinate pair in a grid (row, column).  For the purpose of this discussion, we examine a fairly simple version of such a simulation. The principles discussed here are, however, generally applicable. We examine two classes that specify this application: a class Actor ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,Class Simulator R1: Use unordered list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() Trivial Trivial getActor() Easy ,Trivial ,act() Easy Average display() Hard Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our stub version of Simulator (,Class Simulator R1: Use unordered list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() Trivial Trivial getActor() Easy Trivial act() Easy Average display() Hard Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our stub version of Simulator (,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"object itself. We will denote this representation R2.   6.4 Evaluation of Alternative Representations for Simulator  For both R1 and R2, implementation of the add method is ",trivial (,"adding an element to the end of the list for R1, or storing an actor object at a given grid position in R2).  R2 ","object itself. We will denote this representation R2.   6.4 Evaluation of Alternative Representations for Simulator  For both R1 and R2, implementation of the add method is trivial (adding an element to the end of the list for R1, or storing an actor object at a given grid position in R2).  R2 ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"effort it takes to implement each method using a particular object representation. As values, we use a small ordered set of effort qualifiers. They are ","Trivial, ","Easy, Average, Challenging, and Hard (the “TEACH scale”).  In later exercises, different REMs may be used for other criteria that are explicitly mentioned in ","effort it takes to implement each method using a particular object representation. As values, we use a small ordered set of effort qualifiers. They are Trivial, Easy, Average, Challenging, and Hard (the “TEACH scale”).  In later exercises, different REMs may be used for other criteria that are explicitly mentioned in ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,Effort to Implement Class Simulator R1: Use unordered list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() Trivial ,Trivial ,getActor() Easy Trivial act() Easy Average display() Hard Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our stub ,Effort to Implement Class Simulator R1: Use unordered list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() Trivial Trivial getActor() Easy Trivial act() Easy Average display() Hard Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our stub ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,description of the first representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  Challenging  Trivial  method2 ()  ,Trivial  ,"Hard  method3 ()  Easy  Hard   4.5 Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our implementation class.  We ","description of the first representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  Challenging  Trivial  method2 ()  Trivial  Hard  method3 ()  Easy  Hard   4.5 Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our implementation class.  We ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,a short description of the first representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  Challenging  ,Trivial  ,"method2 ()  Trivial  Hard  method3 ()  Easy  Hard   4.5 Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our implementation ","a short description of the first representation alternative here R2: a short description of the second representation alternative here  IMPL.EFFORT  R1  R2  method1 ()  Challenging  Trivial  method2 ()  Trivial  Hard  method3 ()  Easy  Hard   4.5 Step 5: Attributes (Define Instance Fields)  When we have settled on one particular representation, we can refine our implementation ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"However, our concern here is exclusively implementation difficulty; efficiency should not greatly influence our discussion at this stage.) We might assign an REM value of ",Trivial ,"to R2, while R1 is slightly more work, but still Easy.  Implementation of the simulator’s act method (invoking act on all actors) requires ","However, our concern here is exclusively implementation difficulty; efficiency should not greatly influence our discussion at this stage.) We might assign an REM value of Trivial to R2, while R1 is slightly more work, but still Easy.  Implementation of the simulator’s act method (invoking act on all actors) requires ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,Required Effort to Implement Class Simulator R1: Use unordered list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() ,Trivial ,Trivial getActor() Easy Trivial act() Easy Average display() Hard Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our ,Required Effort to Implement Class Simulator R1: Use unordered list to store actors R2: Use 2-dimensional array to hold actors IMPL. EFFORT R1 R2 add() Trivial Trivial getActor() Easy Trivial act() Easy Average display() Hard Average  6.5 Attributes  We are now ready to add the instance fields and constructor to our ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,possible implementations of an abstraction (a method specification or an interface) and for the process of implementing it. They are wise guidelines for novices as ,well ,as experts. Extreme programming typically manifests itself in the classroom as pair programming [Williams and Kessler 2001; Bergin et al. 2004; Hanks 2008]. Agile software development in ,possible implementations of an abstraction (a method specification or an interface) and for the process of implementing it. They are wise guidelines for novices as well as experts. Extreme programming typically manifests itself in the classroom as pair programming [Williams and Kessler 2001; Bergin et al. 2004; Hanks 2008]. Agile software development in ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"development is gaining increased recognition, and it is beneficial to apply this strategy with novices for several reasons (e.g., force a consumer view as ",well ,as producer view of program components). But it is not necessary to adopt test-driven development in order to apply our process; instead test ,"development is gaining increased recognition, and it is beneficial to apply this strategy with novices for several reasons (e.g., force a consumer view as well as producer view of program components). But it is not necessary to adopt test-driven development in order to apply our process; instead test ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"Growing Islands of Functionality and the notion of Stepwise Improvement are inspired by a qualitative study of the programming practice of experts [Caspersen 2007, p. 81-85] as ",well ,"as recent developments in bestpractice in modern software development.  Computing is a vocational discipline, which means that a large group of professionals are developing ","Growing Islands of Functionality and the notion of Stepwise Improvement are inspired by a qualitative study of the programming practice of experts [Caspersen 2007, p. 81-85] as well as recent developments in bestpractice in modern software development.  Computing is a vocational discipline, which means that a large group of professionals are developing ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"of detail reaches that of an available machine for execution (see Figure 1).  This idea, while compelling at a theoretical level, does not usually work very ",well ,"in practice for nontrivial systems [Caspersen 2007, p. 90-91]. Experience over time has shown that it presents a useful way to reason about the structure of ","of detail reaches that of an available machine for execution (see Figure 1).  This idea, while compelling at a theoretical level, does not usually work very well in practice for nontrivial systems [Caspersen 2007, p. 90-91]. Experience over time has shown that it presents a useful way to reason about the structure of ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"practice in modern software development such as test-driven development and refactoring with the prevailing perspective of programming methodology, stepwise refinement. The conceptual framework enables ",well-,"defined characterizations of incremental program development.  We utilize the conceptual framework to derive a programming process, STREAM, designed specifically for novices. STREAM is a ","practice in modern software development such as test-driven development and refactoring with the prevailing perspective of programming methodology, stepwise refinement. The conceptual framework enables well-defined characterizations of incremental program development.  We utilize the conceptual framework to derive a programming process, STREAM, designed specifically for novices. STREAM is a ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"behavior mirrors expert behavior [Caspersen 2007, Section 6.3.2].  We refrain from drawing overly strong conclusions from this experiment, since it was not a strictly formal study with ",well-,"defined research questions. However, the observations are encouraging and suggest that students under the right conditions can learn the process we teach—at least ","behavior mirrors expert behavior [Caspersen 2007, Section 6.3.2].  We refrain from drawing overly strong conclusions from this experiment, since it was not a strictly formal study with well-defined research questions. However, the observations are encouraging and suggest that students under the right conditions can learn the process we teach—at least ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,a development process has become increasingly important. This is often not clearly reflected in the academic content of introductory courses.  While software development processes are ,well ,"established among professional programmers, very little is done to address process in introductory programming courses. Most textbooks, and with it most courses, focus on ","a development process has become increasingly important. This is often not clearly reflected in the academic content of introductory courses.  While software development processes are well established among professional programmers, very little is done to address process in introductory programming courses. Most textbooks, and with it most courses, focus on ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,Rules  Implementing a method is potentially a large and nontrivial task. We aim to provide a process that breaks this task into smaller steps as ,well. ,"This time we cannot give a single recipe since details of the method may vary widely. Instead, we give a set of rules that ","Rules  Implementing a method is potentially a large and nontrivial task. We aim to provide a process that breaks this task into smaller steps as well. This time we cannot give a single recipe since details of the method may vary widely. Instead, we give a set of rules that ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,process particularly suited for novices learning object-oriented programming. In using it we hope to achieve two things: to help novice programmers learn faster and ,better ,"while at the same time laying the foundation for a more thorough treatment of more advanced aspects of software engineering. In this article, two ","process particularly suited for novices learning object-oriented programming. In using it we hope to achieve two things: to help novice programmers learn faster and better while at the same time laying the foundation for a more thorough treatment of more advanced aspects of software engineering. In this article, two ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,version of a full and rich software engineering process. By using it we hope to achieve two things: To help novice programmers learn faster and ,better ,while at the same time laying the foundation for a more thorough treatment of the various aspects of a software engineering process.  We have ,version of a full and rich software engineering process. By using it we hope to achieve two things: To help novice programmers learn faster and better while at the same time laying the foundation for a more thorough treatment of the various aspects of a software engineering process.  We have ,2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"can and who discover their own implicit process.  Some of the first group, those students we lose, might have been saved had we given them ",better ,"techniques to address this problem.  Students in the second group can also greatly benefit from a systematic process, since the techniques they discover and ","can and who discover their own implicit process.  Some of the first group, those students we lose, might have been saved had we given them better techniques to address this problem.  Students in the second group can also greatly benefit from a systematic process, since the techniques they discover and ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"issue of teaching the skills needed for systematic development of programs.  We provide a conceptual framework for incremental program development, called Stepwise Improvement, which unifies ",best ,"practice in modern software development such as test-driven development and refactoring with the prevailing perspective of programming methodology, stepwise refinement. The conceptual framework ","issue of teaching the skills needed for systematic development of programs.  We provide a conceptual framework for incremental program development, called Stepwise Improvement, which unifies best practice in modern software development such as test-driven development and refactoring with the prevailing perspective of programming methodology, stepwise refinement. The conceptual framework ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"the representation alternatives and the REM, but gradually the students should be responsible for finding representation alternatives and filling in the REM. (This is a ",good ,"group exercise.)  Once the Effort REM is complete, we choose the representation that is judged to have the simplest overall implementation.   Table I. Representation ","the representation alternatives and the REM, but gradually the students should be responsible for finding representation alternatives and filling in the REM. (This is a good group exercise.)  Once the Effort REM is complete, we choose the representation that is judged to have the simplest overall implementation.   Table I. Representation ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"students we lose, might have been saved had we given them better techniques to address this problem.  Students in the second group can also greatly ",benefit ,"from a systematic process, since the techniques they discover and apply in an ad-hoc manner often (and unsurprisingly) lead to inadequate and badly ","students we lose, might have been saved had we given them better techniques to address this problem.  Students in the second group can also greatly benefit from a systematic process, since the techniques they discover and apply in an ad-hoc manner often (and unsurprisingly) lead to inadequate and badly ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"driven development [Beck 2003; Hunt and Thomas 2003] relates closely to Step 2 in our process:  Create tests. Test-driven development is gaining increased recognition, and it is ",beneficial ,"to apply this strategy with novices for several reasons (e.g., force a consumer view as well as producer view of program components). But ","driven development [Beck 2003; Hunt and Thomas 2003] relates closely to Step 2 in our process:  Create tests. Test-driven development is gaining increased recognition, and it is beneficial to apply this strategy with novices for several reasons (e.g., force a consumer view as well as producer view of program components). But ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"method that, according to the Effort REM, is easiest to implement first.  It is easy to see that this completes the implementation. If a student ",successfully ,"completes this step, the class is finished.  All the magic now lies in the “Implement the method” steps. This is still a large task, ","method that, according to the Effort REM, is easiest to implement first.  It is easy to see that this completes the implementation. If a student successfully completes this step, the class is finished.  All the magic now lies in the “Implement the method” steps. This is still a large task, ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"a complete implementation of Simulator, but it compiles and maybe even makes a few test cases run. For novices (and indeed for others), making small ",successful ,steps toward the goal is a rewarding and satisfying way of developing software.   6.6 Implementing the Methods of Simulator  Having decided upon a representation of ,"a complete implementation of Simulator, but it compiles and maybe even makes a few test cases run. For novices (and indeed for others), making small successful steps toward the goal is a rewarding and satisfying way of developing software.   6.6 Implementing the Methods of Simulator  Having decided upon a representation of ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"years and the results are very encouraging. We report on a small, preliminary study evaluating the learning outcome of teaching STREAM. The study indicates a ",positive ,"effect on the development of students’ process competences.     1. INTRODUCTION  Teaching beginners to program is hard. Many teachers agree that this always has been, and ","years and the results are very encouraging. We report on a small, preliminary study evaluating the learning outcome of teaching STREAM. The study indicates a positive effect on the development of students’ process competences.     1. INTRODUCTION  Teaching beginners to program is hard. Many teachers agree that this always has been, and ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"but given an unfamiliar problem, fall back on general (opportunistic) problem solving” [Winslow 1996, p. 18].  This preliminary study shows that our teaching of STREAM had a ",positive ,"effect on the development of our students’ process competences. To draw more general conclusions, further and more thorough investigations are needed.  Numerous software engineering ","but given an unfamiliar problem, fall back on general (opportunistic) problem solving” [Winslow 1996, p. 18].  This preliminary study shows that our teaching of STREAM had a positive effect on the development of our students’ process competences. To draw more general conclusions, further and more thorough investigations are needed.  Numerous software engineering ",2009
TCE_STREAM_A_First_Programming_Process_2009_ACM_cleaned.txt,"treatment of the various aspects of a software engineering process.  We have reported on a small, preliminary study indicating that teaching STREAM can have a ",positive ,effect on the development of the students’ process competences.   ,"treatment of the various aspects of a software engineering process.  We have reported on a small, preliminary study indicating that teaching STREAM can have a positive effect on the development of the students’ process competences.   ",2009
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"the students adopt the working style typical for software development in small teams. Given the typical age of undergraduate students (early 20s), this is relatively ",easy ,to achieve since the social aspect of ASD sits well with that age group.  Students’ motivation is further increased by insisting on professional and ,"the students adopt the working style typical for software development in small teams. Given the typical age of undergraduate students (early 20s), this is relatively easy to achieve since the social aspect of ASD sits well with that age group.  Students’ motivation is further increased by insisting on professional and ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"some relevant experience. Here, the focus is more on practices that lead to improvements in software quality (such as refactoring and test suits [3]) and the ",ease ,"of maintenance. Other topics such as software metrics, CMM [18], and standardization issues are sometimes taught in the context of ASD as well. Fewer labs ","some relevant experience. Here, the focus is more on practices that lead to improvements in software quality (such as refactoring and test suits [3]) and the ease of maintenance. Other topics such as software metrics, CMM [18], and standardization issues are sometimes taught in the context of ASD as well. Fewer labs ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"favored. Rather, specifics from both approaches are used together to suit the class needs.  From the well-established XP values [3], team communication, design and coding ","simplicity, ","and continuous feedback from the customer are especially emphasized. Other XP practices (such as refactoring and pair programming) are explained, but not necessarily in ","favored. Rather, specifics from both approaches are used together to suit the class needs.  From the well-established XP values [3], team communication, design and coding simplicity, and continuous feedback from the customer are especially emphasized. Other XP practices (such as refactoring and pair programming) are explained, but not necessarily in ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"issues and practices in ASD are: very short development cycles (called iterations, or “sprints”) resulting in many small, incremental software releases; continuous involvement of customers; ",simplicity ,"of design; cleanliness of code, achieved by disciplined and continuous small modifications, called refactoring; programming all code in pairs and moving developers between pairs ","issues and practices in ASD are: very short development cycles (called iterations, or “sprints”) resulting in many small, incremental software releases; continuous involvement of customers; simplicity of design; cleanliness of code, achieved by disciplined and continuous small modifications, called refactoring; programming all code in pairs and moving developers between pairs ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"III).  Iterations should be rather short. Long iterations mean less iteration. Given the typical course context (two to six classes a week, 15 weeks per semester, ",simple ,"projects), even short iterations (one to two weeks each) are often sufficient (Table I, Issue i).  Agile works with agile students. Not all students ","III).  Iterations should be rather short. Long iterations mean less iteration. Given the typical course context (two to six classes a week, 15 weeks per semester, simple projects), even short iterations (one to two weeks each) are often sufficient (Table I, Issue i).  Agile works with agile students. Not all students ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"selected open-source Java frameworks (such as Spring [15], TestNG [16], and Hibernate [17]). The idea is to walk the students through the entire process of developing a ",simple ,"Web application. Graduate courses are taken by professionals with some relevant experience. Here, the focus is more on practices that lead to improvements in ","selected open-source Java frameworks (such as Spring [15], TestNG [16], and Hibernate [17]). The idea is to walk the students through the entire process of developing a simple Web application. Graduate courses are taken by professionals with some relevant experience. Here, the focus is more on practices that lead to improvements in ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"from Table II that cautious and negative comments result mainly from difficulties the students experience in adopting ASD practices related to testing and refactoring, as ",well ,as the fact that design is not emphasized in ASD as a distinct development phase. Note also the better Quit rate values in Table ,"from Table II that cautious and negative comments result mainly from difficulties the students experience in adopting ASD practices related to testing and refactoring, as well as the fact that design is not emphasized in ASD as a distinct development phase. Note also the better Quit rate values in Table ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"limited to stimuli and indications for individual and/or team exploration of relevant problems.  Teams should be small. Teams of four to five students, as ",well ,"as some kind of fair competition between them, are well suited for labs/tutorials. Large teams are more difficult to manage, especially if the ","limited to stimuli and indications for individual and/or team exploration of relevant problems.  Teams should be small. Teams of four to five students, as well as some kind of fair competition between them, are well suited for labs/tutorials. Large teams are more difficult to manage, especially if the ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"development in a university lab. Since ASD always assumes rapid delivery  of high-quality software, alignment of development with customer needs and company goals, as ",well ,"as timely response to changing requirements, the teacher also plays the role of the customer.  In undergraduate courses, Scrum and XP are mainly used, ","development in a university lab. Since ASD always assumes rapid delivery  of high-quality software, alignment of development with customer needs and company goals, as well as timely response to changing requirements, the teacher also plays the role of the customer.  In undergraduate courses, Scrum and XP are mainly used, ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"the start of the course, the teachers interview the students to find out what specific software development technologies and practices they are used to, as ",well ,"as what specific software processes are practiced in their companies. Then, they run the course adaptively and interactively, trying to emphasize agile practices “in ","the start of the course, the teachers interview the students to find out what specific software development technologies and practices they are used to, as well as what specific software processes are practiced in their companies. Then, they run the course adaptively and interactively, trying to emphasize agile practices “in ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"of developers in industry. This is not much of a productivity gap, given the differences in experience and focus factors (see Table I header as ",well).  ,"In addition, as a part of this case study, specific course evaluations were conducted with the students enrolled. At the end of each course ","of developers in industry. This is not much of a productivity gap, given the differences in experience and focus factors (see Table I header as well).  In addition, as a part of this case study, specific course evaluations were conducted with the students enrolled. At the end of each course ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"Scrum and XP are mainly used, without either being favored. Rather, specifics from both approaches are used together to suit the class needs.  From the ",well-,"established XP values [3], team communication, design and coding simplicity, and continuous feedback from the customer are especially emphasized. Other XP practices (such as refactoring ","Scrum and XP are mainly used, without either being favored. Rather, specifics from both approaches are used together to suit the class needs.  From the well-established XP values [3], team communication, design and coding simplicity, and continuous feedback from the customer are especially emphasized. Other XP practices (such as refactoring ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"suits [3]) and the ease of maintenance. Other topics such as software metrics, CMM [18], and standardization issues are sometimes taught in the context of ASD as ",well. ,"Fewer labs are organized, and the students are supposed to work on their assignments in small teams.   IV. UNDERGRADUATE-LEVEL TEACHING  The common objective ","suits [3]) and the ease of maintenance. Other topics such as software metrics, CMM [18], and standardization issues are sometimes taught in the context of ASD as well. Fewer labs are organized, and the students are supposed to work on their assignments in small teams.   IV. UNDERGRADUATE-LEVEL TEACHING  The common objective ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,the agile way”; many teaching practices and the lessons the authors have learned and discussed here can be applied to teaching other computing disciplines as ,well.  ,"Moreover, ASD practices have much in common with similar well-proven practices in other disciplines. For example, modern architecture design studio courses are structured ","the agile way”; many teaching practices and the lessons the authors have learned and discussed here can be applied to teaching other computing disciplines as well.  Moreover, ASD practices have much in common with similar well-proven practices in other disciplines. For example, modern architecture design studio courses are structured ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"projects), even short iterations (one to two weeks each) are often sufficient (Table I, Issue i).  Agile works with agile students. Not all students are ",well ,"motivated initially, and they have different capabilities. Pairing up more agile students with less agile ones helps keep up the student project pace. This ","projects), even short iterations (one to two weeks each) are often sufficient (Table I, Issue i).  Agile works with agile students. Not all students are well motivated initially, and they have different capabilities. Pairing up more agile students with less agile ones helps keep up the student project pace. This ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"authors have learned and discussed here can be applied to teaching other computing disciplines as well.  Moreover, ASD practices have much in common with similar ",well-,"proven practices in other disciplines. For example, modern architecture design studio courses are structured by projects, problems, and inquiry [29]. They rely on the use ","authors have learned and discussed here can be applied to teaching other computing disciplines as well.  Moreover, ASD practices have much in common with similar well-proven practices in other disciplines. For example, modern architecture design studio courses are structured by projects, problems, and inquiry [29]. They rely on the use ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,requirements; 2) increase development productivity while maintaining software quality and flexibility; and 3) increase the organization’s responsiveness while decreasing development overhead [1]. ASD fits small development teams ,well. ,"Some of the key issues and practices in ASD are: very short development cycles (called iterations, or “sprints”) resulting in many small, incremental software ","requirements; 2) increase development productivity while maintaining software quality and flexibility; and 3) increase the organization’s responsiveness while decreasing development overhead [1]. ASD fits small development teams well. Some of the key issues and practices in ASD are: very short development cycles (called iterations, or “sprints”) resulting in many small, incremental software ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"some pedagogical agility in class can be helpful. For example, it was noticed that in courses covering not only ASD but other SE topics as ","well, ","students willingly accept investigating in advance a specific technology or tool to be used at a later stage. Later on, they can teach this ","some pedagogical agility in class can be helpful. For example, it was noticed that in courses covering not only ASD but other SE topics as well, students willingly accept investigating in advance a specific technology or tool to be used at a later stage. Later on, they can teach this ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"exploration of relevant problems.  Teams should be small. Teams of four to five students, as well as some kind of fair competition between them, are ",well ,"suited for labs/tutorials. Large teams are more difficult to manage, especially if the students are inexperienced. As indicated in Table II, larger teams ","exploration of relevant problems.  Teams should be small. Teams of four to five students, as well as some kind of fair competition between them, are well suited for labs/tutorials. Large teams are more difficult to manage, especially if the students are inexperienced. As indicated in Table II, larger teams ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"at two different universities for several years (University of Belgrade, Serbia, and Mediterranean University,  Montenegro) and given for one semester at a third university as ",well (,"University of Canterbury, New Zealand). About half of the course hours are dedicated to ASD. Prerequisites include Introduction to Java, Computer Networks, and Introduction ","at two different universities for several years (University of Belgrade, Serbia, and Mediterranean University,  Montenegro) and given for one semester at a third university as well (University of Canterbury, New Zealand). About half of the course hours are dedicated to ASD. Prerequisites include Introduction to Java, Computer Networks, and Introduction ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"in small teams. Given the typical age of undergraduate students (early 20s), this is relatively easy to achieve since the social aspect of ASD sits ",well ,with that age group.  Students’ motivation is further increased by insisting on professional and real-world development styles. Rotating the roles between students in ,"in small teams. Given the typical age of undergraduate students (early 20s), this is relatively easy to achieve since the social aspect of ASD sits well with that age group.  Students’ motivation is further increased by insisting on professional and real-world development styles. Rotating the roles between students in ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"complete manifestation of the “guide on the side, not a sage on the stage” principle. The lessons learned also support the fact that teachers should ",better ,prevent their students from developing the interpretation that ASD is a “silver bullet.” Questioning dogmatic claims and adapting ASD to the class’s needs ,"complete manifestation of the “guide on the side, not a sage on the stage” principle. The lessons learned also support the fact that teachers should better prevent their students from developing the interpretation that ASD is a “silver bullet.” Questioning dogmatic claims and adapting ASD to the class’s needs ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"related to testing and refactoring, as well as the fact that design is not emphasized in ASD as a distinct development phase. Note also the ",better ,"Quit rate values in Table III in the case of M.S.and Ph.D.-level courses, compared to those in B.S.-level ","related to testing and refactoring, as well as the fact that design is not emphasized in ASD as a distinct development phase. Note also the better Quit rate values in Table III in the case of M.S.and Ph.D.-level courses, compared to those in B.S.-level ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,Scrum Master in each team (see Section IV-A and [19] for more details). This role can be taken by one of the students with the ,best ,knowledge of the tools and technology used in a particular Sprint cycle (iteration).  Mentoring is not always effective. It is very ineffective and not ,Scrum Master in each team (see Section IV-A and [19] for more details). This role can be taken by one of the students with the best knowledge of the tools and technology used in a particular Sprint cycle (iteration).  Mentoring is not always effective. It is very ineffective and not ,2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"approaches, also helps in achieving the teaching/learning objectives more efficiently.  Along the same lines, since ASD is more about skill than about theory, the ",best ,"results are achieved if the teaching is given “in the agile way,” i.e., as practical tutorials/labs. Luckily, the universities where the specific ","approaches, also helps in achieving the teaching/learning objectives more efficiently.  Along the same lines, since ASD is more about skill than about theory, the best results are achieved if the teaching is given “in the agile way,” i.e., as practical tutorials/labs. Luckily, the universities where the specific ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,to take into account when calculating the team (project) velocity. Individual differences and capabilities are naturally greater in student teams than in professional ones. A ,good ,"heuristic in calculating project velocity is to assume that the number of students in each team is about 20% less than the actual number, which ","to take into account when calculating the team (project) velocity. Individual differences and capabilities are naturally greater in student teams than in professional ones. A good heuristic in calculating project velocity is to assume that the number of students in each team is about 20% less than the actual number, which ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"and is relevant to both undergraduate and graduate courses related to SE, CS, and IS. To this end, it discusses common prerequisites to be met, ",good ,"practices to enforce, and common pitfalls to avoid in order to make teaching ASD effective and beneficial for students.   III. TEACHING CASE STUDIES  The ","and is relevant to both undergraduate and graduate courses related to SE, CS, and IS. To this end, it discusses common prerequisites to be met, good practices to enforce, and common pitfalls to avoid in order to make teaching ASD effective and beneficial for students.   III. TEACHING CASE STUDIES  The ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,in the agile way.” Balancing ASD topics with occasional instances of more traditional ones during the classes and labs brings the necessary “reality check.” A ,good ,way to do this is to remind students of the CMM ladder [18] again and again.  Reference to other important topics is invaluable. Starting from ,in the agile way.” Balancing ASD topics with occasional instances of more traditional ones during the classes and labs brings the necessary “reality check.” A good way to do this is to remind students of the CMM ladder [18] again and again.  Reference to other important topics is invaluable. Starting from ,2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"end, it discusses common prerequisites to be met, good practices to enforce, and common pitfalls to avoid in order to make teaching ASD effective and ",beneficial ,for students.   III. TEACHING CASE STUDIES  The authors have many years of experience in teaching ASD to various groups of students at different universities ,"end, it discusses common prerequisites to be met, good practices to enforce, and common pitfalls to avoid in order to make teaching ASD effective and beneficial for students.   III. TEACHING CASE STUDIES  The authors have many years of experience in teaching ASD to various groups of students at different universities ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"the Drop-out rate column represent the cases where no further information on how the students have continued their education was available. Also, the Further ",success ,column does not include the many various instances of positive feedback from employers who now work with the students covered by this case study ,"the Drop-out rate column represent the cases where no further information on how the students have continued their education was available. Also, the Further success column does not include the many various instances of positive feedback from employers who now work with the students covered by this case study ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"Unified Process [23]), and software usability [24].  Students must succeed. It is up to the teacher to guide each project carried out by the students to a ",successful ,"conclusion at the end of the course. It does require a lot of involvement on the part of the teacher, but if omitted, the ","Unified Process [23]), and software usability [24].  Students must succeed. It is up to the teacher to guide each project carried out by the students to a successful conclusion at the end of the course. It does require a lot of involvement on the part of the teacher, but if omitted, the ",2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,carefully monitor the team velocity in each specific project in order to provide approximately equal conditions and working environment so that each project can develop ,successfully. ,Introducing some kind of competition between the projects can be helpful in keeping the pace up (if this is not over-emphasized). Giving the ,carefully monitor the team velocity in each specific project in order to provide approximately equal conditions and working environment so that each project can develop successfully. Introducing some kind of competition between the projects can be helpful in keeping the pace up (if this is not over-emphasized). Giving the ,2011
TOE_Teaching_Agile_Software_Development_A_Case_Study_2011_IEEE_cleaned.txt,"further information on how the students have continued their education was available. Also, the Further success column does not include the many various instances of ",positive ,feedback from employers who now work with the students covered by this case study because no precise (quantitative) evidence was maintained to this end. ,"further information on how the students have continued their education was available. Also, the Further success column does not include the many various instances of positive feedback from employers who now work with the students covered by this case study because no precise (quantitative) evidence was maintained to this end. ",2011
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,Students performed a small software development project at the University of Kaiserslautern to collect some lessons learned. One result is that although agile approaches are ,easy ,"to learn and quickly produce results, they are not the best starting point in training software development. The quality of the resulting system, at ","Students performed a small software development project at the University of Kaiserslautern to collect some lessons learned. One result is that although agile approaches are easy to learn and quickly produce results, they are not the best starting point in training software development. The quality of the resulting system, at ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"concerning functionality, the quality of the resulting system concerning maintainability and usability was not satisfactory. Thus, a general conclusion is that although agile approaches are ",easy ,"to learn and quickly produce results, they are not the best starting point in training software development for achieving high-quality software. Novice developers ","concerning functionality, the quality of the resulting system concerning maintainability and usability was not satisfactory. Thus, a general conclusion is that although agile approaches are easy to learn and quickly produce results, they are not the best starting point in training software development for achieving high-quality software. Novice developers ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,The analysis of the developed system showed that although it runs and offers most of the required functionality it is hard to use and not ,easy ,"to maintain. This is supported by the subjective experience of the participating students. They liked the way the system was developed, especially their freedom ","The analysis of the developed system showed that although it runs and offers most of the required functionality it is hard to use and not easy to maintain. This is supported by the subjective experience of the participating students. They liked the way the system was developed, especially their freedom ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"experience made during the practical course showed that agile development in form of XP is easy to teach and learn. However, it is not that ",easy ,"to successfully perform an agile development project. The quality of the resulting system, at least in our experience, heavily depends on the discipline of ","experience made during the practical course showed that agile development in form of XP is easy to teach and learn. However, it is not that easy to successfully perform an agile development project. The quality of the resulting system, at least in our experience, heavily depends on the discipline of ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,Java or databases) the project might have failed. Overall the experience made during the practical course showed that agile development in form of XP is ,easy ,"to teach and learn. However, it is not that easy to successfully perform an agile development project. The quality of the resulting system, at ","Java or databases) the project might have failed. Overall the experience made during the practical course showed that agile development in form of XP is easy to teach and learn. However, it is not that easy to successfully perform an agile development project. The quality of the resulting system, at ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"the team [13][14][15]. Therefore, detailed guidance is necessary, especially when dealing with novice developers. Although many books and web representations exist on XP, it is not ",easy ,for a developer or project manager to set-up and run an XP project. One reason for this is that a concise and precise ,"the team [13][14][15]. Therefore, detailed guidance is necessary, especially when dealing with novice developers. Although many books and web representations exist on XP, it is not easy for a developer or project manager to set-up and run an XP project. One reason for this is that a concise and precise ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"XP practices, but in the project they mainly used onsite customer, planning game, pair programming, common ownership, continuous integration, short increments, acceptance tests, programming standards, ",simple ,design and sometimes unit tests. The remainder of this paper presents experience gained during the course. Section 2 presents background material on XP and software ,"XP practices, but in the project they mainly used onsite customer, planning game, pair programming, common ownership, continuous integration, short increments, acceptance tests, programming standards, simple design and sometimes unit tests. The remainder of this paper presents experience gained during the course. Section 2 presents background material on XP and software ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"used the practice of short increments, manual (i.e., not automated) acceptance tests, were issued programming standards, which they adapted for their needs, and used ",simple ,"design in the sense that they did not include unnecessary code. For unit testing, JUnit 3.7 was used. The developer team had eight members. In ","used the practice of short increments, manual (i.e., not automated) acceptance tests, were issued programming standards, which they adapted for their needs, and used simple design in the sense that they did not include unnecessary code. For unit testing, JUnit 3.7 was used. The developer team had eight members. In ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,the voting results have been recorded as: Agreement: nine / Abstention: one / Rejection: one. This LL may explain that at the beginning the on-site customers ,simply ,"have been forgotten by the developers, since they were working in the next room and seemed not to be permanently present in person. Another ","the voting results have been recorded as: Agreement: nine / Abstention: one / Rejection: one. This LL may explain that at the beginning the on-site customers simply have been forgotten by the developers, since they were working in the next room and seemed not to be permanently present in person. Another ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"prepare a set of slides and lecture them to the students. However, XP is designed to be a practice oriented and lively approach. Thus, a '",simple' ,"lecture would miss out the important practical part. Consequently, we chose a more practice oriented (i.e., programming and problem oriented) way of teaching ","prepare a set of slides and lecture them to the students. However, XP is designed to be a practice oriented and lively approach. Thus, a 'simple' lecture would miss out the important practical part. Consequently, we chose a more practice oriented (i.e., programming and problem oriented) way of teaching ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"their LL to the entire group. Then, for each LL, the group voted if they had the same or a similar opinion, or not. This ",simple ,"method was used to clearly identify whether a LL only reflected a personal (i.e., single and subjective) opinion or captured the experience of ","their LL to the entire group. Then, for each LL, the group voted if they had the same or a similar opinion, or not. This simple method was used to clearly identify whether a LL only reflected a personal (i.e., single and subjective) opinion or captured the experience of ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"as the developers were eager to integrate new user stories. The bad usability of the system is due to several reasons. First, students were not ",well ,"trained in usability engineering. Second, developers sometimes tended to ignore or delay changes concerning comments of the customer regarding usability. This situation would be ","as the developers were eager to integrate new user stories. The bad usability of the system is due to several reasons. First, students were not well trained in usability engineering. Second, developers sometimes tended to ignore or delay changes concerning comments of the customer regarding usability. This situation would be ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"Kaiserslautern to collect some lessons learned. One result is that although agile approaches are easy to learn and quickly produce results, they are not the ",best ,"starting point in training software development. The quality of the resulting system, at least in our experience, heavily depends on the discipline of the ","Kaiserslautern to collect some lessons learned. One result is that although agile approaches are easy to learn and quickly produce results, they are not the best starting point in training software development. The quality of the resulting system, at least in our experience, heavily depends on the discipline of the ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"usability was not satisfactory. Thus, a general conclusion is that although agile approaches are easy to learn and quickly produce results, they are not the ",best ,starting point in training software development for achieving high-quality software. Novice developers need the guidance and support of more predictive approaches in order ,"usability was not satisfactory. Thus, a general conclusion is that although agile approaches are easy to learn and quickly produce results, they are not the best starting point in training software development for achieving high-quality software. Novice developers need the guidance and support of more predictive approaches in order ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"the first one, was recorded as:  LL Example 2: Name: On-site customer in a separate room Situation: During implementation Symptom: The communication was not as ",good ,"as it could have been.  Diagnosis: The on-site customers had their own, separate room.2 Reaction: No possibility to change something because of spatial ","the first one, was recorded as:  LL Example 2: Name: On-site customer in a separate room Situation: During implementation Symptom: The communication was not as good as it could have been.  Diagnosis: The on-site customers had their own, separate room.2 Reaction: No possibility to change something because of spatial ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"in providing a systematic guidance (i.e., a sound description of roles, artifacts, and activities), and thus, require disciplined and experienced developers. Are the promised ",benefits ,"of agile methods still valid if they are applied by novice (student) developers? To gain some experience, we performed a study on teaching students ","in providing a systematic guidance (i.e., a sound description of roles, artifacts, and activities), and thus, require disciplined and experienced developers. Are the promised benefits of agile methods still valid if they are applied by novice (student) developers? To gain some experience, we performed a study on teaching students ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"the principle of 'lightweight traveling' (i.e., code is immediately integrated into the overall system after creation, and then subjected to serious testing). The expected ",benefits ,"of such an approach include the rapid development of minimal systems, early creation of executable code, and low defect numbers. Despite its undoubted strengths, ","the principle of 'lightweight traveling' (i.e., code is immediately integrated into the overall system after creation, and then subjected to serious testing). The expected benefits of such an approach include the rapid development of minimal systems, early creation of executable code, and low defect numbers. Despite its undoubted strengths, ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"guidance [13]. Therefore, we believe that software engineering education should focus on traditional approaches before teaching agile development. Students who first learn about traditional development can ",benefit ,"from the experience incorporated in guidelines and rules [13] [14], and can use that knowledge in later agile projects. Currently, on the one hand, we plan ","guidance [13]. Therefore, we believe that software engineering education should focus on traditional approaches before teaching agile development. Students who first learn about traditional development can benefit from the experience incorporated in guidelines and rules [13] [14], and can use that knowledge in later agile projects. Currently, on the one hand, we plan ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"early creation of executable code, and low defect numbers. Despite its undoubted strengths, however, the XP approach has one major drawback: Lack of guidance. The ",success ,"of an XP project heavily depends on the experience and discipline of the people in the team [13][14][15]. Therefore, detailed guidance is necessary, especially when ","early creation of executable code, and low defect numbers. Despite its undoubted strengths, however, the XP approach has one major drawback: Lack of guidance. The success of an XP project heavily depends on the experience and discipline of the people in the team [13][14][15]. Therefore, detailed guidance is necessary, especially when ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"a project when, as with agile methods, there is already a lack of guidance. Our observations seem to further strengthen the hypothesis from [12] that the ",success ,"of an XP project heavily depends on the experience and discipline of the people in the team. We want to point out, that all ","a project when, as with agile methods, there is already a lack of guidance. Our observations seem to further strengthen the hypothesis from [12] that the success of an XP project heavily depends on the experience and discipline of the people in the team. We want to point out, that all ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"the one hand, students should learn about agile development and especially XP. On the other hand, the seminar should allow examining whether XP can be ",successfully ,"applied by novice developers, and the impact this has on the quality of the resulting system1. The following learning goals have been added to ","the one hand, students should learn about agile development and especially XP. On the other hand, the seminar should allow examining whether XP can be successfully applied by novice developers, and the impact this has on the quality of the resulting system1. The following learning goals have been added to ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"during the practical course showed that agile development in form of XP is easy to teach and learn. However, it is not that easy to ",successfully ,"perform an agile development project. The quality of the resulting system, at least in our experience, heavily depends on the discipline of the developers ","during the practical course showed that agile development in form of XP is easy to teach and learn. However, it is not that easy to successfully perform an agile development project. The quality of the resulting system, at least in our experience, heavily depends on the discipline of the developers ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"which is quite difficult for developers who do not have experience in software development. Thus, one major question remains: Can novice developers (e.g., students) ",successfully ,"perform an XP project? This leads also to another, although related, problem: How can we train students in using XP?  * Main parts of this ","which is quite difficult for developers who do not have experience in software development. Thus, one major question remains: Can novice developers (e.g., students) successfully perform an XP project? This leads also to another, although related, problem: How can we train students in using XP?  * Main parts of this ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"on the discipline and experience of its developers [11]. Thus, although students can easily learn the practices of XP, it might be hard for them to ",successfully ,"apply them. This paper reports on the experiences made at the University of Kaiserslautern during a seminar on software development. Students, most of them ","on the discipline and experience of its developers [11]. Thus, although students can easily learn the practices of XP, it might be hard for them to successfully apply them. This paper reports on the experiences made at the University of Kaiserslautern during a seminar on software development. Students, most of them ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"Basic Software Engineering principles (e.g., divide and conquer) are taught. To finish this part students usually need two years (split into four semesters). • Having ",successfully ,"passed the exams of the basic part, students start the main part. Therefore, they have to choose different courses out of a set of ","Basic Software Engineering principles (e.g., divide and conquer) are taught. To finish this part students usually need two years (split into four semesters). • Having successfully passed the exams of the basic part, students start the main part. Therefore, they have to choose different courses out of a set of ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"of the project. After some time, through the gained experience in the project, the developers learned to use the customer more effectively. Recommendation: Explain the ",advantage ,of the on-site customer and motivate to ask. ,"of the project. After some time, through the gained experience in the project, the developers learned to use the customer more effectively. Recommendation: Explain the advantage of the on-site customer and motivate to ask. ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"The on-site customers had their own, separate room.2 Reaction: No possibility to change something because of spatial environment. Recommendation: Explain to the developers the ",advantage ,of an on-site customer and motivate them to ask. Make sure that on-site customers and developers are located as close together as ,"The on-site customers had their own, separate room.2 Reaction: No possibility to change something because of spatial environment. Recommendation: Explain to the developers the advantage of an on-site customer and motivate them to ask. Make sure that on-site customers and developers are located as close together as ",2004
XP_Agile_Methods_in_Software_Engineering_Education_WoS_2004_cleaned.txt,"been added to the requirements given by the department of computer science: • Students should experience XP in practice and, thereby, get a feeling for the ",advantages ,"and disadvantages of agile methodologies. • Based on practical the experience, students should learn, how to formulate and document lessons learned. In addition to the '","been added to the requirements given by the department of computer science: • Students should experience XP in practice and, thereby, get a feeling for the advantages and disadvantages of agile methodologies. • Based on practical the experience, students should learn, how to formulate and document lessons learned. In addition to the '",2004
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,Balancing Hands on and Research Activities A Graduate Level Agile Software Development Course Abstract Agile software methodologies promote developing,better,software faster and have been gaining popularity in industry However agile methods are still unfamiliar in the academic world While it is important to introduce,Balancing Hands on and Research Activities A Graduate Level Agile Software Development Course Abstract Agile software methodologies promote developing better software faster and have been gaining popularity in industry However agile methods are still unfamiliar in the academic world While it is important to introduce,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,a series of projects with real customers and then propose and conduct research on topics in agile development The result of this approach has been,well,received by students and has stimulated student research interests in the area This paper describes our experiences in offering the course 1 Introduction Developers in,a series of projects with real customers and then propose and conduct research on topics in agile development The result of this approach has been well received by students and has stimulated student research interests in the area This paper describes our experiences in offering the course 1 Introduction Developers in,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,These failures can be traced to a lack of understanding of the business issues being addressed and the failure to use appropriate implementation methodologies The,solution,is not in creating better technologies but in the way in which systems are developed Agile software development is a new set of software methodologies,These failures can be traced to a lack of understanding of the business issues being addressed and the failure to use appropriate implementation methodologies The solution is not in creating better technologies but in the way in which systems are developed Agile software development is a new set of software methodologies,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,way in which systems are developed Agile software development is a new set of software methodologies lead by eXtreme Programming XP which promises to produce,better,software more quickly and more cheaply By emphasizing effective communication striving for customer satisfaction and responding to changes agile methods have shown strength in recent,way in which systems are developed Agile software development is a new set of software methodologies lead by eXtreme Programming XP which promises to produce better software more quickly and more cheaply By emphasizing effective communication striving for customer satisfaction and responding to changes agile methods have shown strength in recent,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,responding to changes agile methods have shown strength in recent years and more and more people in industry are convinced that agile methods are viable,solutions,to the software crisis that has been building over the last forty years However as with most technology related approaches many academics are behind the,responding to changes agile methods have shown strength in recent years and more and more people in industry are convinced that agile methods are viable solutions to the software crisis that has been building over the last forty years However as with most technology related approaches many academics are behind the,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,programming is the most studied and the most applied XP practice in the classroom as noted in 3 5 7 9 12 and 20 The,benefits,of pair programming are well documented in 4 and 13 Many other XP practices are also used in lower level CS classes For example students,programming is the most studied and the most applied XP practice in the classroom as noted in 3 5 7 9 12 and 20 The benefits of pair programming are well documented in 4 and 13 Many other XP practices are also used in lower level CS classes For example students,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,software engineering or senior capstone project courses Examples can be found in 6 8 11 18 19 and 21 While most found XP integration a,success,a survey 14 showed that students in a senior software engineering class opposed the idea of using XP for the course One reason cited was,software engineering or senior capstone project courses Examples can be found in 6 8 11 18 19 and 21 While most found XP integration a success a survey 14 showed that students in a senior software engineering class opposed the idea of using XP for the course One reason cited was,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,the software development field after graduation it is critical for them to learn these breakthrough agile methods before entering the job market However without a,well,designed course dedicated to agile development they are forced to learn from other sources and or by other means Furthermore since they typically stay in,the software development field after graduation it is critical for them to learn these breakthrough agile methods before entering the job market However without a well designed course dedicated to agile development they are forced to learn from other sources and or by other means Furthermore since they typically stay in,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,by exams fifty percent software projects twenty five percent a research paper and a presentation fifteen percent and class participation ten percent The course was,well,received by students though most of them had never heard of XP or agile software development prior to the course During our first iteration there,by exams fifty percent software projects twenty five percent a research paper and a presentation fifteen percent and class participation ten percent The course was well received by students though most of them had never heard of XP or agile software development prior to the course During our first iteration there,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,one total students in the MS program this was considered high for a topic course Students in the class were excited about learning new and,better,software methodologies 3 Course objective The objective of this course is to introduce various agile methods and stimulate student research interests in the area of,one total students in the MS program this was considered high for a topic course Students in the class were excited about learning new and better software methodologies 3 Course objective The objective of this course is to introduce various agile methods and stimulate student research interests in the area of,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,first provides an overview of the entire agile movement in the software industry and then focuses on teaching XP practices By focusing on a single,well,formed and better defined methodology such as XP students can develop a better understanding of how to apply agile methods to a complete software development,first provides an overview of the entire agile movement in the software industry and then focuses on teaching XP practices By focusing on a single well formed and better defined methodology such as XP students can develop a better understanding of how to apply agile methods to a complete software development,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,on and research activities One difference between graduate and undergraduate students is their research ability Further it is evident that students learn software engineering concepts,better,when provided with hands on exercises To provide a course that encompassed both hands on exercises and research we adopted a textbook 17 that was,on and research activities One difference between graduate and undergraduate students is their research ability Further it is evident that students learn software engineering concepts better when provided with hands on exercises To provide a course that encompassed both hands on exercises and research we adopted a textbook 17 that was,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,so that students could start on the small project sooner The small project required students to develop a handful of object classes to perform some,simple,tasks such as counting words and validating passwords Students worked in pairs for this project The objective of the project was to have students practice,so that students could start on the small project sooner The small project required students to develop a handful of object classes to perform some simple tasks such as counting words and validating passwords Students worked in pairs for this project The objective of the project was to have students practice,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,Real world projects with real customers While more tightly controlled projects allow each student the opportunity to practice crucial development skills we believe it is,better,for graduate students to learn agile methods using real world projects with real customers Real world projects expose students to situations and learning opportunities that,Real world projects with real customers While more tightly controlled projects allow each student the opportunity to practice crucial development skills we believe it is better for graduate students to learn agile methods using real world projects with real customers Real world projects expose students to situations and learning opportunities that,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,projects with real customers Real world projects expose students to situations and learning opportunities that cannot be replicated in tightly controlled projects There is no,better,way to practice XP or other agile methods than working with real customers on real world projects where communication is vital and changes are highly,projects with real customers Real world projects expose students to situations and learning opportunities that cannot be replicated in tightly controlled projects There is no better way to practice XP or other agile methods than working with real customers on real world projects where communication is vital and changes are highly,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,and customer satisfaction skills that many undergraduates have not yet developed Graduate students are typically more mature and more motivated to learn and therefore are,better,able to handle the demands of real world projects 5 1 The first real customer project The medium project was the first real world project,and customer satisfaction skills that many undergraduates have not yet developed Graduate students are typically more mature and more motivated to learn and therefore are better able to handle the demands of real world projects 5 1 The first real customer project The medium project was the first real world project,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,childcare service The project was time boxed at four weeks All XP practices such as pair programming test first the planning game small releases metaphor,simple,design collective ownership and coding standard were to be strictly applied The use of user stories and storyboards were also required During this project a,childcare service The project was time boxed at four weeks All XP practices such as pair programming test first the planning game small releases metaphor simple design collective ownership and coding standard were to be strictly applied The use of user stories and storyboards were also required During this project a,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,of story cards arranged in the order of priority The instructor observed the first customer meeting of each team to ensure that the meeting was,effective,and the project was understood This added to the instructors workload since the meetings were held outside of the regular class time However we believed,of story cards arranged in the order of priority The instructor observed the first customer meeting of each team to ensure that the meeting was effective and the project was understood This added to the instructors workload since the meetings were held outside of the regular class time However we believed,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,a project or even how to ask good questions to elicit user requirements Furthermore getting the whole team including the customer together was not an,easy,task At the end of the allotted four weeks the Horse Race team delivered a superb product and had an end of project lunch celebration,a project or even how to ask good questions to elicit user requirements Furthermore getting the whole team including the customer together was not an easy task At the end of the allotted four weeks the Horse Race team delivered a superb product and had an end of project lunch celebration,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,fourth week and Phase 2 became their large project providing them with an additional eight weeks for the project This project provided them with a,valuable,lesson that they would never have learned without working with real customers 5 2 Student experience on the real projects with real customers Students were,fourth week and Phase 2 became their large project providing them with an additional eight weeks for the project This project provided them with a valuable lesson that they would never have learned without working with real customers 5 2 Student experience on the real projects with real customers Students were,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,students commented that having real customers was the one thing that they did not want to see changed in this course Other comments were also,positive,such as working on problems for real clients gives us experience on real world issues and working with real clients gives us an early exposure,students commented that having real customers was the one thing that they did not want to see changed in this course Other comments were also positive such as working on problems for real clients gives us experience on real world issues and working with real clients gives us an early exposure,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,project The website consists of three main areas parent teacher and student areas The large projects went much more smoothly than the medium projects The,success,can be attributed to previous project experience better planning and the synergy among team members 6 The research project The research project also started in,project The website consists of three main areas parent teacher and student areas The large projects went much more smoothly than the medium projects The success can be attributed to previous project experience better planning and the synergy among team members 6 The research project The research project also started in,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,others were modified Ultimately seven topics were chosen through the combined efforts of the students and the instructor The final seven topics were as follows,better,ways to deal with the issues of personality traits in pair programming Automated GUI testing The effectiveness of refactoring in an XP environment Agile modeling,others were modified Ultimately seven topics were chosen through the combined efforts of the students and the instructor The final seven topics were as follows better ways to deal with the issues of personality traits in pair programming Automated GUI testing The effectiveness of refactoring in an XP environment Agile modeling,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,of students was required to turn in a research paper and to give a thirty minute presentation on the topic The research requirement was a,valuable,course component for a variety of reasons It served to expose students to rudimentary research design and techniques The presentations provided the opportunity for students,of students was required to turn in a research paper and to give a thirty minute presentation on the topic The research requirement was a valuable course component for a variety of reasons It served to expose students to rudimentary research design and techniques The presentations provided the opportunity for students,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,to practice their communication skills and to be exposed to additional advanced concepts beyond the one that they personally researched Overall the research presentations were,well,done and greatly enhanced the class 7 Student perceptions Since this was the first agile development course ever offered in our department and since the,to practice their communication skills and to be exposed to additional advanced concepts beyond the one that they personally researched Overall the research presentations were well done and greatly enhanced the class 7 Student perceptions Since this was the first agile development course ever offered in our department and since the,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,was the first agile development course ever offered in our department and since the course involved so many new pedagogical approaches the instructor monitored student,progress,closely The overall feedback from students based on an end of semester survey of the fourteen students was overwhelmingly positive All students indicated that they,was the first agile development course ever offered in our department and since the course involved so many new pedagogical approaches the instructor monitored student progress closely The overall feedback from students based on an end of semester survey of the fourteen students was overwhelmingly positive All students indicated that they,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,deal about agile development and that they would like to learn more Most of them were convinced that agile and or XP methods were viable,solutions,to today s software development However one student was skeptical about XP and stated that while I like the course my experience with XP so,deal about agile development and that they would like to learn more Most of them were convinced that agile and or XP methods were viable solutions to today s software development However one student was skeptical about XP and stated that while I like the course my experience with XP so,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,development However one student was skeptical about XP and stated that while I like the course my experience with XP so far has not been,positive,Students indicated that their favorite aspect of the course was the opportunity to work with real customers and the feature that they most disliked was,development However one student was skeptical about XP and stated that while I like the course my experience with XP so far has not been positive Students indicated that their favorite aspect of the course was the opportunity to work with real customers and the feature that they most disliked was,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,paper describes our experience in offering a graduate level agile software development course that emphasizes both hands on experience and research activities The course was,well,received by students and many of them expressed interest in learning more about agile methods Since the students all had prior background in software development,paper describes our experience in offering a graduate level agile software development course that emphasizes both hands on experience and research activities The course was well received by students and many of them expressed interest in learning more about agile methods Since the students all had prior background in software development,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,to real world projects with real customers Use of a phase in approach in which students were assigned small medium and large projects successively worked,well,in providing students with hands on experience much sooner than the more commonly used approach of a single large project assigned closer to the middle,to real world projects with real customers Use of a phase in approach in which students were assigned small medium and large projects successively worked well in providing students with hands on experience much sooner than the more commonly used approach of a single large project assigned closer to the middle,2005
ADC_Balancing_hands-on_and_research_activities_a_graduate_level_agile_software_development_course_2005_IEEE_cleaned.txt,iterations of the course we may consider reducing the number of projects Students enjoyed working on real world projects with real customers They learned many,valuable,real world lessons from working on the projects something that is generally not possible with tightly controlled classroom projects Students also liked the research requirement,iterations of the course we may consider reducing the number of projects Students enjoyed working on real world projects with real customers They learned many valuable real world lessons from working on the projects something that is generally not possible with tightly controlled classroom projects Students also liked the research requirement,2005
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,to make the students employable and productive right from the joining With outdated curriculum and slow process of revision of syllabi it is difficult to,achieve,this objective This paper discusses how one of the popular agile project management frameworks Scrum can be taught and used to teach basic concepts of,to make the students employable and productive right from the joining With outdated curriculum and slow process of revision of syllabi it is difficult to achieve this objective This paper discusses how one of the popular agile project management frameworks Scrum can be taught and used to teach basic concepts of,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,courses are not directly employable and as such lot of time and resources are wasted in re training them on the development concepts tools as,well,as methodologies On the other hand teaching institutes focus mainly on imparting theoretical skills without much emphasis on practice and in majority of the cases,courses are not directly employable and as such lot of time and resources are wasted in re training them on the development concepts tools as well as methodologies On the other hand teaching institutes focus mainly on imparting theoretical skills without much emphasis on practice and in majority of the cases,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,to implement a course project What is needed is a lightweight adaptive approach that can be tailored to the limited time and resources available as,well,as that provides enough flexibility to define various project attributes and that clearly shows the project progress facilitates team work and provides an exciting learning,to implement a course project What is needed is a lightweight adaptive approach that can be tailored to the limited time and resources available as well as that provides enough flexibility to define various project attributes and that clearly shows the project progress facilitates team work and provides an exciting learning,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,the gap of software professionals by allowing non engineering graduates to pursue software development Our MCA programme offers basic problem solving and programming courses as,well,as the other fundamental computer science courses such as DBMS Networks in the first four semesters Fifth semester has a course on SE along with,the gap of software professionals by allowing non engineering graduates to pursue software development Our MCA programme offers basic problem solving and programming courses as well as the other fundamental computer science courses such as DBMS Networks in the first four semesters Fifth semester has a course on SE along with,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,CS41 OOAD PL46 in the previous semester in which UML Java is introduced and use case based development approach 5 is taught One of the,best,practices of our MCA programme is that every CS course having a laboratory component has a mini project associated with it apart from individual lab,CS41 OOAD PL46 in the previous semester in which UML Java is introduced and use case based development approach 5 is taught One of the best practices of our MCA programme is that every CS course having a laboratory component has a mini project associated with it apart from individual lab,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,should carry out the various tasks required to implement the functionality were a grey area As a result it was difficult to monitor the project,progress,as well as to ensure that the team as a whole is involved 3 DESIGNING THE COURSE WORK This year the same practice was continued,should carry out the various tasks required to implement the functionality were a grey area As a result it was difficult to monitor the project progress as well as to ensure that the team as a whole is involved 3 DESIGNING THE COURSE WORK This year the same practice was continued,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,features to solve the problems Simultaneously in the lab pair programming was introduced and design problems were given for which they have to submit the,solutions,online through CMS tool Moodle 7 The focus of these lab sessions was on learning how to refactor the code 8 use of design patterns,features to solve the problems Simultaneously in the lab pair programming was introduced and design problems were given for which they have to submit the solutions online through CMS tool Moodle 7 The focus of these lab sessions was on learning how to refactor the code 8 use of design patterns,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,decorator proxy factory singleton 9 were learnt by the students in context Faculty approach was to give a problem For which students will provide a,solution,which would be then gradually enhanced using an appropriate design pattern They were also taught how to use Subversion 11 to manage the team development,decorator proxy factory singleton 9 were learnt by the students in context Faculty approach was to give a problem For which students will provide a solution which would be then gradually enhanced using an appropriate design pattern They were also taught how to use Subversion 11 to manage the team development,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,with priority and estimate in story points to create a Product backlog The next task was to create a project wall to monitor the project,progress,The classroom walls were used to stick project wall charts Each group was given two chart papers each and other material and they were asked,with priority and estimate in story points to create a Product backlog The next task was to create a project wall to monitor the project progress The classroom walls were used to stick project wall charts Each group was given two chart papers each and other material and they were asked,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,chart boards The first chart paper was used to define the sprint in which they were asked to draw columns for user stories planned in,progress,and done 19 for a sprint The second chart was used to draw a sprint burndown chart and to use remaining space to use for,chart boards The first chart paper was used to define the sprint in which they were asked to draw columns for user stories planned in progress and done 19 for a sprint The second chart was used to draw a sprint burndown chart and to use remaining space to use for,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,aspects such as use of DBMS etc As the teams went on implementing the user stories in the first sprint backlog various issues technical as,well,as non technical started interfering with the project implementation On the technical front the teams were asked to implement project using Eclipse as the basic,aspects such as use of DBMS etc As the teams went on implementing the user stories in the first sprint backlog various issues technical as well as non technical started interfering with the project implementation On the technical front the teams were asked to implement project using Eclipse as the basic,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,responded to the online feedback made available on course page on university moodle site It is seen that around 85 students felt that there were,improvements,in the way a project was managed due to use of Scrum 85 responded that they were provided with adequate knowledge to use Scrum However,responded to the online feedback made available on course page on university moodle site It is seen that around 85 students felt that there were improvements in the way a project was managed due to use of Scrum 85 responded that they were provided with adequate knowledge to use Scrum However,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,opinion were equally divided with 45 saying roles were properly defined while 45 were not sure of role allocation Almost 80 felt that teamwork was,improved,due to use of scrum To the question about the knowledge level of faculty about Scrum all the students felt that the faculty member has,opinion were equally divided with 45 saying roles were properly defined while 45 were not sure of role allocation Almost 80 felt that teamwork was improved due to use of scrum To the question about the knowledge level of faculty about Scrum all the students felt that the faculty member has,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,showed that using Scrum the features that were developed by the team was complete and cohesive compared to splintered development work that used to be,accomplished,by following traditional approach Although the number of user stories that could be completed were very small 2 6 but still students realized the importance,showed that using Scrum the features that were developed by the team was complete and cohesive compared to splintered development work that used to be accomplished by following traditional approach Although the number of user stories that could be completed were very small 2 6 but still students realized the importance,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,to do some last minute work before the deadline and present the same With Scrum based approach they are now clear about what they will,achieve,in a given time frame and are able to achieve better and visible progress But the major gain was rather than study project management in,to do some last minute work before the deadline and present the same With Scrum based approach they are now clear about what they will achieve in a given time frame and are able to achieve better and visible progress But the major gain was rather than study project management in,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,approach We tried to use Scrum by following the bare essential things and modifying and adopting it to suit the classroom limitations but highlighting the,best,aspects of scrum In the future more quantitative data about how effective this approach is will be collected and analyzed We wish to repeat and,approach We tried to use Scrum by following the bare essential things and modifying and adopting it to suit the classroom limitations but highlighting the best aspects of scrum In the future more quantitative data about how effective this approach is will be collected and analyzed We wish to repeat and,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,aspects of scrum In the future more quantitative data about how effective this approach is will be collected and analyzed We wish to repeat and,enhance,the experiment by spreading this exercise over two semesters instead of just one semester so that we can accommodate more sprints That will enable us,aspects of scrum In the future more quantitative data about how effective this approach is will be collected and analyzed We wish to repeat and enhance the experiment by spreading this exercise over two semesters instead of just one semester so that we can accommodate more sprints That will enable us,2012
AgileIndia_Using_Scrum_for_Software_Engineering_Class_Projects_2012_IEEE_cleaned.txt,additional Scrum techniques such as retrospectives and to manage the Scrum roles much more effectively The students who participated in this exercise are in a,better,position to appreciate and embrace agile methodologies which are increasingly adopted by the industry,additional Scrum techniques such as retrospectives and to manage the Scrum roles much more effectively The students who participated in this exercise are in a better position to appreciate and embrace agile methodologies which are increasingly adopted by the industry,2012
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,every situation good software engineers are always looking to improve the process by focusing on the weaknesses of the current process While this change was,successful,5 due to informal discussions with the students we had some concerns with the sequential nature of these courses In particular students wondered whether XP,every situation good software engineers are always looking to improve the process by focusing on the weaknesses of the current process While this change was successful 5 due to informal discussions with the students we had some concerns with the sequential nature of these courses In particular students wondered whether XP,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,did for the first release was critical to making XP work in the subsequent release In addition some of the students thought that the increased,success,they had with XP was a result of the fact that their team had functioned together in the previous semester Therefore the fact that they,did for the first release was critical to making XP work in the subsequent release In addition some of the students thought that the increased success they had with XP was a result of the fact that their team had functioned together in the previous semester Therefore the fact that they,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,a result of the fact that their team had functioned together in the previous semester Therefore the fact that they felt less stress and more,accomplishment,with XP might have been a result of their teamwork skills improving Based on these informal discussions with the students it was determined that XP,a result of the fact that their team had functioned together in the previous semester Therefore the fact that they felt less stress and more accomplishment with XP might have been a result of their teamwork skills improving Based on these informal discussions with the students it was determined that XP,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,informal discussions with the students it was determined that XP should stay but as a completely separate course 2 1 Making XP Official With the,success,of our trial courses in XP we made an official change to the software engineering curriculum The two semester sequence was divided into two separate,informal discussions with the students it was determined that XP should stay but as a completely separate course 2 1 Making XP Official With the success of our trial courses in XP we made an official change to the software engineering curriculum The two semester sequence was divided into two separate,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,in our course descriptions the previous courses had been called Software Engineering I and II even after we had introduced XP These courses have run,successfully,for three years and they are now taught by three of our faculty members A formal evaluation was done to determine how well students did,in our course descriptions the previous courses had been called Software Engineering I and II even after we had introduced XP These courses have run successfully for three years and they are now taught by three of our faculty members A formal evaluation was done to determine how well students did,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,project but by the end of the project had the same excitement level as the plan driven group Lastly while the XP code was structurally,better,the plan driven group had a much better user interface 6 3 Agile topics in our metrics management course Our software engineering concentration includes a,project but by the end of the project had the same excitement level as the plan driven group Lastly while the XP code was structurally better the plan driven group had a much better user interface 6 3 Agile topics in our metrics management course Our software engineering concentration includes a,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,for such measurement is motivated by application of the Personal Software Process Techniques for gathering and analyzing common metrics and their use in support process,improvement,Clearly this course includes some plan driven topics as it includes the Personal Software Process As part of complying with ABET requirements one fourth of,for such measurement is motivated by application of the Personal Software Process Techniques for gathering and analyzing common metrics and their use in support process improvement Clearly this course includes some plan driven topics as it includes the Personal Software Process As part of complying with ABET requirements one fourth of,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,papers is to build the students ability to read software engineering literature critically and to analyze when a particular technique may or may not be,beneficial,After we have clarified the concept of process we pursue statistical process control with rigor The techniques associated with statistical process control are based on,papers is to build the students ability to read software engineering literature critically and to analyze when a particular technique may or may not be beneficial After we have clarified the concept of process we pursue statistical process control with rigor The techniques associated with statistical process control are based on,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,necessary for these techniques to work They find it highly interesting that statistical process control which originated in the plan driven community applies so much,better,to agile processes 4 Agile in CS I and CS II Our XP course has generated a good amount of discussion among our students our,necessary for these techniques to work They find it highly interesting that statistical process control which originated in the plan driven community applies so much better to agile processes 4 Agile in CS I and CS II Our XP course has generated a good amount of discussion among our students our,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,having students switch partners between projects it forced the spread of knowledge By forcing students to take time in the pilot char it makes the,better,students become co pilots and therefore explain to the weaker students what needs to be done We believe this has improved the performance of students,having students switch partners between projects it forced the spread of knowledge By forcing students to take time in the pilot char it makes the better students become co pilots and therefore explain to the weaker students what needs to be done We believe this has improved the performance of students,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,to implement a set of methods such as int getDimes 2 The tests were developed by the course instructor There were two types of tests,value,based and introspection based The first set of tests are intuitive For the coin changing example given a value did they compute and return the,to implement a set of methods such as int getDimes 2 The tests were developed by the course instructor There were two types of tests value based and introspection based The first set of tests are intuitive For the coin changing example given a value did they compute and return the,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,and in some cases detrimental In the most extreme case one student submitted nearly identical code over one hundred times each time modifying the return,value,of getDimes by one in hopes of passing the tests By allowing students a true test first approach these mistakes can be avoided 2 4,and in some cases detrimental In the most extreme case one student submitted nearly identical code over one hundred times each time modifying the return value of getDimes by one in hopes of passing the tests By allowing students a true test first approach these mistakes can be avoided 2 4,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,one using the traditional method and one incorporating TDD using JUnit While this experiment was preliminary we see great potential for expanding on this early,success,In particular TDD adds to CS I in two ways Early in the semester it gives us the ability to have the students practice using,one using the traditional method and one incorporating TDD using JUnit While this experiment was preliminary we see great potential for expanding on this early success In particular TDD adds to CS I in two ways Early in the semester it gives us the ability to have the students practice using,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,for a project to have more than a few classes At this stage in their development the detailed design represented by JUnit tests serves them,well,To help the students more easily adopt a test driven approach in CS I two faculty have designed and built two wizards for Eclipse 2,for a project to have more than a few classes At this stage in their development the detailed design represented by JUnit tests serves them well To help the students more easily adopt a test driven approach in CS I two faculty have designed and built two wizards for Eclipse 2,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,and not worry about the implementation 2 5 The Future of Agility in our Program While the creep of agility into other courses has been,positive,our students still do not have the skills necessary to really succeed in the XP course or in an agile industry team In particular they,and not worry about the implementation 2 5 The Future of Agility in our Program While the creep of agility into other courses has been positive our students still do not have the skills necessary to really succeed in the XP course or in an agile industry team In particular they,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,not required by plan driven development Certainly one course in design patterns and refactoring is unlikely to give them the experience necessary to build truly,well,designed systems incrementally Similarly the early experiences with automated testing which are not continued throughout our program will not make them experts in TDD While,not required by plan driven development Certainly one course in design patterns and refactoring is unlikely to give them the experience necessary to build truly well designed systems incrementally Similarly the early experiences with automated testing which are not continued throughout our program will not make them experts in TDD While,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,software engineers are responsible for two things improving the process and producing high quality software We believe that our software engineering students will continue to,benefit,from seeing widely different processes for a long time Having experiences in both plan driven and agile projects gives the students a broader understanding of,software engineers are responsible for two things improving the process and producing high quality software We believe that our software engineering students will continue to benefit from seeing widely different processes for a long time Having experiences in both plan driven and agile projects gives the students a broader understanding of,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,a wide variety of our courses We have seen an increase in agile concepts in our existing courses and have created new courses designed to,better,prepare our students for agile environments We are now at a point where we consider introducing more agile content carefully as we do not think,a wide variety of our courses We have seen an increase in agile concepts in our existing courses and have created new courses designed to better prepare our students for agile environments We are now at a point where we consider introducing more agile content carefully as we do not think,2006
AGILE_The_impact_of_agility_on_a_bachelors_degree_in_computer_science_2006_WebOfScience_cleaned.txt,agile environments We are now at a point where we consider introducing more agile content carefully as we do not think our students would be,well,served by a program that was exclusively agile,agile environments We are now at a point where we consider introducing more agile content carefully as we do not think our students would be well served by a program that was exclusively agile,2006
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,methods in little more than 13 weeks Teams who struck an optimum balance of customer collaboration use of agile methods and technical programming ability had,better,productivity and website quality I SOFTWARE ENGINEERING EDUCATION The term software engineering was coined in 1968 as a result of the software crisis or demand,methods in little more than 13 weeks Teams who struck an optimum balance of customer collaboration use of agile methods and technical programming ability had better productivity and website quality I SOFTWARE ENGINEERING EDUCATION The term software engineering was coined in 1968 as a result of the software crisis or demand,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,our primary objective was to have the teams focus on the use of agile methods and customer experience with agile methods is imperative to project,success,we simply assigned teams a single customer who was already familiar with agile methods Furthermore we had the customer give a single set of user,our primary objective was to have the teams focus on the use of agile methods and customer experience with agile methods is imperative to project success we simply assigned teams a single customer who was already familiar with agile methods Furthermore we had the customer give a single set of user,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,staff maintaining a delicate balance of institutional versus individual student needs and providing written feedback on team performance at the end of all iterations as,well,as the final product All in all the visiting faculty member worked full time on adapting agile methods to UMUCs capstone course from July 2008,staff maintaining a delicate balance of institutional versus individual student needs and providing written feedback on team performance at the end of all iterations as well as the final product All in all the visiting faculty member worked full time on adapting agile methods to UMUCs capstone course from July 2008,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,tool Completed most user stories Cons Last to contact customer Initially discarded user stories Least amount of customer interaction Used fewest agile methods practices Needed,better,aesthetic website quality Pros Moderate understanding of agile methods Captured all user initial stories Suggested new user stories Used a Wiki for Release Planning Exhibited,tool Completed most user stories Cons Last to contact customer Initially discarded user stories Least amount of customer interaction Used fewest agile methods practices Needed better aesthetic website quality Pros Moderate understanding of agile methods Captured all user initial stories Suggested new user stories Used a Wiki for Release Planning Exhibited,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,Exhibited moderately good teamwork Cons Continued to use traditional practices Contacted customer very frequently Performed detailed tradeoff studies Relied on one or two programmers Needed,better,aesthetic website quality B Team Kestrel The team named Kestrel was the second to form had some exposure to agile methods and had the second,Exhibited moderately good teamwork Cons Continued to use traditional practices Contacted customer very frequently Performed detailed tradeoff studies Relied on one or two programmers Needed better aesthetic website quality B Team Kestrel The team named Kestrel was the second to form had some exposure to agile methods and had the second,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,exposure to agile methods and had the second most computer programming proficiency Team Kestrel also used Scrum as their agile method and set up a,simple,Wiki for agile project management e g tracking user stories They struggled with Scrum and seemed to reject the notion of using Release Planning instead,exposure to agile methods and had the second most computer programming proficiency Team Kestrel also used Scrum as their agile method and set up a simple Wiki for agile project management e g tracking user stories They struggled with Scrum and seemed to reject the notion of using Release Planning instead,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,using Release Planning instead of Sprint Planning as their primary agile project management framework They seemed to be having intellectual objections to mixing and matching,best,practices across the various agile methods They were also one of the last teams to contact the customer coach and mentor The customer initiated contact,using Release Planning instead of Sprint Planning as their primary agile project management framework They seemed to be having intellectual objections to mixing and matching best practices across the various agile methods They were also one of the last teams to contact the customer coach and mentor The customer initiated contact,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,and provided them with a list of user stories The coach and mentor routinely engaged them to guide them along a path to ultimate project,success,All of the teams were encouraged to contact the customer with any questions about the user stories which they did Their lead programmer developed wire,and provided them with a list of user stories The coach and mentor routinely engaged them to guide them along a path to ultimate project success All of the teams were encouraged to contact the customer with any questions about the user stories which they did Their lead programmer developed wire,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,The first two teams also used the universitys intranet for collaboration This was monitored by the coach and mentor and was used to gauge the,progress,of the first two teams to steer them around various roadblocks as sort of an invisible hand Team Kestrels first iteration was a little basic,The first two teams also used the universitys intranet for collaboration This was monitored by the coach and mentor and was used to gauge the progress of the first two teams to steer them around various roadblocks as sort of an invisible hand Team Kestrels first iteration was a little basic,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,felt burdened by the computer programming task at hand so the coach and mentor guided his team towards the use of WebEx and Skype for,successfully,implementing virtual pair programming sessions This eased the burden on the team lead the rest of the team felt more involved and they were eventually,felt burdened by the computer programming task at hand so the coach and mentor guided his team towards the use of WebEx and Skype for successfully implementing virtual pair programming sessions This eased the burden on the team lead the rest of the team felt more involved and they were eventually,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,velocity Some teams relied on the customer to specify the user stories in a lot of detail using wire frames to validate them and others,simply,did what they wanted Although the customer gave teams the latitude to express design creativity they didnt seem to want it This could have been,velocity Some teams relied on the customer to specify the user stories in a lot of detail using wire frames to validate them and others simply did what they wanted Although the customer gave teams the latitude to express design creativity they didnt seem to want it This could have been,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,could have been a by product of their prior training in traditional methods where requirements must be specified in excruciating detail The teams exhibited dramatic,improvement,after each iteration due to pointed feedback A customer who was very knowledgeable with agile methods was a critical success factor IX SUMMARY AND RECOMMENDATIONS,could have been a by product of their prior training in traditional methods where requirements must be specified in excruciating detail The teams exhibited dramatic improvement after each iteration due to pointed feedback A customer who was very knowledgeable with agile methods was a critical success factor IX SUMMARY AND RECOMMENDATIONS,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,class and went on to earn their masters degrees in software engineering from UMUC Agile methods require emphasis on both the software engineering process as,well,as the software product Teams who struck a good balance between the agile methods process and proficiency in implementing web technologies performed better overall However,class and went on to earn their masters degrees in software engineering from UMUC Agile methods require emphasis on both the software engineering process as well as the software product Teams who struck a good balance between the agile methods process and proficiency in implementing web technologies performed better overall However,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,the software product Teams who struck a good balance between the agile methods process and proficiency in implementing web technologies performed better overall However our,success,was not without its challenges We could have all benefitted from earlier coursework in agile methods and more emphasis on technical proficiency virtual collaboration coaching,the software product Teams who struck a good balance between the agile methods process and proficiency in implementing web technologies performed better overall However our success was not without its challenges We could have all benefitted from earlier coursework in agile methods and more emphasis on technical proficiency virtual collaboration coaching,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,from earlier coursework in agile methods and more emphasis on technical proficiency virtual collaboration coaching and mentoring knowledgeable customers feedback and teamwork among many other,improvements,Early coursework Training and education in agile methods should be started as early as possible Agile methods should be discussed in introductory software engineering coursework,from earlier coursework in agile methods and more emphasis on technical proficiency virtual collaboration coaching and mentoring knowledgeable customers feedback and teamwork among many other improvements Early coursework Training and education in agile methods should be started as early as possible Agile methods should be discussed in introductory software engineering coursework,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,and functional software system Although many of the teams were steeped in the traditional principles of software engineering documentation the teams with skilled programmers performed,better,Agile roles and responsibilities Emphasis should be placed on transitioning teams from traditional to agile methods roles and responsibilities Teams assume agile methods are simply,and functional software system Although many of the teams were steeped in the traditional principles of software engineering documentation the teams with skilled programmers performed better Agile roles and responsibilities Emphasis should be placed on transitioning teams from traditional to agile methods roles and responsibilities Teams assume agile methods are simply,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,technologies Established strong customer relationship Cons Team struggled with fierce individualism Required several long customer meetings Often diverged from user stories Slowest programming velocity Needed,better,aesthetic website quality Authorized licensed use limited to Te Herenga Waka Victoria University of Wellington Downloaded on March 10 2024 at 23 53 54 UTC,technologies Established strong customer relationship Cons Team struggled with fierce individualism Required several long customer meetings Often diverged from user stories Slowest programming velocity Needed better aesthetic website quality Authorized licensed use limited to Te Herenga Waka Victoria University of Wellington Downloaded on March 10 2024 at 23 53 54 UTC,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,universities non traditional programs often involve students in different time zones This presents some technical challenges Teams within the same time zone were able to,successfully,use WebEx and Skype to perform virtual pair programming to share the workload However this proved difficult with other teams Coaching and mentoring The importance,universities non traditional programs often involve students in different time zones This presents some technical challenges Teams within the same time zone were able to successfully use WebEx and Skype to perform virtual pair programming to share the workload However this proved difficult with other teams Coaching and mentoring The importance,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,to feedback Customers should be firm with their user stories requirements prioritization and acceptance criteria Coaches and mentors must be bold enough to suggest process,improvements,and make radical course corrections if necessary Teamwork The lack of teamwork in both academia and industry continues to be a problem Fierce individualism is,to feedback Customers should be firm with their user stories requirements prioritization and acceptance criteria Coaches and mentors must be bold enough to suggest process improvements and make radical course corrections if necessary Teamwork The lack of teamwork in both academia and industry continues to be a problem Fierce individualism is,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,Western culture This proved to be the case among the faculty staff and students The teams who cooperated with one another the most performed extremely,well,and the teams with the least cooperation didnt perform very well at all Buy versus build Developers should consider using commercially available web products and,Western culture This proved to be the case among the faculty staff and students The teams who cooperated with one another the most performed extremely well and the teams with the least cooperation didnt perform very well at all Buy versus build Developers should consider using commercially available web products and,2009
AGILE_Use_of_Agile_Methods_in_Software_Engineering_Education_2009_IEEE_cleaned.txt,services first Developers should not reinvent the wheel by building products from the ground up using the latest third generation computer programming languages Developers can,achieve,a higher level of productivity velocity quality and customer satisfaction if they utilize commercially available web services Aesthetic design Developers should be provided with training,services first Developers should not reinvent the wheel by building products from the ground up using the latest third generation computer programming languages Developers can achieve a higher level of productivity velocity quality and customer satisfaction if they utilize commercially available web services Aesthetic design Developers should be provided with training,2009
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,Abstract Project based courses have become popular as a way of engaging students and providing practical experiences Sharing a single project between two course provides,advantages,of permitting more focus on the subject of each class larger projects more help and expertise is available and greater opportunities for coordinated team work,Abstract Project based courses have become popular as a way of engaging students and providing practical experiences Sharing a single project between two course provides advantages of permitting more focus on the subject of each class larger projects more help and expertise is available and greater opportunities for coordinated team work,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,that useful project work is done at a pace benefiting both classes This paper describes an experience in which an Agile approach was used to,successfully,coordinate project activities among a Software Development course and a User Interaction Design course 1 Introduction Project based courses are commonly used in applied areas,that useful project work is done at a pace benefiting both classes This paper describes an experience in which an Agile approach was used to successfully coordinate project activities among a Software Development course and a User Interaction Design course 1 Introduction Project based courses are commonly used in applied areas,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,course and then implemented in the second Regardless of the merits of this approach many institutions have constraints which do not permit the two course,solution,Agile programming methods provide another possibility In this approach only minimal up front planning is required allowing project work to begin before all the course,course and then implemented in the second Regardless of the merits of this approach many institutions have constraints which do not permit the two course solution Agile programming methods provide another possibility In this approach only minimal up front planning is required allowing project work to begin before all the course,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,as the project is developed Importantly design is to continue throughout development and previous code is modified refactored to make it more straight forward and,easier,to understand and maintain This compensates for starting to code without a complete overall design Extreme Programming has become more common in Computer Science curriculum,as the project is developed Importantly design is to continue throughout development and previous code is modified refactored to make it more straight forward and easier to understand and maintain This compensates for starting to code without a complete overall design Extreme Programming has become more common in Computer Science curriculum,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,years we have been using a process based upon Extreme Programming for our project based software design and development course 11 The results have been,positive,and permit us to provide a very useful team development experience in a one semester senior graduate level course To accommodate students from different backgrounds,years we have been using a process based upon Extreme Programming for our project based software design and development course 11 The results have been positive and permit us to provide a very useful team development experience in a one semester senior graduate level course To accommodate students from different backgrounds,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,provided on development issues the main emphasis is on the design process Working on teams and with outside users is important in this class as,well,2 Course Descriptions The two courses of interest for this paper were both offered in the Spring semester 15 weeks of 2005 and taught by,provided on development issues the main emphasis is on the design process Working on teams and with outside users is important in this class as well 2 Course Descriptions The two courses of interest for this paper were both offered in the Spring semester 15 weeks of 2005 and taught by,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,user centered design principles and working on a team It aims to sensitize computer science students to user concerns and to dispel the notion that,simply,knowing how to code a GUI is all that is needed to make usable products A series of projects usually in groups of approximately 4,user centered design principles and working on a team It aims to sensitize computer science students to user concerns and to dispel the notion that simply knowing how to code a GUI is all that is needed to make usable products A series of projects usually in groups of approximately 4,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,users and experts to assist in the evaluation of other student projects External users are also brought in for usability feedback The applications are fairly,simple,but offer many opportunities for creativity In this offering the application applied captions to images and was to include a variety of automated and customizing,users and experts to assist in the evaluation of other student projects External users are also brought in for usability feedback The applications are fairly simple but offer many opportunities for creativity In this offering the application applied captions to images and was to include a variety of automated and customizing,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,switched from a more bureaucratic process to one based upon Extreme Programming The course 11 continues to evolve but the transition has gone smoothly To,better,support Extreme Programming practices and to enhance instruction and feedback the course meets 4 days a week 2 lecture sessions and 2 lab sessions An,switched from a more bureaucratic process to one based upon Extreme Programming The course 11 continues to evolve but the transition has gone smoothly To better support Extreme Programming practices and to enhance instruction and feedback the course meets 4 days a week 2 lecture sessions and 2 lab sessions An,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,development is also stressed Java Swing code needed to create View Controllers supporting graphical user interfaces GUIs is introduced after model testing and coding is,well,underway Handouts demonstrating coding including testing ideas and refactoring is often presented using simple MVC examples which parallel project work After several weeks on the,development is also stressed Java Swing code needed to create View Controllers supporting graphical user interfaces GUIs is introduced after model testing and coding is well underway Handouts demonstrating coding including testing ideas and refactoring is often presented using simple MVC examples which parallel project work After several weeks on the,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,merge to involve the entire class about 16 Students are motivated by the realization that their project has a real chance of being used to,benefit,someone elses work 3 Motivations and Concerns Sharing a common project across multiple concurrent classes would not have been attempted unless significant benefits were expected,merge to involve the entire class about 16 Students are motivated by the realization that their project has a real chance of being used to benefit someone elses work 3 Motivations and Concerns Sharing a common project across multiple concurrent classes would not have been attempted unless significant benefits were expected,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,Development SD and the User Interaction UI course I saw this as a rare opportunity to coordinate the project work of both classes to hopefully,achieve,a symbiosis of sorts in which both classes would benefit 3 1 Benefits Each class is able to focus more upon their speciality during project,Development SD and the User Interaction UI course I saw this as a rare opportunity to coordinate the project work of both classes to hopefully achieve a symbiosis of sorts in which both classes would benefit 3 1 Benefits Each class is able to focus more upon their speciality during project,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,in which both classes would benefit 3 1 Benefits Each class is able to focus more upon their speciality during project development Team interaction is,enhanced,Relationships between the different disciplines can be explored first hand Project breadth and depth can be increased Project quality can be improved Precursor to a,in which both classes would benefit 3 1 Benefits Each class is able to focus more upon their speciality during project development Team interaction is enhanced Relationships between the different disciplines can be explored first hand Project breadth and depth can be increased Project quality can be improved Precursor to a,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,experience The joint work between these 2 courses was a chance to experiment with this concept 3 2 Learning Goals and Objectives The project should,enhance,the lectures and provide practical experiences with tools techniques and team skills Broadly speaking we expect project work to provide the following experiences creatively apply,experience The joint work between these 2 courses was a chance to experiment with this concept 3 2 Learning Goals and Objectives The project should enhance the lectures and provide practical experiences with tools techniques and team skills Broadly speaking we expect project work to provide the following experiences creatively apply,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,teamwork and communications These would likely include Working with a customer to develop and complete user stories Implementing code using pair programming test driven development,simple,design and frequent refactoring Little up front design is used and design and implementation is continually applied in an iterative incremental manner Code is shared,teamwork and communications These would likely include Working with a customer to develop and complete user stories Implementing code using pair programming test driven development simple design and frequent refactoring Little up front design is used and design and implementation is continually applied in an iterative incremental manner Code is shared,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,explained as follows ImageCaptioner is to be a new application which will allow users to add caption data to images The software should make it,easy,for a casual user to add a simple caption to a photo A new image consisting of the original image plus the visible caption can,explained as follows ImageCaptioner is to be a new application which will allow users to add caption data to images The software should make it easy for a casual user to add a simple caption to a photo A new image consisting of the original image plus the visible caption can,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,allow future caption edits the original data should remain unchanged thus the caption information needs to be stored in a separate file To make it,easier,to review collections of images an image proofs view should show multiple image thumbnails with at least some caption data The automated features will be,allow future caption edits the original data should remain unchanged thus the caption information needs to be stored in a separate file To make it easier to review collections of images an image proofs view should show multiple image thumbnails with at least some caption data The automated features will be,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,management follows in the spirit of the Agile Manifesto 1 and is light and adaptive focusing on people and interactions Agile management 3 has been,successfully,used to manage real world software projects faced with uncertain and changing requirements The project was introduced in the UI course before making a commitment,management follows in the spirit of the Agile Manifesto 1 and is light and adaptive focusing on people and interactions Agile management 3 has been successfully used to manage real world software projects faced with uncertain and changing requirements The project was introduced in the UI course before making a commitment,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,the UI course worked on aspects of this project No coding was required and evaluations using their paper prototypes with classmates from other groups as,well,as outside users were sometimes conducted in class Iteration beyond the original expectations was necessary as many groups did not fulfill all the original requirements,the UI course worked on aspects of this project No coding was required and evaluations using their paper prototypes with classmates from other groups as well as outside users were sometimes conducted in class Iteration beyond the original expectations was necessary as many groups did not fulfill all the original requirements,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,had to be adjusted to reduce its scope and complexity It also became apparent that uncertainty existed regarding some behavioral aspects of the program as,well,as other details The original groups were dissolved and groups specializing on particular aspects of the emerging program were formed Completeness and Utility Navigation Appearance,had to be adjusted to reduce its scope and complexity It also became apparent that uncertainty existed regarding some behavioral aspects of the program as well as other details The original groups were dissolved and groups specializing on particular aspects of the emerging program were formed Completeness and Utility Navigation Appearance,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,project with the same basic concept description that was given to the UI course In addition they were given a list of possible stories as,well,as advice on some areas to try code spikes on A project wiki was set up to promote communication among the students The SD began,project with the same basic concept description that was given to the UI course In addition they were given a list of possible stories as well as advice on some areas to try code spikes on A project wiki was set up to promote communication among the students The SD began,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,list of stories with customer priorities Through discussions designed to simulate the planning game the SD established a reasonable amount of effort that could be,accomplished,in an iteration 3 to 4 weeks Based upon customer priorities and providing a sensible subset of features a story list for the first iteration,list of stories with customer priorities Through discussions designed to simulate the planning game the SD established a reasonable amount of effort that could be accomplished in an iteration 3 to 4 weeks Based upon customer priorities and providing a sensible subset of features a story list for the first iteration,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,3 to 4 weeks Based upon customer priorities and providing a sensible subset of features a story list for the first iteration was designated To,enhance,class communications a code review exercise was conducted Students had to explain sections of code that they had worked on A draft design was presented,3 to 4 weeks Based upon customer priorities and providing a sensible subset of features a story list for the first iteration was designated To enhance class communications a code review exercise was conducted Students had to explain sections of code that they had worked on A draft design was presented,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,iteration with some details default values error situations wording of messages etc to be assisted by the UI students Students enrolled in both classes made,valuable,contributions Executable jar files were made available on the wiki so UI students could experiment and evaluate the application 5 Discussion Conclusion An agile management,iteration with some details default values error situations wording of messages etc to be assisted by the UI students Students enrolled in both classes made valuable contributions Executable jar files were made available on the wiki so UI students could experiment and evaluate the application 5 Discussion Conclusion An agile management,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,and class project time in the UI course help the intra course communication If scheduling allows regular joint meeting times for all students seemingly would,enhance,whole group communications Strategies used here to help minimize these problems sought to actively engage students Active Learning 4 For instance by encouraging students with,and class project time in the UI course help the intra course communication If scheduling allows regular joint meeting times for all students seemingly would enhance whole group communications Strategies used here to help minimize these problems sought to actively engage students Active Learning 4 For instance by encouraging students with,2006
AGILE_Using_agile_management_to_share_course_projects_among_multiple_classes_2006_WebOfScience_cleaned.txt,of the project code can also help to spark stuck projects Sharing a project across concurrent classes using an agile management approach has provided an,enhanced,project experience for students in both classes Students can experience first hand how the various disciplines in computer science interact in a practical way This,of the project code can also help to spark stuck projects Sharing a project across concurrent classes using an agile management approach has provided an enhanced project experience for students in both classes Students can experience first hand how the various disciplines in computer science interact in a practical way This,2006
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,be critical and empathic thinkers who seek innovative methods to address real societal needs Lean Thinking is another method that creates a system to increase,efficiency,in a process In a pilot study and for a first year Introduction to Engineering Design course we have combined Design Thinking with Lean Thinking,be critical and empathic thinkers who seek innovative methods to address real societal needs Lean Thinking is another method that creates a system to increase efficiency in a process In a pilot study and for a first year Introduction to Engineering Design course we have combined Design Thinking with Lean Thinking,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,pilot study and for a first year Introduction to Engineering Design course we have combined Design Thinking with Lean Thinking to provide students with more,effective,tools necessary for any problem solving process This attempt appears to have energized the students and helped them with the understanding of the difference between,pilot study and for a first year Introduction to Engineering Design course we have combined Design Thinking with Lean Thinking to provide students with more effective tools necessary for any problem solving process This attempt appears to have energized the students and helped them with the understanding of the difference between,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,tools necessary for any problem solving process This attempt appears to have energized the students and helped them with the understanding of the difference between,value,added and wasteful activities in the design process that highlights the importance of the engineering design approach SECTION I Introduction As technology advances with exceedingly,tools necessary for any problem solving process This attempt appears to have energized the students and helped them with the understanding of the difference between value added and wasteful activities in the design process that highlights the importance of the engineering design approach SECTION I Introduction As technology advances with exceedingly,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,unrest which deepen the intricate demands faced by society These challenges call for a new generation of designers and problem solvers those who understand innovation,well,and can apply critical thinking in an insightful and nuanced way Students not only need to apply intelligence and critical thinking but also emotional intelligence,unrest which deepen the intricate demands faced by society These challenges call for a new generation of designers and problem solvers those who understand innovation well and can apply critical thinking in an insightful and nuanced way Students not only need to apply intelligence and critical thinking but also emotional intelligence,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,Lean Thinking that is originated from Toyota Production System TPS 2 Lean Thinking has the goal of optimizing any given process by first specifying the,value,of a process and then eliminating wasteful activities that absorb resources but do not contributed to the value It is based on two guiding principles,Lean Thinking that is originated from Toyota Production System TPS 2 Lean Thinking has the goal of optimizing any given process by first specifying the value of a process and then eliminating wasteful activities that absorb resources but do not contributed to the value It is based on two guiding principles,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,a process and then eliminating wasteful activities that absorb resources but do not contributed to the value It is based on two guiding principles continuous,improvement,and respect for the people involved in the process 3 The purpose of this study was to do a pilot trial to introducing both the,a process and then eliminating wasteful activities that absorb resources but do not contributed to the value It is based on two guiding principles continuous improvement and respect for the people involved in the process 3 The purpose of this study was to do a pilot trial to introducing both the,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,activities have the students practice group discussion and forming ideas that at first seem like wild ideas but later the ideas are transformed to feasible,solutions,Design Thinking brings Active Learning AL into the classrooms where students participate in identifying their learning styles how to work in groups and push boundaries,activities have the students practice group discussion and forming ideas that at first seem like wild ideas but later the ideas are transformed to feasible solutions Design Thinking brings Active Learning AL into the classrooms where students participate in identifying their learning styles how to work in groups and push boundaries,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,Thinking As a pilot trial we introduced first year students in an Introduction to Engineering Design to Lean Thinking The Lean Thinking was used to,enhance,what the students were learning about Design Thinking Design Thinking is useful in tackling problems that are illdefined or unknown by re framing the problem,Thinking As a pilot trial we introduced first year students in an Introduction to Engineering Design to Lean Thinking The Lean Thinking was used to enhance what the students were learning about Design Thinking Design Thinking is useful in tackling problems that are illdefined or unknown by re framing the problem,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,is a freshman course whose main mission is to strengthen students critical thinking and problem solving skills Students are encouraged to be innovative in proposing,solutions,or designing products that address a societal or customer demand Innovation problem solving and critical thinking are key skills for a successful engineer but they,is a freshman course whose main mission is to strengthen students critical thinking and problem solving skills Students are encouraged to be innovative in proposing solutions or designing products that address a societal or customer demand Innovation problem solving and critical thinking are key skills for a successful engineer but they,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,improve students performance in terms of being productive members of a team We developed projects and activities to introduce the goals of Lean Thinking as,well,For example students were asked to do a two second Lean project 8 The goal of the project was for the students to slightly optimize,improve students performance in terms of being productive members of a team We developed projects and activities to introduce the goals of Lean Thinking as well For example students were asked to do a two second Lean project 8 The goal of the project was for the students to slightly optimize,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,school or daily life related but in a creative and innovative way Another example of a Lean related activity is shown below One activity to,enhance,Lean Thinking Game of Puzzle This activity was a teamwork effort consisted of several turns In each turn every team does a 25 piece jigsaw,school or daily life related but in a creative and innovative way Another example of a Lean related activity is shown below One activity to enhance Lean Thinking Game of Puzzle This activity was a teamwork effort consisted of several turns In each turn every team does a 25 piece jigsaw,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,activity was not to construct a puzzle but to reduce the time of puzzle making process This was a Lean Thinking activity and although a,simple,one it taught students to look at every process as a system Processes could be optimized and systems could be improved Inefficient wasteful actions could,activity was not to construct a puzzle but to reduce the time of puzzle making process This was a Lean Thinking activity and although a simple one it taught students to look at every process as a system Processes could be optimized and systems could be improved Inefficient wasteful actions could,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,every process as a system Processes could be optimized and systems could be improved Inefficient wasteful actions could be reduced in order to increase the,value,efficiency of a system These positive outcomes were achievable if all members of a team work closely and plan a road map together This activity,every process as a system Processes could be optimized and systems could be improved Inefficient wasteful actions could be reduced in order to increase the value efficiency of a system These positive outcomes were achievable if all members of a team work closely and plan a road map together This activity,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,a system These positive outcomes were achievable if all members of a team work closely and plan a road map together This activity showed the,positive,effect of goal setting how short sprints towards the goal incorporated with continuous improvements were effective SECTION III Lean Thinking The aim of Lean Thinking,a system These positive outcomes were achievable if all members of a team work closely and plan a road map together This activity showed the positive effect of goal setting how short sprints towards the goal incorporated with continuous improvements were effective SECTION III Lean Thinking The aim of Lean Thinking,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,incorporated with continuous improvements were effective SECTION III Lean Thinking The aim of Lean Thinking is to optimize any given process by first specifying the,value,in the process and then eliminating wasteful activities that absorb resources but create no value Lean thinking defines value and waste in a process where,incorporated with continuous improvements were effective SECTION III Lean Thinking The aim of Lean Thinking is to optimize any given process by first specifying the value in the process and then eliminating wasteful activities that absorb resources but create no value Lean thinking defines value and waste in a process where,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,and knowledge Using Lean methodology in a classroom environment opened up new perspectives for the students where they became aware of the differences between a,value,added work and a wasteful action Students could utilize Lean Thinking to almost any process of their professional or personal lives e g doing an,and knowledge Using Lean methodology in a classroom environment opened up new perspectives for the students where they became aware of the differences between a value added work and a wasteful action Students could utilize Lean Thinking to almost any process of their professional or personal lives e g doing an,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,any process of their professional or personal lives e g doing an assignment project studying a course related topic managing school schedule to obtain more,efficient,results in shorter periods of time At the same time it was important for the teacher to focus on value added actions and on reducing,any process of their professional or personal lives e g doing an assignment project studying a course related topic managing school schedule to obtain more efficient results in shorter periods of time At the same time it was important for the teacher to focus on value added actions and on reducing,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,University of Iceland a small number of industrial engineering students seventeen 3rd year students who were taught Lean methodology were asked to provide feedbacks on,value,adding effective and wasteful ineffective teaching methods Students found the method they received in another classroom value adding and this was the method a subject,University of Iceland a small number of industrial engineering students seventeen 3rd year students who were taught Lean methodology were asked to provide feedbacks on value adding effective and wasteful ineffective teaching methods Students found the method they received in another classroom value adding and this was the method a subject,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,review was provided after the completion of the assignment One of the results of this study was that after learning about Lean Thinking students became,better,observers where they saw teaching methods as processes needed to be optimized if efficient outcomes were of interest In our pilot trial of exploring Lean,review was provided after the completion of the assignment One of the results of this study was that after learning about Lean Thinking students became better observers where they saw teaching methods as processes needed to be optimized if efficient outcomes were of interest In our pilot trial of exploring Lean,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,the effectiveness of utilization of the principles of Lean Thinking in their daily school or personal lives 90 of the students found the Lean Thinking,effective,55 of the students actively used those principles in their personal and professional lives A few of the students voluntarily provided additional detailed examples of,the effectiveness of utilization of the principles of Lean Thinking in their daily school or personal lives 90 of the students found the Lean Thinking effective 55 of the students actively used those principles in their personal and professional lives A few of the students voluntarily provided additional detailed examples of,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,or how they organize their school work Based on Lean thinking and Toyota Production System most existing systems seem to have 90 waste and 10,value,Therefore most process can be improved by applying the principles of Lean Thinking to eliminate wasteful activities to maximize the value SECTION IV Combination of,or how they organize their school work Based on Lean thinking and Toyota Production System most existing systems seem to have 90 waste and 10 value Therefore most process can be improved by applying the principles of Lean Thinking to eliminate wasteful activities to maximize the value SECTION IV Combination of,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,high school academic backgrounds fills a wide spectrum Teaching students useful and tangible techniques that help them with approaching a project and concluding the tasks,successfully,is not a simple mission The 5 phases of design process as illustrated in Fig 1 are useful techniques to address a need and to,high school academic backgrounds fills a wide spectrum Teaching students useful and tangible techniques that help them with approaching a project and concluding the tasks successfully is not a simple mission The 5 phases of design process as illustrated in Fig 1 are useful techniques to address a need and to,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,to design prototype and test However there seems to be a need for additional resources on how to execute each phase of the Design Thinking,successfully,A student does not find it easy to be creative thinkers or designers of original products or concepts Implementing different stages of Design Thinking may,to design prototype and test However there seems to be a need for additional resources on how to execute each phase of the Design Thinking successfully A student does not find it easy to be creative thinkers or designers of original products or concepts Implementing different stages of Design Thinking may,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,find it easy to be creative thinkers or designers of original products or concepts Implementing different stages of Design Thinking may also not be an,easy,task Lean Thinking can serve as a segue that helps students with better understanding of Design Thinking terminologies In our pilot trial students were observed,find it easy to be creative thinkers or designers of original products or concepts Implementing different stages of Design Thinking may also not be an easy task Lean Thinking can serve as a segue that helps students with better understanding of Design Thinking terminologies In our pilot trial students were observed,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,to the Lean methodology more naturally Lean Thinking encouraged critical thinking and problem solving skills like Design Thinking does but in a different and relatively,easier,way to understand manner In addition one of the two guided principals in Lean thinking is respect for people which correlates with one of the,to the Lean methodology more naturally Lean Thinking encouraged critical thinking and problem solving skills like Design Thinking does but in a different and relatively easier way to understand manner In addition one of the two guided principals in Lean thinking is respect for people which correlates with one of the,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,is respect for people which correlates with one of the key aspects of Design Thinking namely empathy As mentioned in Sec III Lean Thinking defines,value,and wast in a process by focusing on the value the process will become more efficient Applying Lean Thinking to Design Thinking results in creating,is respect for people which correlates with one of the key aspects of Design Thinking namely empathy As mentioned in Sec III Lean Thinking defines value and wast in a process by focusing on the value the process will become more efficient Applying Lean Thinking to Design Thinking results in creating,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,to Engineering Design course and made the goals of the course more achievable We would like to integrate Lean Thinking into other engineering courses as,well,Optimizing a systems performance or the result of a procedure is of importance in any engineering related work whether analytical or design focused For this,to Engineering Design course and made the goals of the course more achievable We would like to integrate Lean Thinking into other engineering courses as well Optimizing a systems performance or the result of a procedure is of importance in any engineering related work whether analytical or design focused For this,2020
ASEENE_Integrating_Lean_Thinking_into_Design_Thinking_With_First-Year_Engineering_Design_Course_2020_IEEE_cleaned.txt,analytical or design focused For this reason the combination of Design Thinking and Lean Thinking prepares engineering students to address lifes challenges more efficiently and,successfully,,analytical or design focused For this reason the combination of Design Thinking and Lean Thinking prepares engineering students to address lifes challenges more efficiently and successfully,2020
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,and user interaction and time to market are particularly important In this paper we describe a study that evaluates the use of Scrum for software,success,in mobile application development We defined an innovative model of working with Scrum in a class setting at Pace University involving a professional Scrum Master,and user interaction and time to market are particularly important In this paper we describe a study that evaluates the use of Scrum for software success in mobile application development We defined an innovative model of working with Scrum in a class setting at Pace University involving a professional Scrum Master,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,assurance focus group testing and usability testing 3 10 Agile methodologies offer lighter and faster development They have achieved a high level of popularity and,success,in the software industry by recognizing that a good client developer relationship is crucial for success in software development 11 They appear to be particularly,assurance focus group testing and usability testing 3 10 Agile methodologies offer lighter and faster development They have achieved a high level of popularity and success in the software industry by recognizing that a good client developer relationship is crucial for success in software development 11 They appear to be particularly,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,It uses iterations of fixed duration one to four weeks called Sprints There are three main roles The Product Owner is responsible for achieving business,value,and is in charge of the product vision represented by a prioritized list of evolving requirements tasks constraints and bugs organized in a Product Backlog,It uses iterations of fixed duration one to four weeks called Sprints There are three main roles The Product Owner is responsible for achieving business value and is in charge of the product vision represented by a prioritized list of evolving requirements tasks constraints and bugs organized in a Product Backlog,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,each of the tasks is updated in the Sprint Backlog The Scrum Master maintains a Sprint Burndown Chart as a metrics for the team s,progress,which shows for each task how much hours or days remains until the team s commitment is completed Agile methodologies are intently introduced in the,each of the tasks is updated in the Sprint Backlog The Scrum Master maintains a Sprint Burndown Chart as a metrics for the team s progress which shows for each task how much hours or days remains until the team s commitment is completed Agile methodologies are intently introduced in the,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,devices The Java ME topics introduced in the course were the Java ME architecture high level interface design e g lists and forms with some,best,practices on usability 8 internationalization to localize applications in different languages record stores to save data and text messaging to send SMS messages The entrepreneurship,devices The Java ME topics introduced in the course were the Java ME architecture high level interface design e g lists and forms with some best practices on usability 8 internationalization to localize applications in different languages record stores to save data and text messaging to send SMS messages The entrepreneurship,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,and the sales of a restaurant in Senegal in Africa Students used Scrum as the development framework to gain practical experience with it understand its,advantages,over Waterfall that they used on previous projects and to increase the chance of getting a working mobile application at the end of the six,and the sales of a restaurant in Senegal in Africa Students used Scrum as the development framework to gain practical experience with it understand its advantages over Waterfall that they used on previous projects and to increase the chance of getting a working mobile application at the end of the six,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,Retrospectives and the final demonstrations Tooling Introducing Scrum into a classroom setting has constraints to be accounted for and tooling is crucial to support its,efficient,implementation For example the Daily Scrum Meetings cannot take place daily and teams cannot use wall sized boards with tasks written on post it notes,Retrospectives and the final demonstrations Tooling Introducing Scrum into a classroom setting has constraints to be accounted for and tooling is crucial to support its efficient implementation For example the Daily Scrum Meetings cannot take place daily and teams cannot use wall sized boards with tasks written on post it notes,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,the Scrum Master were mostly via conference calls Each team used the same tooling environment for socialization communication project management and development We chose a,simple,tooling environment composed of tools students were mostly already familiar with to avoid burdening them with too many technologies to learn in a short period,the Scrum Master were mostly via conference calls Each team used the same tooling environment for socialization communication project management and development We chose a simple tooling environment composed of tools students were mostly already familiar with to avoid burdening them with too many technologies to learn in a short period,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,socialization via virtual worlds on software development 9 we organized a meeting in Second Life on the Pace University Island to foster team bonding and,ease,communications with the Scrum Master The meeting permitted everybody to be introduced to each other and carry on different activities in Second Life in a,socialization via virtual worlds on software development 9 we organized a meeting in Second Life on the Pace University Island to foster team bonding and ease communications with the Scrum Master The meeting permitted everybody to be introduced to each other and carry on different activities in Second Life in a,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,implemented by three teams of students who followed the Scrum framework All teams delivered working software at the end of the project They were particularly,positive,about their experience with Scrum The use of Scrum was perceived as the main reason of the success of the project by all the Scrum,implemented by three teams of students who followed the Scrum framework All teams delivered working software at the end of the project They were particularly positive about their experience with Scrum The use of Scrum was perceived as the main reason of the success of the project by all the Scrum,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,not consider research environment setup design proof of concept testing and code refactoring as tasks Giving examples of tasks clarified the notion and resulted in,better,Sprint Backlogs with detailed tasks The notion of task ownership had to be explained as students considered the team to be responsible for a task,not consider research environment setup design proof of concept testing and code refactoring as tasks Giving examples of tasks clarified the notion and resulted in better Sprint Backlogs with detailed tasks The notion of task ownership had to be explained as students considered the team to be responsible for a task,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,teams spent sleepless nights to complete them They acknowledged that they were not realistic in their initial estimate for the first Sprint and did a,better,job in the second Sprint After the second Scrum Meeting teams learned how to fill out the remaining time section of the Sprint Backlog but,teams spent sleepless nights to complete them They acknowledged that they were not realistic in their initial estimate for the first Sprint and did a better job in the second Sprint After the second Scrum Meeting teams learned how to fill out the remaining time section of the Sprint Backlog but,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,with the Scrum Master Communications with the Scrum Master during the Scrum meetings went smoothly during daily Scrum meetings teams handled the three questions with,ease,However team members had to be reminded to answer the questions in their names and not for the team It would have been beneficial to,with the Scrum Master Communications with the Scrum Master during the Scrum meetings went smoothly during daily Scrum meetings teams handled the three questions with ease However team members had to be reminded to answer the questions in their names and not for the team It would have been beneficial to,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,have been beneficial to use a webcam during the Scrum Meetings such that the Scrum Master could have observed the teams and understood their functioning,better,It was interesting to see that all team members were always standing during the meetings If one of the team members was sitting there was,have been beneficial to use a webcam during the Scrum Meetings such that the Scrum Master could have observed the teams and understood their functioning better It was interesting to see that all team members were always standing during the meetings If one of the team members was sitting there was,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,various technologies methodologies and tools to be learned for the project At the end of the project they were very satisfied even surprised with their,achievements,The internationalization user story was not implemented by two of the teams this user story was of low priority One of the teams implemented all,various technologies methodologies and tools to be learned for the project At the end of the project they were very satisfied even surprised with their achievements The internationalization user story was not implemented by two of the teams this user story was of low priority One of the teams implemented all,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,made me more productive permitted more interaction with classmates and facilitated constant awareness of what was achieved and how much work is left The main,advantage,of Scrum reported by the teams is its capability of catalyzing the energy on committed tasks Students reported that During the Scrum meeting our focus,made me more productive permitted more interaction with classmates and facilitated constant awareness of what was achieved and how much work is left The main advantage of Scrum reported by the teams is its capability of catalyzing the energy on committed tasks Students reported that During the Scrum meeting our focus,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,and could not meet often outside class Being the Product Owner and the Instructor of the class was not problematic but it would have been,better,for the students to be able to distinguish the Product Owner from the instructor Students asked lots of technical questions to the instructors and it,and could not meet often outside class Being the Product Owner and the Instructor of the class was not problematic but it would have been better for the students to be able to distinguish the Product Owner from the instructor Students asked lots of technical questions to the instructors and it,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,usability point of view The most difficult topics for the students were the implementation linked with record stores that required knowledge of hash tables for,efficiency,purposes Going from Web application design to mobile application design requires a paradigm shift in the way to solve problems Constraints linked with the screen,usability point of view The most difficult topics for the students were the implementation linked with record stores that required knowledge of hash tables for efficiency purposes Going from Web application design to mobile application design requires a paradigm shift in the way to solve problems Constraints linked with the screen,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,mobile application design requires a paradigm shift in the way to solve problems Constraints linked with the screen size have to be accounted for as,well,as the mobile usability standards Simplicity is particularly important During the first Sprint Demo Reviews the three teams showcased prototypes with user interfaces and interaction,mobile application design requires a paradigm shift in the way to solve problems Constraints linked with the screen size have to be accounted for as well as the mobile usability standards Simplicity is particularly important During the first Sprint Demo Reviews the three teams showcased prototypes with user interfaces and interaction,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,Teams then refined their user interfaces and interaction design to adhere to mobile standards Scrum and Mobile Application Development Mobile phone applications are in general,simple,and activity centered applications dedicated to accomplish a very restricted number of actions They can be developed in a short time and a positive user,Teams then refined their user interfaces and interaction design to adhere to mobile standards Scrum and Mobile Application Development Mobile phone applications are in general simple and activity centered applications dedicated to accomplish a very restricted number of actions They can be developed in a short time and a positive user,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,a short time and a positive user experience is crucial In our study the use of Scrum was perceived as the main reason of the,success,of the project by all Scrum roles when time was a constraint and mobile application development was learned just in time Scrum permitted teams to,a short time and a positive user experience is crucial In our study the use of Scrum was perceived as the main reason of the success of the project by all Scrum roles when time was a constraint and mobile application development was learned just in time Scrum permitted teams to,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,and a Client Sprints lasted two weeks Daily Scrum could only take place twice a week We expected that Scrum will increase the chance of,successful,delivery of mobile applications that are developed in a short period of time This hypothesis was confirmed by our study We also noticed that Sprints,and a Client Sprints lasted two weeks Daily Scrum could only take place twice a week We expected that Scrum will increase the chance of successful delivery of mobile applications that are developed in a short period of time This hypothesis was confirmed by our study We also noticed that Sprints,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,was confirmed by our study We also noticed that Sprints of two weeks were particularly adapted to teams new to Scrum The key factors of,success,related to Scrum were the strong notion of commitment and the fact that Scrum facilitates focus on planned tasks We summarize in Table 1 some,was confirmed by our study We also noticed that Sprints of two weeks were particularly adapted to teams new to Scrum The key factors of success related to Scrum were the strong notion of commitment and the fact that Scrum facilitates focus on planned tasks We summarize in Table 1 some,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,update the Sprint Backlog Take notes and summarize all the Scrum Meetings Formally close the project with thanking the different actors involved Summarize what went,well,on the project and what didn t and determine how to refine the model Planning Define a Scrum scenario that assigns the Scrum roles determine,update the Sprint Backlog Take notes and summarize all the Scrum Meetings Formally close the project with thanking the different actors involved Summarize what went well on the project and what didn t and determine how to refine the model Planning Define a Scrum scenario that assigns the Scrum roles determine,2010
CHASE_Scrum_To_Support_Mobile_Application_Development_2010_WebOfScience.txt,believe that these roles should not be assigned to students of the Scrum teams and that the involvement of a certified Scrum Master is a,positive,investment Select a real project Identify the constraints and assess the risks related to the implementation of such model for the course Select a tooling,believe that these roles should not be assigned to students of the Scrum teams and that the involvement of a certified Scrum Master is a positive investment Select a real project Identify the constraints and assess the risks related to the implementation of such model for the course Select a tooling,2010
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,the BSc final year project at Bournemouth University UK This implementation of Trello based agile Scrum methodology in the project development is compared against the,simple,agile Scrum based project development practice to demonstrate the success and learning improvement of this proposed methodology Keywords Agile Scrum methodology Trello Groupware e learning,the BSc final year project at Bournemouth University UK This implementation of Trello based agile Scrum methodology in the project development is compared against the simple agile Scrum based project development practice to demonstrate the success and learning improvement of this proposed methodology Keywords Agile Scrum methodology Trello Groupware e learning,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,methodologies and their application in project development is a key element of learning and accomplishing the computing degree Today agile is one of the most,successful,software development approaches employed by the majority of software development companies 1 As a result the teaching focus has moved towards the learning of various,methodologies and their application in project development is a key element of learning and accomplishing the computing degree Today agile is one of the most successful software development approaches employed by the majority of software development companies 1 As a result the teaching focus has moved towards the learning of various,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,project development at later stage If the teaching and learning is based on practicals and utilises some tools or apps then it would be more,effective,than simply learning concepts without any learning aids this is especially true for the kinaesthetic learner 5 12 Teaching agile Scrum practicals is possible as,project development at later stage If the teaching and learning is based on practicals and utilises some tools or apps then it would be more effective than simply learning concepts without any learning aids this is especially true for the kinaesthetic learner 5 12 Teaching agile Scrum practicals is possible as,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,methodology is adopted for the BSc final year computing project which is sponsored by industry partners The analysis of the project results revealed a significant,improvement,in the overall performance i e each individual student and this Trello based practical and collaborative working assisted all students in understanding clarifying and correcting,methodology is adopted for the BSc final year computing project which is sponsored by industry partners The analysis of the project results revealed a significant improvement in the overall performance i e each individual student and this Trello based practical and collaborative working assisted all students in understanding clarifying and correcting,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,explaining its associated components in the form of Trello features It also contains the most critical sprint component a burndown chart to show the current,progress,of this sprint to everyone Those who are not a member of the Scrum development team e g product owner and other stakeholders can subscribe,explaining its associated components in the form of Trello features It also contains the most critical sprint component a burndown chart to show the current progress of this sprint to everyone Those who are not a member of the Scrum development team e g product owner and other stakeholders can subscribe,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,Scrum methodology provides the students with greater opportunities to work as team communicate and discuss with each other solving the problem and designing an acceptable,solution,in a limited time The successful implementation of this practical approach based on Trello is demonstrated in the next section where its application for the,Scrum methodology provides the students with greater opportunities to work as team communicate and discuss with each other solving the problem and designing an acceptable solution in a limited time The successful implementation of this practical approach based on Trello is demonstrated in the next section where its application for the,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,of the project team and their internal and external sponsors This means that when meetings are held with these stakeholders everyone is informed of the,progress,to date as Trello constantly sends updates of the progress made to the project team This leads to more targeted meetings addressing meaningful issues thus,of the project team and their internal and external sponsors This means that when meetings are held with these stakeholders everyone is informed of the progress to date as Trello constantly sends updates of the progress made to the project team This leads to more targeted meetings addressing meaningful issues thus,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,user stories once verified by the team and the internal and external stakeholders forms the initial product backlog and once complete means the project can,progress,to the next stage of the process Subsequently the product backlog is split into number of release backlogs and sprints depending on the requirement of,user stories once verified by the team and the internal and external stakeholders forms the initial product backlog and once complete means the project can progress to the next stage of the process Subsequently the product backlog is split into number of release backlogs and sprints depending on the requirement of,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,into number of release backlogs and sprints depending on the requirement of the project with mutual negotiations Every sprint is a shippable product and its,progress,is managed in Trello through the burndown chart This burndown chart is created at the beginning of each sprint and updated regularly to inform of,into number of release backlogs and sprints depending on the requirement of the project with mutual negotiations Every sprint is a shippable product and its progress is managed in Trello through the burndown chart This burndown chart is created at the beginning of each sprint and updated regularly to inform of,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,the development of the next sprint The same process is repeated for all the sprints until the project is complete It cannot be underestimated the,value,of utilising Trello and the skills and experience gained from employing an agile Scrum software development methodology in a real life project The Trello software,the development of the next sprint The same process is repeated for all the sprints until the project is complete It cannot be underestimated the value of utilising Trello and the skills and experience gained from employing an agile Scrum software development methodology in a real life project The Trello software,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,utilising Trello and the skills and experience gained from employing an agile Scrum software development methodology in a real life project The Trello software works,well,in this collaborative environment and due to its clean and user friendly intuitive UI it is effortless to learn and assimilate Therefore teaching time is,utilising Trello and the skills and experience gained from employing an agile Scrum software development methodology in a real life project The Trello software works well in this collaborative environment and due to its clean and user friendly intuitive UI it is effortless to learn and assimilate Therefore teaching time is,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,can produce meaningful information efficiently and effortlessly 8 Furthermore Students make use of Trello to maintain their Project Development Records PDR which are records of,progress,thoughts and issues held on Trello these can easily be compiled into their PDR for presentation on project completion In addition internal and external tutor,can produce meaningful information efficiently and effortlessly 8 Furthermore Students make use of Trello to maintain their Project Development Records PDR which are records of progress thoughts and issues held on Trello these can easily be compiled into their PDR for presentation on project completion In addition internal and external tutor,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,by academic staff it can be provided promptly through Trello Overall the experience of using Trello for managing a complex problem solving challenge has been,successful,with overall project marks improving from one year to the next Moreover it has brought together skills they have learned during their Software Engineering lectures,by academic staff it can be provided promptly through Trello Overall the experience of using Trello for managing a complex problem solving challenge has been successful with overall project marks improving from one year to the next Moreover it has brought together skills they have learned during their Software Engineering lectures,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,and free software tools Trello to the project work in a groupware and e learning environment 6 Results and Analysis The previous section explained the,successful,development and delivery of the Trello based agile Scrum methodology in the Software Engineering module and later its application into the BSc final year projects,and free software tools Trello to the project work in a groupware and e learning environment 6 Results and Analysis The previous section explained the successful development and delivery of the Trello based agile Scrum methodology in the Software Engineering module and later its application into the BSc final year projects,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,Software Engineering module and later its application into the BSc final year projects Having introduced this methodology it was important to investigate the effect and,success,of this Trello based methodology Therefore the project results when Trello based methodology is employed were further analysed and compared against project results when agile,Software Engineering module and later its application into the BSc final year projects Having introduced this methodology it was important to investigate the effect and success of this Trello based methodology Therefore the project results when Trello based methodology is employed were further analysed and compared against project results when agile,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,projects results were compared against the previous cohort who developed their projects using agile Scrum methodology but without Trello based learning There was a slight,improvement,in the overall project results 2 for both cohorts but it was not a significant finding for Trello based methodology because this improvement could be,projects results were compared against the previous cohort who developed their projects using agile Scrum methodology but without Trello based learning There was a slight improvement in the overall project results 2 for both cohorts but it was not a significant finding for Trello based methodology because this improvement could be,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,both results when compared with and without Trello based agile Scrum methodology The use of Trello based agile Scrum in project development showed a significant,improvement,in the overall performance i e each individual student of class with minimum standard deviation for the both cohorts as shown in Figs 5 and,both results when compared with and without Trello based agile Scrum methodology The use of Trello based agile Scrum in project development showed a significant improvement in the overall performance i e each individual student of class with minimum standard deviation for the both cohorts as shown in Figs 5 and,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,major components of the project throughout its life cycle however the completion of the actual project requires several other stages and is important for its,success,For this reason analysing the results and its improvement may not explicitly reflect the success of the Trello based methodology but the improvement in the,major components of the project throughout its life cycle however the completion of the actual project requires several other stages and is important for its success For this reason analysing the results and its improvement may not explicitly reflect the success of the Trello based methodology but the improvement in the,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,the success of the Trello based methodology but the improvement in the class performance i e each individual student is a strong indication of the,success,of this proposed methodology 10 Nonetheless in the future it is important to explicitly evaluate the effect and success of this Trello based methodology in,the success of the Trello based methodology but the improvement in the class performance i e each individual student is a strong indication of the success of this proposed methodology 10 Nonetheless in the future it is important to explicitly evaluate the effect and success of this Trello based methodology in,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,the software engineering module in BSc courses and subsequently in the development of the BSc final year project at Bournemouth University UK The effect and,success,of this Trello based methodology was evaluated by comparing the project results of the two cohorts with and without Trello based Scrum methodology The comparative,the software engineering module in BSc courses and subsequently in the development of the BSc final year project at Bournemouth University UK The effect and success of this Trello based methodology was evaluated by comparing the project results of the two cohorts with and without Trello based Scrum methodology The comparative,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,comparing the project results of the two cohorts with and without Trello based Scrum methodology The comparative analysis of the project results revealed a significant,improvement,in the overall performance i e each individual student and this Trello based practical and collaborative working helped all students in understanding clarifying and correcting,comparing the project results of the two cohorts with and without Trello based Scrum methodology The comparative analysis of the project results revealed a significant improvement in the overall performance i e each individual student and this Trello based practical and collaborative working helped all students in understanding clarifying and correcting,2019
CISIS_Learning_Agile_Scrum_Methodology_Using_the_Groupware_Tool_Trello_Through_Collaborative_Working_2019_Scopus_cleaned.txt,in understanding clarifying and correcting their project activities in a timely manner Nonetheless in the future it is important to explicitly evaluate the effect and,success,of this Trello based methodology in the development of the project by creating a separate mechanism for its evaluation Additionally it would be more useful,in understanding clarifying and correcting their project activities in a timely manner Nonetheless in the future it is important to explicitly evaluate the effect and success of this Trello based methodology in the development of the project by creating a separate mechanism for its evaluation Additionally it would be more useful,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,Impact of using Agile Methods in Software Engineering Education A Case Study Abstract Agile methods have proved their applicability and,efficiency,in software development Advantages of using agile methods include short development life cycle times multidisciplinary development teams continuous evolution immediacy and reduced cost of change,Impact of using Agile Methods in Software Engineering Education A Case Study Abstract Agile methods have proved their applicability and efficiency in software development Advantages of using agile methods include short development life cycle times multidisciplinary development teams continuous evolution immediacy and reduced cost of change,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,be prepared for real challenges they may face in developing web applications as many other engineering disciplines 18 19 Web application encompasses everything from a,simple,Web page to a comprehensive website 6 Web engineering is a framework for building industry quality web applications Quick delivery of good quality working web,be prepared for real challenges they may face in developing web applications as many other engineering disciplines 18 19 Web application encompasses everything from a simple Web page to a comprehensive website 6 Web engineering is a framework for building industry quality web applications Quick delivery of good quality working web,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,web applications Quick delivery of good quality working web application is crucial in the current market 3 6 Agile approaches have proved their applicability and,efficiency,for this class of applications due to the challenges associated with Web based applications development such as short development life cycle times small multidisciplinary development,web applications Quick delivery of good quality working web application is crucial in the current market 3 6 Agile approaches have proved their applicability and efficiency for this class of applications due to the challenges associated with Web based applications development such as short development life cycle times small multidisciplinary development,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,but not within the university education system 8 Therefore the author believes that agile approaches needed to be investigated according to specific educational requirements to,positively,influence the teaching process Agile approach in university courses could enhance constructive communication skills generate relationships among students stimulate active team participation and motivation learning,but not within the university education system 8 Therefore the author believes that agile approaches needed to be investigated according to specific educational requirements to positively influence the teaching process Agile approach in university courses could enhance constructive communication skills generate relationships among students stimulate active team participation and motivation learning,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,for web engineering 3 Rapid development for web application through simulating a real world environment 4 Distinguish between various development approaches and identify the possible,benefits,and drawbacks for each Web engineering process 6 involves set of activities that are applicable to all Web application projects the activities are iterated and,for web engineering 3 Rapid development for web application through simulating a real world environment 4 Distinguish between various development approaches and identify the possible benefits and drawbacks for each Web engineering process 6 involves set of activities that are applicable to all Web application projects the activities are iterated and,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,teamwork their motivation and their attitude towards changing requirements 3 Analysing the participants responds to reach deeper and wider understanding which would eventually bring a,positive,impact on Web engineering undergraduate program in order to prepare students for exciting career and successful articulation in this field 4 Assessment for students is,teamwork their motivation and their attitude towards changing requirements 3 Analysing the participants responds to reach deeper and wider understanding which would eventually bring a positive impact on Web engineering undergraduate program in order to prepare students for exciting career and successful articulation in this field 4 Assessment for students is,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,in order to prepare students for exciting career and successful articulation in this field 4 Assessment for students is done in order to evaluate the,efficiency,of followed educational technique compared with traditional one for Web Engineering course and how it affects positively on students results V IMPACT OF AGILE METHODS,in order to prepare students for exciting career and successful articulation in this field 4 Assessment for students is done in order to evaluate the efficiency of followed educational technique compared with traditional one for Web Engineering course and how it affects positively on students results V IMPACT OF AGILE METHODS,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,development After years of exploring industry requirements it has been notices that agile approach possesses significant characteristics and practices students should experience in their educational,progress,Agile practices seem to be appropriate for software development done in universities and colleges as course or final year graduation projects Students in programming courses,development After years of exploring industry requirements it has been notices that agile approach possesses significant characteristics and practices students should experience in their educational progress Agile practices seem to be appropriate for software development done in universities and colleges as course or final year graduation projects Students in programming courses,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,these scenarios agile practices help by focusing on rapid programming of software that meets the specified requirements Integrating agile methodology into academic will help to,better,understand the importance and role s of agile concepts and practices 15 In reality students working together with good communication and interaction can operate at,these scenarios agile practices help by focusing on rapid programming of software that meets the specified requirements Integrating agile methodology into academic will help to better understand the importance and role s of agile concepts and practices 15 In reality students working together with good communication and interaction can operate at,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,on increasing both individual competencies and collaboration levels Some studies observe Agile practices used in education and explore its impact to learning the results indicate,positive,influence on students skill specially on students with weak programming skills Moreover it has a big effect on average variance between their project mates skills,on increasing both individual competencies and collaboration levels Some studies observe Agile practices used in education and explore its impact to learning the results indicate positive influence on students skill specially on students with weak programming skills Moreover it has a big effect on average variance between their project mates skills,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,skill specially on students with weak programming skills Moreover it has a big effect on average variance between their project mates skills In addition it,positively,influences on higher marks for coding and final evaluations of their projects on average 16 Agility is a broad concept that needs to be delimited,skill specially on students with weak programming skills Moreover it has a big effect on average variance between their project mates skills In addition it positively influences on higher marks for coding and final evaluations of their projects on average 16 Agility is a broad concept that needs to be delimited,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,evaluations of their projects on average 16 Agility is a broad concept that needs to be delimited and tuned according to specific educational requirements to,positively,influence the teaching process An agile approach should foster rapid software development promote application quality and make changing requirements easy to manage It should also,evaluations of their projects on average 16 Agility is a broad concept that needs to be delimited and tuned according to specific educational requirements to positively influence the teaching process An agile approach should foster rapid software development promote application quality and make changing requirements easy to manage It should also,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,been notices that participant students in both teams XP and Scrum were motivated during the course Hence applying agile approaches practically in Web Engineering course,positively,influenced the teaching process Through enhancing constructive communication skills generating relationships among students stimulating active team participation and motivating self learning It could also adopt,been notices that participant students in both teams XP and Scrum were motivated during the course Hence applying agile approaches practically in Web Engineering course positively influenced the teaching process Through enhancing constructive communication skills generating relationships among students stimulating active team participation and motivating self learning It could also adopt,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,management This is reflected on their big jump in understanding for Agile approaches that are applicable for Web Engineering and Web Applications student could have,better,understanding for the approaches and principles around Eighty Two percent and Eighty percent better understanding for XP and Scrum approaches respectively Both teams have positive,management This is reflected on their big jump in understanding for Agile approaches that are applicable for Web Engineering and Web Applications student could have better understanding for the approaches and principles around Eighty Two percent and Eighty percent better understanding for XP and Scrum approaches respectively Both teams have positive,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,better understanding for XP and Scrum approaches respectively Both teams have positive feedbacks regarding the communication between team members organization to work and the methodology,efficiency,which helped to find out bugs easily and work with high degree of autonomy Most XP team members felt it was enjoyable learning way while,better understanding for XP and Scrum approaches respectively Both teams have positive feedbacks regarding the communication between team members organization to work and the methodology efficiency which helped to find out bugs easily and work with high degree of autonomy Most XP team members felt it was enjoyable learning way while,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,was enjoyable learning way while around Half of scrum members have enjoyed All participants agreed that this way of educating for such Software Engineering courses,enhance,their creativity innovation facilitate the communication help organization to work and efficient for software application development However XP team has higher satisfaction average which is,was enjoyable learning way while around Half of scrum members have enjoyed All participants agreed that this way of educating for such Software Engineering courses enhance their creativity innovation facilitate the communication help organization to work and efficient for software application development However XP team has higher satisfaction average which is,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,is around Seventy Eight while Scrum team satisfaction was around Seventy Seven B Assessment and evaluation for students Assessment has been prepared to measure the,improvement,in student performance the assessment done for two classes of students participants and non participants students Fig 2 shows the assessment results for class of,is around Seventy Eight while Scrum team satisfaction was around Seventy Seven B Assessment and evaluation for students Assessment has been prepared to measure the improvement in student performance the assessment done for two classes of students participants and non participants students Fig 2 shows the assessment results for class of,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,non participants was 15 4 while for participant was 8 9 It could be concluded that the proposed teaching method could increase student grades and,enhance,the student understanding for such software engineering courses Moreover it could minimize the difference between students level of understanding VI CONCLUSIONS The impact using agile,non participants was 15 4 while for participant was 8 9 It could be concluded that the proposed teaching method could increase student grades and enhance the student understanding for such software engineering courses Moreover it could minimize the difference between students level of understanding VI CONCLUSIONS The impact using agile,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,and interaction can operate at higher levels than when they use their individual talents Further it was revealed that both XP and SCRUM teams were,efficient,and can produce good quality software within tight deadline This implies that the adopted approach can be implemented easily with undergraduate students It was found,and interaction can operate at higher levels than when they use their individual talents Further it was revealed that both XP and SCRUM teams were efficient and can produce good quality software within tight deadline This implies that the adopted approach can be implemented easily with undergraduate students It was found,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,software within tight deadline This implies that the adopted approach can be implemented easily with undergraduate students It was found that both approaches are enjoyable,enhance,the motivation facilitate the communication and help organizing the work for web application development After analyzing a questionnaire and the assessment results and based on,software within tight deadline This implies that the adopted approach can be implemented easily with undergraduate students It was found that both approaches are enjoyable enhance the motivation facilitate the communication and help organizing the work for web application development After analyzing a questionnaire and the assessment results and based on,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,After analyzing a questionnaire and the assessment results and based on the investigators observations it is concluded that using Agile practices in educational framework would,positively,influence the teaching process Agile approach in undergraduate software engineering courses could stimulate communication good relationships among students active team participation and motivation for present,After analyzing a questionnaire and the assessment results and based on the investigators observations it is concluded that using Agile practices in educational framework would positively influence the teaching process Agile approach in undergraduate software engineering courses could stimulate communication good relationships among students active team participation and motivation for present,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,students active team participation and motivation for present and future learning It should also foster rapid software development promote application quality and make changing requirements,easy,to manage The participants had a great preference among other students and could more realize the agile principles and how to deal with uncertain environment,students active team participation and motivation for present and future learning It should also foster rapid software development promote application quality and make changing requirements easy to manage The participants had a great preference among other students and could more realize the agile principles and how to deal with uncertain environment,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,deal with uncertain environment where evolution and changing requirements inevitably required TABLE I XP RESULTS Criteria 1 XP Methodology understanding 2 Team members motivation 3,better,Communication among members 4 Enjoyable way 5 Better Organization to work 6 Methodologys general efficiency Overall Satisfaction TABLE II SCRUM RESULTS Criteria 1 Scrum Methodology,deal with uncertain environment where evolution and changing requirements inevitably required TABLE I XP RESULTS Criteria 1 XP Methodology understanding 2 Team members motivation 3 better Communication among members 4 Enjoyable way 5 Better Organization to work 6 Methodologys general efficiency Overall Satisfaction TABLE II SCRUM RESULTS Criteria 1 Scrum Methodology,2019
CODIT_Impact_of_using_Agile_Methods_in_Software_Engineering_Education_A_Case_Study_2019_IEEE_cleaned.txt,5 Better Organization to work 6 Methodologys general efficiency Overall Satisfaction TABLE II SCRUM RESULTS Criteria 1 Scrum Methodology understanding 2 Team members motivation 3,better,Communication among members 4 Enjoyable way 5 Better Organization to work 6 Methodologys general efficiency Overall Satisfaction Agree 82 85 86 6 70 82 66,5 Better Organization to work 6 Methodologys general efficiency Overall Satisfaction TABLE II SCRUM RESULTS Criteria 1 Scrum Methodology understanding 2 Team members motivation 3 better Communication among members 4 Enjoyable way 5 Better Organization to work 6 Methodologys general efficiency Overall Satisfaction Agree 82 85 86 6 70 82 66,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,for teaching staff Employing commercial tools may not be suitable due to additional financial cost time and learning curve for students This paper proposes an,easy,and effective Game Based Learning GBL approach for Agile Scrum using Trello Trello is a web based app with no learning curve used to design,for teaching staff Employing commercial tools may not be suitable due to additional financial cost time and learning curve for students This paper proposes an easy and effective Game Based Learning GBL approach for Agile Scrum using Trello Trello is a web based app with no learning curve used to design,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,a game not as a complex methodology This proposed GBL approach has been used for two undergraduate courses for the last four years demonstrating constant,improvement,for both courses in their learning and assessment whilst comparing it with the traditional teaching approach for Agile Scrum I INTRODUCTION Software Engineering SE has,a game not as a complex methodology This proposed GBL approach has been used for two undergraduate courses for the last four years demonstrating constant improvement for both courses in their learning and assessment whilst comparing it with the traditional teaching approach for Agile Scrum I INTRODUCTION Software Engineering SE has,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,Software Engineering SE has been an essential part of computing degree courses at universities In the last two decades Agile has emerged as the most,successful,software development approach 1 consequently it led to changes in SE curricula that included several Agile approaches Scrum eXtreme Programming XP Crystal and Dynamic Systems,Software Engineering SE has been an essential part of computing degree courses at universities In the last two decades Agile has emerged as the most successful software development approach 1 consequently it led to changes in SE curricula that included several Agile approaches Scrum eXtreme Programming XP Crystal and Dynamic Systems,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,be suitable due to many reasons such as adaptability additional financial cost time and learning curve for the student 9 10 This paper proposes an,easy,and effective Game Based Learning GBL approach for Agile Scrum using Trello Trello is a low cost web based app with no learning curve used,be suitable due to many reasons such as adaptability additional financial cost time and learning curve for the student 9 10 This paper proposes an easy and effective Game Based Learning GBL approach for Agile Scrum using Trello Trello is a low cost web based app with no learning curve used,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,into the development of a real project This proposed GBL approach has been used for two undergraduate courses for the last four years demonstrating continuous,improvement,for both courses in their learning and assessment compared to traditional teaching approaches for Agile Scrum The rest of the paper is organised as follows,into the development of a real project This proposed GBL approach has been used for two undergraduate courses for the last four years demonstrating continuous improvement for both courses in their learning and assessment compared to traditional teaching approaches for Agile Scrum The rest of the paper is organised as follows,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,approach Section VI concludes the paper and suggests some future work B Trello An Effortless Web App for Team Working Trello is one of the,easiest,and popular project management tools to use when teams are involved in projects It is a collaborative teamworking tool designed to ensure that teams work,approach Section VI concludes the paper and suggests some future work B Trello An Effortless Web App for Team Working Trello is one of the easiest and popular project management tools to use when teams are involved in projects It is a collaborative teamworking tool designed to ensure that teams work,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,projects and within boards there are lists group of tasks and cards which represent tasks The cards within lists can be used to track the,progress,of a project or to simply categorize events 15 It allows integration of apps that the development team already uses directly into the workflow This,projects and within boards there are lists group of tasks and cards which represent tasks The cards within lists can be used to track the progress of a project or to simply categorize events 15 It allows integration of apps that the development team already uses directly into the workflow This,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,backlog the team selects which tasks they wish to develop and these are loaded into sprints Sprints are of 1 4 weeks duration and their,progress,is strictly monitored using a burndown chart During this phase of their learning the students are given examples and reinforcement exercises in the individual components,backlog the team selects which tasks they wish to develop and these are loaded into sprints Sprints are of 1 4 weeks duration and their progress is strictly monitored using a burndown chart During this phase of their learning the students are given examples and reinforcement exercises in the individual components,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,with the method and its design in Trello B Making a Project Game Plan Based on a Case Study using Trello Once the learning is,accomplished,students are divided into team of 2 3 and assigned a software development project based on a case study to design using Agile Scrum in,with the method and its design in Trello B Making a Project Game Plan Based on a Case Study using Trello Once the learning is accomplished students are divided into team of 2 3 and assigned a software development project based on a case study to design using Agile Scrum in,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,students work as a team and apply their learning of Agile Scrum and Trello exploring a variety of ideas to make their Trello Project Board,better,than other teams so they can win rewards during the presentations of their developed project scenario in Trello Students learn that a number of events,students work as a team and apply their learning of Agile Scrum and Trello exploring a variety of ideas to make their Trello Project Board better than other teams so they can win rewards during the presentations of their developed project scenario in Trello Students learn that a number of events,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,designed roadmaps are planned backlogs are built code is written bugs are caught and fixed However students as engineers learn to identify problems and design,solutions,to ensure everything works when required During the sprints it is emphasised that without good team communication clear goals and priorities and an up to,designed roadmaps are planned backlogs are built code is written bugs are caught and fixed However students as engineers learn to identify problems and design solutions to ensure everything works when required During the sprints it is emphasised that without good team communication clear goals and priorities and an up to,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,to be aggravated at yet another last minute request for a quick change to the plan They utilise Trello to set sprint tasks and run,efficient,retrospectives collaborate on bug fixes to celebrating product deployments taking part in the daily ceremonies conducted by the scrum master Students can easily monitor product,to be aggravated at yet another last minute request for a quick change to the plan They utilise Trello to set sprint tasks and run efficient retrospectives collaborate on bug fixes to celebrating product deployments taking part in the daily ceremonies conducted by the scrum master Students can easily monitor product,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,opportunity to act in the different roles during the scrum development this gives rise to competition within the team as to who was the most,effective,Scrum master and developed the most sprints who managed to develop a sprint in the shortest time and who was the most effective team Game,opportunity to act in the different roles during the scrum development this gives rise to competition within the team as to who was the most effective Scrum master and developed the most sprints who managed to develop a sprint in the shortest time and who was the most effective team Game,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,of their work presented by each development team as it is not just assessed by one or two lecturers but all participants which is more,effective,than just designing a project in Trello in isolation Irrespective of the award everyone gains some useful feedback and knowledge related to Agile Scrum based,of their work presented by each development team as it is not just assessed by one or two lecturers but all participants which is more effective than just designing a project in Trello in isolation Irrespective of the award everyone gains some useful feedback and knowledge related to Agile Scrum based,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,isolation Irrespective of the award everyone gains some useful feedback and knowledge related to Agile Scrum based software development project in Trello which is very,helpful,for their final stage of real project development in their course No Features TABLE I Trello Features No Features 1 Easy to learn and simple,isolation Irrespective of the award everyone gains some useful feedback and knowledge related to Agile Scrum based software development project in Trello which is very helpful for their final stage of real project development in their course No Features TABLE I Trello Features No Features 1 Easy to learn and simple,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,11 2 Mobile functionality to access 12 boards on the go 3 Free or zero pricing for the basic 13 service 4 Customisable boards for,easy,design 14 5 Native notifications 15 6 Quick overview on front and back 16 of cards 7 Checklists with progress meter 17 8 Visibility Scope,11 2 Mobile functionality to access 12 boards on the go 3 Free or zero pricing for the basic 13 service 4 Customisable boards for easy design 14 5 Native notifications 15 6 Quick overview on front and back 16 of cards 7 Checklists with progress meter 17 8 Visibility Scope,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,5 Native notifications 15 6 Quick overview on front and back 16 of cards 7 Checklists with progress meter 17 8 Visibility Scope 18 9,easy,organization with features such 19 as tags labels and categories 10 In line editing and data filtering 20 SSL encryption of data Easy uploading of,5 Native notifications 15 6 Quick overview on front and back 16 of cards 7 Checklists with progress meter 17 8 Visibility Scope 18 9 easy organization with features such 19 as tags labels and categories 10 In line editing and data filtering 20 SSL encryption of data Easy uploading of,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,and changes Information retrieval and back up Voting feature and search function Deadline reminders and email notifications Task assignment and activity log Power ups features,easy,move swap drag and drop functionality Developer API D Applying Game Based Learning into Real Project Development Later when they start their real projects they,and changes Information retrieval and back up Voting feature and search function Deadline reminders and email notifications Task assignment and activity log Power ups features easy move swap drag and drop functionality Developer API D Applying Game Based Learning into Real Project Development Later when they start their real projects they,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,their real projects they employ Agile Scrum using Trello for their project development At this stage each student has learnt Agile Scrum in Trello and,enhanced,their team working skills which makes this whole project development process easy and familiar to them In general the final projects given to students are,their real projects they employ Agile Scrum using Trello for their project development At this stage each student has learnt Agile Scrum in Trello and enhanced their team working skills which makes this whole project development process easy and familiar to them In general the final projects given to students are,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,the final projects given to students are more complex and time constrained where requirements are often volatile which means that an Agile Scrum approach is,well,suited to these types of projects Students begin by establishing links with the main stakeholders and follow the setup of their Trello Project Board They,the final projects given to students are more complex and time constrained where requirements are often volatile which means that an Agile Scrum approach is well suited to these types of projects Students begin by establishing links with the main stakeholders and follow the setup of their Trello Project Board They,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,Fig 3 shows a sprint and its components explaining its detail design using the Trello List It also includes a burndown chart showing the current,progress,of this sprint which can be seen by everyone The Scrum development team owns the sprint but any stakeholder can subscribe it for regular updates,Fig 3 shows a sprint and its components explaining its detail design using the Trello List It also includes a burndown chart showing the current progress of this sprint which can be seen by everyone The Scrum development team owns the sprint but any stakeholder can subscribe it for regular updates,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,in two undergraduate courses in 2016 where the Agile Scrum methodology was taught in the traditional way Subsequently the Trello based GBL approach has been,successfully,employed for both degree schemes continuously The success of this approach can be evaluated at different levels such as assessment results of the Agile Scrum,in two undergraduate courses in 2016 where the Agile Scrum methodology was taught in the traditional way Subsequently the Trello based GBL approach has been successfully employed for both degree schemes continuously The success of this approach can be evaluated at different levels such as assessment results of the Agile Scrum,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,was used in 2014 and 2015 This comparison of average marks for the last six years reveals two important facts 1 the average marks are,improved,by at least 11 when the Trello based GBL approach is employed in comparison to the non Trello based traditional approach 2 the improvement in,was used in 2014 and 2015 This comparison of average marks for the last six years reveals two important facts 1 the average marks are improved by at least 11 when the Trello based GBL approach is employed in comparison to the non Trello based traditional approach 2 the improvement in,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,based traditional approach was used in 2014 and 2015 This shows almost similar findings as the results of the cohort 1 where average marks are,improved,by at least 10 when Trello based GBL approach is employed in comparison to the non Trello based traditional approach and the improvement in the,based traditional approach was used in 2014 and 2015 This shows almost similar findings as the results of the cohort 1 where average marks are improved by at least 10 when Trello based GBL approach is employed in comparison to the non Trello based traditional approach and the improvement in the,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,employed in comparison to the non Trello based traditional approach and the improvement in the results is consistent again These two average results demonstrate the,success,of this Trello based GBL approach for Agile Scrum software development in addition to the other improvements such as presentation communication and team working skills,employed in comparison to the non Trello based traditional approach and the improvement in the results is consistent again These two average results demonstrate the success of this Trello based GBL approach for Agile Scrum software development in addition to the other improvements such as presentation communication and team working skills,2019
COG_Relax_Its_a_Game_Utilising_Gamification_in_Learning_Agile_Scrum_Software_Development_2019_WebOfScience_cleaned.txt,the development of a real project This designed GBL approach used for the two undergraduate courses for the last four years which demonstrated the constant,improvement,for both courses in their learning and assessment whilst comparing it with the traditional teaching approach for Agile Scrum In future it requires further evaluation,the development of a real project This designed GBL approach used for the two undergraduate courses for the last four years which demonstrated the constant improvement for both courses in their learning and assessment whilst comparing it with the traditional teaching approach for Agile Scrum In future it requires further evaluation,2019
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,From Extreme Programming and Usability Engineering to Extreme Usability in Software Engineering Education XP UE XU Abstract The,success,of Extreme Programming XP is based among other things on an optimal communication in teams of 6 12 persons simplicity frequent releases and a reaction,From Extreme Programming and Usability Engineering to Extreme Usability in Software Engineering Education XP UE XU Abstract The success of Extreme Programming XP is based among other things on an optimal communication in teams of 6 12 persons simplicity frequent releases and a reaction,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,Development is 4 6 people including the end user The two development approaches have different goals but at the same time employ similar methods to,achieve,them It seems obvious that there must be synergy in combining them The authors present ideas in how to combine them in an even more,Development is 4 6 people including the end user The two development approaches have different goals but at the same time employ similar methods to achieve them It seems obvious that there must be synergy in combining them The authors present ideas in how to combine them in an even more,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,XP XP is a software development process which aims to solve frequent software development problems The extreme in the name refers to the fact that,well,known best practices in software development are brought to an extreme if testing is good we test all the time including integration testing and functional,XP XP is a software development process which aims to solve frequent software development problems The extreme in the name refers to the fact that well known best practices in software development are brought to an extreme if testing is good we test all the time including integration testing and functional,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,same way as other features In discussion with the developers the customer puts the User Stories into the order of absolute importance for the economic,success,of the project whereby the customer makes the final decision Through discussion between customers and developers it can be guaranteed that the creativity of the,same way as other features In discussion with the developers the customer puts the User Stories into the order of absolute importance for the economic success of the project whereby the customer makes the final decision Through discussion between customers and developers it can be guaranteed that the creativity of the,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,customer makes the final decision Through discussion between customers and developers it can be guaranteed that the creativity of the whole team can be of,benefit,to the project Each User Story is assigned several engineering tasks Engineering tasks which do not need the minimum realization of a User Story are,customer makes the final decision Through discussion between customers and developers it can be guaranteed that the creativity of the whole team can be of benefit to the project Each User Story is assigned several engineering tasks Engineering tasks which do not need the minimum realization of a User Story are,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,project Each User Story is assigned several engineering tasks Engineering tasks which do not need the minimum realization of a User Story are not implemented,simplicity,the art of maximizing the amount of work not done is essential A User Story describes a feature which from the point of view of,project Each User Story is assigned several engineering tasks Engineering tasks which do not need the minimum realization of a User Story are not implemented simplicity the art of maximizing the amount of work not done is essential A User Story describes a feature which from the point of view of,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,tested for example empirically and as objectively as possible The development of a story is completed when all test cases so far implemented for the,achievement,of all stories have been completed This means that engineering tasks belonging to user stories which have not yet been implemented and are not absolutely,tested for example empirically and as objectively as possible The development of a story is completed when all test cases so far implemented for the achievement of all stories have been completed This means that engineering tasks belonging to user stories which have not yet been implemented and are not absolutely,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,which have been implemented will be discarded in full realization that this could later lead to large alterations 2 Usability Engineering UE In order to,achieve,good Usability 4 5 the Usability Engineering Procedural Model see figure 2 can be used together with Usability Engineering Methods UEM 6 7 The result,which have been implemented will be discarded in full realization that this could later lead to large alterations 2 Usability Engineering UE In order to achieve good Usability 4 5 the Usability Engineering Procedural Model see figure 2 can be used together with Usability Engineering Methods UEM 6 7 The result,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,lowers the cost of subsequent error correction enormously The cyclic iterative procedure brings the software developers rapidly examinable results more motivation and finally a substantial,improvement,in the quality of the software process by way of immediate end user feedback The productivity of the team is thereby increased Above all the,lowers the cost of subsequent error correction enormously The cyclic iterative procedure brings the software developers rapidly examinable results more motivation and finally a substantial improvement in the quality of the software process by way of immediate end user feedback The productivity of the team is thereby increased Above all the,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,prototypes On the other hand there is a danger that certain details which can only be implemented with great difficulty are omitted because they appear,trivial,and subsequently increase development costs Another disadvantage with this method is the difficulty in creating requirement specifications since these would have to be adapted after,prototypes On the other hand there is a danger that certain details which can only be implemented with great difficulty are omitted because they appear trivial and subsequently increase development costs Another disadvantage with this method is the difficulty in creating requirement specifications since these would have to be adapted after,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,are particularly susceptible and the clients becomes caught up in the detail is consciously controlled by applying short iterations frequent re planning and focusing on,simple,design This enables the client to get a realistic feeling of what can be achieved by the team if the team implements only what he,are particularly susceptible and the clients becomes caught up in the detail is consciously controlled by applying short iterations frequent re planning and focusing on simple design This enables the client to get a realistic feeling of what can be achieved by the team if the team implements only what he,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,achieved by the team if the team implements only what he requested and what needs to be pushed back to later versions in order to,achieve,the core functionality needed for the economic success of the project In particular the well known danger of featuritis is harnessed by the conscious decision,achieved by the team if the team implements only what he requested and what needs to be pushed back to later versions in order to achieve the core functionality needed for the economic success of the project In particular the well known danger of featuritis is harnessed by the conscious decision,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,could become meaningful while being prepared to make extensive adjustments and changes at a later date Extreme Usability XU could become such that all the,best,practices of UE are kept in the XP process during the planning games with a restriction of the usability aspects in the next iteration and,could become meaningful while being prepared to make extensive adjustments and changes at a later date Extreme Usability XU could become such that all the best practices of UE are kept in the XP process during the planning games with a restriction of the usability aspects in the next iteration and,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,process during the planning games with a restriction of the usability aspects in the next iteration and the equal treatment of Usability and Functionality The,advantage,would be that with the XP process the adjustment and gradual improvement until the end of the project is explicitly built into the process which,process during the planning games with a restriction of the usability aspects in the next iteration and the equal treatment of Usability and Functionality The advantage would be that with the XP process the adjustment and gradual improvement until the end of the project is explicitly built into the process which,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,that with the XP process the adjustment and gradual improvement until the end of the project is explicitly built into the process which is very,helpful,for UE However UE can improve the XP development method by focusing on the important aspects of the usability and employing the entire development team,that with the XP process the adjustment and gradual improvement until the end of the project is explicitly built into the process which is very helpful for UE However UE can improve the XP development method by focusing on the important aspects of the usability and employing the entire development team,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,one developer in the team possesses previous knowledge about UE and by implementing pair programming including the complete and frequent mixing of the pairs as,well,as passing on the On Site Customer XP principle Obviously UE experience for all developers is an advantage in every project A practice of XP,one developer in the team possesses previous knowledge about UE and by implementing pair programming including the complete and frequent mixing of the pairs as well as passing on the On Site Customer XP principle Obviously UE experience for all developers is an advantage in every project A practice of XP,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,Site Customer XP principle Obviously UE experience for all developers is an advantage in every project A practice of XP which is often difficult to,achieve,in a realistic setting is the customer on site because of the heavy time restraints this poses on the customer In XU this difficulty could,Site Customer XP principle Obviously UE experience for all developers is an advantage in every project A practice of XP which is often difficult to achieve in a realistic setting is the customer on site because of the heavy time restraints this poses on the customer In XU this difficulty could,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,is the customer on site because of the heavy time restraints this poses on the customer In XU this difficulty could be transformed into an,advantage,by allowing different customers to take part in different iterations if not releases thus solving two problems at once From the point of view of,is the customer on site because of the heavy time restraints this poses on the customer In XU this difficulty could be transformed into an advantage by allowing different customers to take part in different iterations if not releases thus solving two problems at once From the point of view of,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,that one and the same customer the end user in XU has to be present at all times can be relaxed thus possibly achieving a,better,over all coverage of customer time in the team x From the point of view of standard UE it is very attractive that the usability,that one and the same customer the end user in XU has to be present at all times can be relaxed thus possibly achieving a better over all coverage of customer time in the team x From the point of view of standard UE it is very attractive that the usability,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,that one and the same customer the end user in XU has to be present at all times can be relaxed thus possibly achieving a,better,over all coverage of customer time in the team From the point of view of standard UE it is very attractive that the usability of,that one and the same customer the end user in XU has to be present at all times can be relaxed thus possibly achieving a better over all coverage of customer time in the team From the point of view of standard UE it is very attractive that the usability of,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,conference In particular a feasibility experiment with 225 students will be held as follows All students will have been exposed theoretically to extreme programming as,well,as practically to Usability Engineering before taking part in the course In the course students will be divided into teams of approximately 10 people each,conference In particular a feasibility experiment with 225 students will be held as follows All students will have been exposed theoretically to extreme programming as well as practically to Usability Engineering before taking part in the course In the course students will be divided into teams of approximately 10 people each,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,will be assigned at random to the teams and the team will have to finish a product that covers both the already implemented feature as,well,as the one of the new customer At the final trade show mini conference the team products will be assessed both from the point of,will be assigned at random to the teams and the team will have to finish a product that covers both the already implemented feature as well as the one of the new customer At the final trade show mini conference the team products will be assessed both from the point of,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,point of view of the satisfaction of their two functionalities quality in terms of unit test coverage readability of code and experimental stress testing as,well,as their general usability All students will be able to distribute points to different teams w r t to these three measures the number of,point of view of the satisfaction of their two functionalities quality in terms of unit test coverage readability of code and experimental stress testing as well as their general usability All students will be able to distribute points to different teams w r t to these three measures the number of,2005
COMPSAC_From_extreme_programming_and_usability_engineering_to_extreme_usability_in_software_engineering_education_XPUE__spl_rarr__XU_2005_IEEE_cleaned.txt,life scenarios in order to collect more experience and are working towards developing a comprehensive guide for combining theory with practice together today for a,better,software engineering of tomorrow,life scenarios in order to collect more experience and are working towards developing a comprehensive guide for combining theory with practice together today for a better software engineering of tomorrow,2005
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,of a restructured software engineering course and the findings from employing it in teaching undergraduate students in a computer science program Student feedback has been,positive,on the restructured course topics to fit the knowledge and skills required to complete their project work The paper summarizes the lessons learned with further,of a restructured software engineering course and the findings from employing it in teaching undergraduate students in a computer science program Student feedback has been positive on the restructured course topics to fit the knowledge and skills required to complete their project work The paper summarizes the lessons learned with further,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,on the restructured course topics to fit the knowledge and skills required to complete their project work The paper summarizes the lessons learned with further,improvements,made to the approach in the subsequent course offerings CCS Concepts Social and professional topics Professional topics Computing education Computing education programs Software engineering education,on the restructured course topics to fit the knowledge and skills required to complete their project work The paper summarizes the lessons learned with further improvements made to the approach in the subsequent course offerings CCS Concepts Social and professional topics Professional topics Computing education Computing education programs Software engineering education,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,encounter challenges concerning using case studies project work topic selection keeping up with technology changes setting up a development environment and conveying the importance of,effective,team management skills 14 Team project work is one of the critical assessment components of many SE courses for the opportunity to practice various concepts,encounter challenges concerning using case studies project work topic selection keeping up with technology changes setting up a development environment and conveying the importance of effective team management skills 14 Team project work is one of the critical assessment components of many SE courses for the opportunity to practice various concepts,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,that follow plan driven methods such as the waterfall method the sequence of activities to be completed as part of the project work fits very,well,with teaching related topics such as planning analysis design and implementation For example the students learning agile methodologies such as Scrum must learn the necessary,that follow plan driven methods such as the waterfall method the sequence of activities to be completed as part of the project work fits very well with teaching related topics such as planning analysis design and implementation For example the students learning agile methodologies such as Scrum must learn the necessary,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,be done at introductory I or intermediate M or advanced level A so that necessary skills and knowledge can be imparted as the student teams,progress,through their project work Table 2 Course structure mapping Unit Quarter Q1 Q2 Q3 Q4 U1 I A U2 M A U3 I M A,be done at introductory I or intermediate M or advanced level A so that necessary skills and knowledge can be imparted as the student teams progress through their project work Table 2 Course structure mapping Unit Quarter Q1 Q2 Q3 Q4 U1 I A U2 M A U3 I M A,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,to the depth of topics covered and the sequencing of the topics As it can be observed from this summary the restructured course has been,well,received by the students There are however some concerns regarding overemphasis on the user stories and use case diagrams This is understandable as some students,to the depth of topics covered and the sequencing of the topics As it can be observed from this summary the restructured course has been well received by the students There are however some concerns regarding overemphasis on the user stories and use case diagrams This is understandable as some students,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,the system On the other hand the sequencing of the topics covered was found to be in the proper order from the students perspective as,well,Regarding the project work Table 4 the feedback indicated that a team size of five average team size response of 4 851 is a good,the system On the other hand the sequencing of the topics covered was found to be in the proper order from the students perspective as well Regarding the project work Table 4 the feedback indicated that a team size of five average team size response of 4 851 is a good,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,week duration for each sprint is appropriate 3 787 1 267 Three sprints for the project work are adequate 3 851 1 122 Project work,improved,my project management skills 4 191 0 876 Project work improved my software system development skills 4 106 0 890 1 strongly disagree 2 disagree,week duration for each sprint is appropriate 3 787 1 267 Three sprints for the project work are adequate 3 851 1 122 Project work improved my project management skills 4 191 0 876 Project work improved my software system development skills 4 106 0 890 1 strongly disagree 2 disagree,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,5 LESSONS LEARNED This section presents key lessons learned based on employing the proposed approach in offering an SE course and offers suggestions for further,improvements,to such course offerings Although the content and sequence of topics covered were found to be appropriate and well appreciated by the students the real,5 LESSONS LEARNED This section presents key lessons learned based on employing the proposed approach in offering an SE course and offers suggestions for further improvements to such course offerings Although the content and sequence of topics covered were found to be appropriate and well appreciated by the students the real,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,sprint with a brief description of the scope prior to student teams making a short project proposal for review and approval by the instructor was,helpful,Expectations of system functionality to be delivered after each sprint as described in the above section turned out to be quite challenging to meet by,sprint with a brief description of the scope prior to student teams making a short project proposal for review and approval by the instructor was helpful Expectations of system functionality to be delivered after each sprint as described in the above section turned out to be quite challenging to meet by,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,of expectations in this regard can be i basic set up of the development and deployment environment with basic CRUD functionality of two to four,simple,classes from the problem domain in the first sprint ii implementation of transaction functionality with business logic in the second sprint and c implementation of,of expectations in this regard can be i basic set up of the development and deployment environment with basic CRUD functionality of two to four simple classes from the problem domain in the first sprint ii implementation of transaction functionality with business logic in the second sprint and c implementation of,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,implementation of reporting and dashboarding functionality to support managers in the last sprint of the project work Each student team submitted details of the sprint,progress,sprint plans with the selected user stories reports of sprint review and retrospective and burndown charts made using an Excel template provided to the teams,implementation of reporting and dashboarding functionality to support managers in the last sprint of the project work Each student team submitted details of the sprint progress sprint plans with the selected user stories reports of sprint review and retrospective and burndown charts made using an Excel template provided to the teams,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,cloud based apps e g Pivotal Tracker and incorporate project management activity into the assessment In this regard support from trained teaching assistants will be,helpful,especially when the class size is large Regarding the tools and development environment the following recommendations are made Using some popular full stack development environments,cloud based apps e g Pivotal Tracker and incorporate project management activity into the assessment In this regard support from trained teaching assistants will be helpful especially when the class size is large Regarding the tools and development environment the following recommendations are made Using some popular full stack development environments,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,recommendations are made Using some popular full stack development environments such as MERN or MEAN 16 and NextJS 17 for project work is expected to,ease,the development effort as there is extensive material tutorials and videos available for the students Different students in each team may specialize in one or,recommendations are made Using some popular full stack development environments such as MERN or MEAN 16 and NextJS 17 for project work is expected to ease the development effort as there is extensive material tutorials and videos available for the students Different students in each team may specialize in one or,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,The feedback from the students collected at the end of the semester reconfirms the suitability of the proposed structure The restructured course is expected to,benefit,both students and instructors in many ways Students are more likely to understand and appreciate the material covered as it builds on the practical experience,The feedback from the students collected at the end of the semester reconfirms the suitability of the proposed structure The restructured course is expected to benefit both students and instructors in many ways Students are more likely to understand and appreciate the material covered as it builds on the practical experience,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,instructors in many ways Students are more likely to understand and appreciate the material covered as it builds on the practical experience gained rather than,simply,on their prior knowledge The use of appropriate tools that offer increased visibility into the progress of various groups will benefit the instructors both in,instructors in many ways Students are more likely to understand and appreciate the material covered as it builds on the practical experience gained rather than simply on their prior knowledge The use of appropriate tools that offer increased visibility into the progress of various groups will benefit the instructors both in,2022
COMPUTE_Software Engineering Course Restructured to Support Agile Software Development Projects_2022_ACM._cleaned.txt,prior knowledge The use of appropriate tools that offer increased visibility into the progress of various groups will benefit the instructors both in continual monitoring,progress,and in feedback provision Although there will be some challenges in implementing the proposed structure the benefits of improved student engagement and learning outweigh the,prior knowledge The use of appropriate tools that offer increased visibility into the progress of various groups will benefit the instructors both in continual monitoring progress and in feedback provision Although there will be some challenges in implementing the proposed structure the benefits of improved student engagement and learning outweigh the,2022
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,past few years Educational games have always helped students by promoting participation and active learning It has helped them by motivating and bringing out the,best,ideas in them in order to understand a skill or a concept It is an emerging pedagogy This study discusses how games can help classroom,past few years Educational games have always helped students by promoting participation and active learning It has helped them by motivating and bringing out the best ideas in them in order to understand a skill or a concept It is an emerging pedagogy This study discusses how games can help classroom,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,student participation is also required to learn the skills Inculcating games in teaching helps students to participate actively in the classroom It brings out the,best,among them and in a way develops interpersonal skills Game based learning is one of the emerging research topics because of its several advantages over,student participation is also required to learn the skills Inculcating games in teaching helps students to participate actively in the classroom It brings out the best among them and in a way develops interpersonal skills Game based learning is one of the emerging research topics because of its several advantages over,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,the traditional learning normally does not offer 2 Since the introduction of Agile Software Development in 2001 it has gained a lot of popularity and,success,in the software industry 3 Industries have switched from the traditional way of software development to the Agile framework There are several benefits of Agile,the traditional learning normally does not offer 2 Since the introduction of Agile Software Development in 2001 it has gained a lot of popularity and success in the software industry 3 Industries have switched from the traditional way of software development to the Agile framework There are several benefits of Agile,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,from the traditional way of software development to the Agile framework There are several benefits of Agile software development over traditional methods Some of the,benefits,are it can handle the changing requirements flexibly it is a people centric development method where customer interaction is preferred over processes and tools customer,from the traditional way of software development to the Agile framework There are several benefits of Agile software development over traditional methods Some of the benefits are it can handle the changing requirements flexibly it is a people centric development method where customer interaction is preferred over processes and tools customer,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,the semester Verbal feedback was encouraged frequently from each student at several points in time during the semester including before during and after class as,well,as during office hours The instructor made relevant changes based on the feedback Certain changes were not technically possible like removing the assignment from the,the semester Verbal feedback was encouraged frequently from each student at several points in time during the semester including before during and after class as well as during office hours The instructor made relevant changes based on the feedback Certain changes were not technically possible like removing the assignment from the,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,achievable in eight minutes At the end of each sprint each team had to display their product The criteria were each sprint should add some,value,to the customer Then at the end of three sprints each team had to display the value chart on the white board This chart was,achievable in eight minutes At the end of each sprint each team had to display their product The criteria were each sprint should add some value to the customer Then at the end of three sprints each team had to display the value chart on the white board This chart was,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,sprints each team had to display the value chart on the white board This chart was plotted with time as the x axis and the,value,of the product as the y axis Students learned the process of slicing the user story to achievable slices understanding planning the sprint goals and,sprints each team had to display the value chart on the white board This chart was plotted with time as the x axis and the value of the product as the y axis Students learned the process of slicing the user story to achievable slices understanding planning the sprint goals and,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,Students were asked to write an assignment on the most productive team that they worked with in the past They had to write about the,best,and the worst thing that happened and a lesson that they learned while working with that team The focus of this activity was to introduce,Students were asked to write an assignment on the most productive team that they worked with in the past They had to write about the best and the worst thing that happened and a lesson that they learned while working with that team The focus of this activity was to introduce,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,their choice They were divided into three groups with 5 members in each team Every week they had to deliver working software that would add,value,to the client At the end of the semester they integrated each weeks features into a whole project This activity was designed to help students,their choice They were divided into three groups with 5 members in each team Every week they had to deliver working software that would add value to the client At the end of the semester they integrated each weeks features into a whole project This activity was designed to help students,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,used a combination of methodologies This helped them learn the concept of daily stand up meetings test driven development and how the only measure of,progress,in Agile is creating functional software They saw how Agile supports documentation and the concept of no documentation in agile is incorrect Apart from these,used a combination of methodologies This helped them learn the concept of daily stand up meetings test driven development and how the only measure of progress in Agile is creating functional software They saw how Agile supports documentation and the concept of no documentation in agile is incorrect Apart from these,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,conducted mid semester and the other was conducted after course completion Since the mid semester feedback was optional 11 students participated All of them had,positive,comments on the course Students mentioned that games were helping them to remember the concepts that were taught in class Most students easily learned Agile,conducted mid semester and the other was conducted after course completion Since the mid semester feedback was optional 11 students participated All of them had positive comments on the course Students mentioned that games were helping them to remember the concepts that were taught in class Most students easily learned Agile,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,Most students easily learned Agile concepts through games and even the ones who had difficulty grasping the concepts at first ended up finding the games,valuable,One student said the different set up took a little while to get the hang of due to constant work but overall the class is,Most students easily learned Agile concepts through games and even the ones who had difficulty grasping the concepts at first ended up finding the games valuable One student said the different set up took a little while to get the hang of due to constant work but overall the class is,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,with tricky parts The instructor has very clear knowledge on the course Instructor had organized many games according to the topic which made concepts very,easy,to understand Encourages class participation Encourages class participation Hence game based teaching can happen in a classroom It helps students to be motivated and helps,with tricky parts The instructor has very clear knowledge on the course Instructor had organized many games according to the topic which made concepts very easy to understand Encourages class participation Encourages class participation Hence game based teaching can happen in a classroom It helps students to be motivated and helps,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,class participation Hence game based teaching can happen in a classroom It helps students to be motivated and helps them understand the concepts and skills,better,than the traditional way of teaching RQ2 Can students understand and apply the concepts taught through games to solve real world problems Students were asked,class participation Hence game based teaching can happen in a classroom It helps students to be motivated and helps them understand the concepts and skills better than the traditional way of teaching RQ2 Can students understand and apply the concepts taught through games to solve real world problems Students were asked,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,based projects The x axis represents the number of students 31 and the y axis represents the points received by each student 21 students performed,better,in the game based assignments over writing assignments 10 students performed better in writing assignment than game based assignment This study indicates that both writing,based projects The x axis represents the number of students 31 and the y axis represents the points received by each student 21 students performed better in the game based assignments over writing assignments 10 students performed better in writing assignment than game based assignment This study indicates that both writing,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,writing assignments 10 students performed better in writing assignment than game based assignment This study indicates that both writing based and game based learning are,effective,Teaching should be a combination of various learning aids The feedback from students showed that they enjoyed the course and would use the concepts taught,writing assignments 10 students performed better in writing assignment than game based assignment This study indicates that both writing based and game based learning are effective Teaching should be a combination of various learning aids The feedback from students showed that they enjoyed the course and would use the concepts taught,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,up charts testing of applications daily stand up meetings The games and activities are discussed in detail below TABLE II RESULTS OF BALLPOINT GAME SHOWING,improvement,Iterations Time in minutes 1 2 2 2 3 2 4166 5 1 20 9 6 1 20 12 7 0 5 20 9 8,up charts testing of applications daily stand up meetings The games and activities are discussed in detail below TABLE II RESULTS OF BALLPOINT GAME SHOWING improvement Iterations Time in minutes 1 2 2 2 3 2 4166 5 1 20 9 6 1 20 12 7 0 5 20 9 8,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,course subject It will help me a lot when I move out of the university and into the IT world VII LESSONS LEARNED AND FUTURE,improvements,The lessons that were learned are as follows First the assignment questions need to change Although most of the assignments were used from their textbook,course subject It will help me a lot when I move out of the university and into the IT world VII LESSONS LEARNED AND FUTURE improvements The lessons that were learned are as follows First the assignment questions need to change Although most of the assignments were used from their textbook,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,comparison to the credit they received In the future the points will be modified and a FAQ will be given so that students understand the,benefits,of the discussion board FAQ is important because some students after repetitive reminders still tried to complete the DBs requirement in one sitting Third the,comparison to the credit they received In the future the points will be modified and a FAQ will be given so that students understand the benefits of the discussion board FAQ is important because some students after repetitive reminders still tried to complete the DBs requirement in one sitting Third the,2019
CSCI_Software_Engineers_at_Play_2019_IEEE_cleaned.txt,FAQ is important because some students after repetitive reminders still tried to complete the DBs requirement in one sitting Third the students did not do,well,in listing the working agreement They had difficulties understanding the concept that a software team could be flexible Spring 2019 was the first semester this,FAQ is important because some students after repetitive reminders still tried to complete the DBs requirement in one sitting Third the students did not do well in listing the working agreement They had difficulties understanding the concept that a software team could be flexible Spring 2019 was the first semester this,2019
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,believe that eXtreme Programming XP could be made more secure and that getting students to think about how this might be done would make a,positive,contribution to the course content XP does seem to have some shortfalls in terms of producing secure software The course attempts to get the students,believe that eXtreme Programming XP could be made more secure and that getting students to think about how this might be done would make a positive contribution to the course content XP does seem to have some shortfalls in terms of producing secure software The course attempts to get the students,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,environment This is an important point because there is more and more flexibility in the XP and agile process software development culture This makes it,easier,to modify agile processes in order to make them more secure Schatz and Abdelshafi 6 discuss how Scrum was successfully introduced into their corporate environment,environment This is an important point because there is more and more flexibility in the XP and agile process software development culture This makes it easier to modify agile processes in order to make them more secure Schatz and Abdelshafi 6 discuss how Scrum was successfully introduced into their corporate environment,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,brief introduction to Open Source software development After completing our discussion of software processes we move on to professional issues for software engineers We discuss,well,known software disasters like the Therac 25 accidents discussed by Leveson et al 8 and why software fails using the framework provided by Charette 9,brief introduction to Open Source software development After completing our discussion of software processes we move on to professional issues for software engineers We discuss well known software disasters like the Therac 25 accidents discussed by Leveson et al 8 and why software fails using the framework provided by Charette 9,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,16 Viega and McGraw only mention eXtreme Programming briefly and only once and this is what they had to say In general the clearer and,easier,the specification the better the resulting system Unfortunately extreme programming XP seems to run counter to this old fashioned view In our opinion XP will,16 Viega and McGraw only mention eXtreme Programming briefly and only once and this is what they had to say In general the clearer and easier the specification the better the resulting system Unfortunately extreme programming XP seems to run counter to this old fashioned view In our opinion XP will,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,goals or security goals naturally leads into our next topic agile processes and security 5 Agile processes and security the Matrix The author does his,best,to get students to see the issue of agile processes and security as an interesting one In particular looking at this issue gives us an,goals or security goals naturally leads into our next topic agile processes and security 5 Agile processes and security the Matrix The author does his best to get students to see the issue of agile processes and security as an interesting one In particular looking at this issue gives us an,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,repository Daily stand up meetings Do not add functionality the customer does not want No overtime Forty hour work week Redesign code to keep it,simple,and correct refactoring The goal is to get students to see the possible conflicts and tensions between the security principles and goals and the XP,repository Daily stand up meetings Do not add functionality the customer does not want No overtime Forty hour work week Redesign code to keep it simple and correct refactoring The goal is to get students to see the possible conflicts and tensions between the security principles and goals and the XP,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,sometimes have difficulty seeing these relationships They seem to get more turned on when the discussion turns to suggesting ways in which XP can be,improved,in terms of security 6 Some recommendations for making XP more secure The students have come up with some interesting ideas for making XP more,sometimes have difficulty seeing these relationships They seem to get more turned on when the discussion turns to suggesting ways in which XP can be improved in terms of security 6 Some recommendations for making XP more secure The students have come up with some interesting ideas for making XP more,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,the code review process The security engineer should be involved in training the developers in terms of secure coding practices so that the quality assurance,benefits,of pair programming will carry over into the realm of writing secure code Unit testing must be expanded to include static testing tools and also,the code review process The security engineer should be involved in training the developers in terms of secure coding practices so that the quality assurance benefits of pair programming will carry over into the realm of writing secure code Unit testing must be expanded to include static testing tools and also,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,results of the security tests into the iterative process including the daily stand up meetings Acceptance testing must be guided by the security engineer as,well,as by the customer Here are some additional points relating to how XP Secure might differ from XP The daily stand up meetings must include,results of the security tests into the iterative process including the daily stand up meetings Acceptance testing must be guided by the security engineer as well as by the customer Here are some additional points relating to how XP Secure might differ from XP The daily stand up meetings must include,2008
CSEET_Getting_Students_to_Think_About_How_Agile_Processes_can_be_Made_More_Secure_2008_IEEE_cleaned.txt,made is that all refactored code must be analyzed and tested from a security perspective Any user story or security story that has not been,successfully,tested from a security perspective cannot be considered complete and cannot be included in a product release 7 Conclusions Agile processes are increasingly important in,made is that all refactored code must be analyzed and tested from a security perspective Any user story or security story that has not been successfully tested from a security perspective cannot be considered complete and cannot be included in a product release 7 Conclusions Agile processes are increasingly important in,2008
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,skills a capacity to learn new skills and procedures and a capacity for cooperation and teamwork In each of these cases the university rankings are,well,below those of business particularly in the area of communication skills 2 Theoretical knowledge in a professional field and a capacity to use computer technology,skills a capacity to learn new skills and procedures and a capacity for cooperation and teamwork In each of these cases the university rankings are well below those of business particularly in the area of communication skills 2 Theoretical knowledge in a professional field and a capacity to use computer technology,2003
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,is strongly recommended and the customer should be present Mller and Tichy 6 developed an extreme programming course where in the first three weeks students,solved,small programming exercises to familiarize themselves with the programming environment and to learn XP practices The exercises introduced jUnit the testing framework used throughout the,is strongly recommended and the customer should be present Mller and Tichy 6 developed an extreme programming course where in the first three weeks students solved small programming exercises to familiarize themselves with the programming environment and to learn XP practices The exercises introduced jUnit the testing framework used throughout the,2003
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,pair programming at all times following the recommendations of Williams et at 5 8 The students are evaluated in two ways according to their individual,achievements,and their behavior working in the team Every week the teacher proposes a reading assignment for the students They have to read a text and,pair programming at all times following the recommendations of Williams et at 5 8 The students are evaluated in two ways according to their individual achievements and their behavior working in the team Every week the teacher proposes a reading assignment for the students They have to read a text and,2003
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,teacher has proposed a group dynamic so that students could get to know each other On the following class theyve been asked if they felt,better,posing questions and making comments after knowing their classmates For 63 of them the group dynamic has been really useful and gave them more confidence,teacher has proposed a group dynamic so that students could get to know each other On the following class theyve been asked if they felt better posing questions and making comments after knowing their classmates For 63 of them the group dynamic has been really useful and gave them more confidence,2003
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,learning As the evaluation takes place every week the teacher sends the evaluation results to the students every week which gives them feedback about their,achievements,Among the students 83 believe this feedback is very useful and helps to motivated them so that they become more interested on the course When,learning As the evaluation takes place every week the teacher sends the evaluation results to the students every week which gives them feedback about their achievements Among the students 83 believe this feedback is very useful and helps to motivated them so that they become more interested on the course When,2003
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,course When asked whether this evaluation system should be applied to other technical disciplines 89 of the students answered affirmatively Pair programming was also very,well,accepted by students All of them said they enjoyed the first exercises with pairs In particular they were also very enthusiastic about doing their exercises,course When asked whether this evaluation system should be applied to other technical disciplines 89 of the students answered affirmatively Pair programming was also very well accepted by students All of them said they enjoyed the first exercises with pairs In particular they were also very enthusiastic about doing their exercises,2003
CSEET_Reviewing_the_curriculum_of_software_engineering_undergraduate_courses_to_incorporate_communication_and_interpersonal_skills_teaching_2003_IEEE_cleaned.txt,were also very enthusiastic about doing their exercises at the class For 94 of the students doing their exercises at the class is far more,effective,than doing them at home They said they learn more this way because they have the opportunity to discuss some ideas with their friends about,were also very enthusiastic about doing their exercises at the class For 94 of the students doing their exercises at the class is far more effective than doing them at home They said they learn more this way because they have the opportunity to discuss some ideas with their friends about,2003
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,AbstractAgile methodologies like Scrum or Extreme Programming have come a long way over the last fifteen years Recent quantitative studies show that many companies have,successfully,adopted agile methodologies It was found that in agile software development experience leads to collaboration It could also be shown that successful professional agile teams,AbstractAgile methodologies like Scrum or Extreme Programming have come a long way over the last fifteen years Recent quantitative studies show that many companies have successfully adopted agile methodologies It was found that in agile software development experience leads to collaboration It could also be shown that successful professional agile teams,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,the setup and observations of an agile student project are presented and different online collaboration tools are discussed It is argued that software engineering education,benefits,significantly from embracing the modern collaboration tools the Internet has made available Keywords Software Development Curriculum Collaboration Agile I INTRODUCTION Agile software development has become,the setup and observations of an agile student project are presented and different online collaboration tools are discussed It is argued that software engineering education benefits significantly from embracing the modern collaboration tools the Internet has made available Keywords Software Development Curriculum Collaboration Agile I INTRODUCTION Agile software development has become,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,experience in agile development The studies show that agile methodologies are of high practical relevance Furthermore it appears that there is a high demand for,well,educated software engineers in the agile domain and that there is a significant lack of knowledge in agile development Another phenomenon which was found was,experience in agile development The studies show that agile methodologies are of high practical relevance Furthermore it appears that there is a high demand for well educated software engineers in the agile domain and that there is a significant lack of knowledge in agile development Another phenomenon which was found was,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,tools as enablers for software development in distributed teams In this paper we present this new curriculum approach describe their first experiences and discuss further,improvements,The rest of the paper is structured as follows Section two discusses related work Section three presents results from the various studies and their impact,tools as enablers for software development in distributed teams In this paper we present this new curriculum approach describe their first experiences and discuss further improvements The rest of the paper is structured as follows Section two discusses related work Section three presents results from the various studies and their impact,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,allows an approach where teachers truly deal with the important concepts first We use Java as programming language and BlueJ 12 BlueJ is a Java,simple,integrated development environment IDE that is being developed and maintained at the University of Kent at Canterbury UK and La Trobe University Melbourne explicitly as,allows an approach where teachers truly deal with the important concepts first We use Java as programming language and BlueJ 12 BlueJ is a Java simple integrated development environment IDE that is being developed and maintained at the University of Kent at Canterbury UK and La Trobe University Melbourne explicitly as,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,Melbourne explicitly as an environment for teaching introductory object oriented programming 12 With BlueJ students can create and interact with objects directly This has the,advantage,that important object oriented concepts such as classes objects methods and parameters can easily be discussed in a concrete manner before looking at the details,Melbourne explicitly as an environment for teaching introductory object oriented programming 12 With BlueJ students can create and interact with objects directly This has the advantage that important object oriented concepts such as classes objects methods and parameters can easily be discussed in a concrete manner before looking at the details,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,syntax After the students become familiar with Java they are encouraged to switch to a professional IDE like Eclipse 13 Flipping the classroom has the,benefit,that students can explore topics in greater depth during class time Solving and discussing programming exercises in groups or the whole class create meaningful learning,syntax After the students become familiar with Java they are encouraged to switch to a professional IDE like Eclipse 13 Flipping the classroom has the benefit that students can explore topics in greater depth during class time Solving and discussing programming exercises in groups or the whole class create meaningful learning,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,greater depth during class time Solving and discussing programming exercises in groups or the whole class create meaningful learning opportunities The teacher explicitly chooses the,best,suited exercises to reinforce the understanding of the topic In a flipped classroom content delivery may take a variety of forms We use a combination,greater depth during class time Solving and discussing programming exercises in groups or the whole class create meaningful learning opportunities The teacher explicitly chooses the best suited exercises to reinforce the understanding of the topic In a flipped classroom content delivery may take a variety of forms We use a combination,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,textbook together with the information on the LMS3 delivers all the necessary content outside of the classroom Online quizzes are used to assess the students,progress,and give them instant feedback Furthermore the quizzes are important because they are the basis for choosing the above mentioned programming exercises Next to the,textbook together with the information on the LMS3 delivers all the necessary content outside of the classroom Online quizzes are used to assess the students progress and give them instant feedback Furthermore the quizzes are important because they are the basis for choosing the above mentioned programming exercises Next to the,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,are the basis for choosing the above mentioned programming exercises Next to the programming introduction the students learn to write automatic tests with JUnit the,benefits,of clean code 14 and how to use a code versioning system CVS In the first year there is also a project module Table I,are the basis for choosing the above mentioned programming exercises Next to the programming introduction the students learn to write automatic tests with JUnit the benefits of clean code 14 and how to use a code versioning system CVS In the first year there is also a project module Table I,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,larger software application in an agile team in the second project module Details and motivation will be presented in section V B 3 The Internet,simplifies,flipping very much We use a web based e learning platform for teaching learning assessment and communication LMS can be used to provide educational content,larger software application in an agile team in the second project module Details and motivation will be presented in section V B 3 The Internet simplifies flipping very much We use a web based e learning platform for teaching learning assessment and communication LMS can be used to provide educational content,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,1 Maturity leads to Collaboration In 23 it was found that in agile software development experience leads to collaboration It could also be shown that,successful,professional agile teams tend to use more collaboration practices Unfortunately this transition to more and better collaboration tends to take many years This raises two,1 Maturity leads to Collaboration In 23 it was found that in agile software development experience leads to collaboration It could also be shown that successful professional agile teams tend to use more collaboration practices Unfortunately this transition to more and better collaboration tends to take many years This raises two,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,properly Still professional and educational projects differ in many ways and we have to be careful not to end up with mimicry Some of the,advantages,in an educational setup are x Students can choose a project vision together with the coach x Project has a small scope and no real,properly Still professional and educational projects differ in many ways and we have to be careful not to end up with mimicry Some of the advantages in an educational setup are x Students can choose a project vision together with the coach x Project has a small scope and no real,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,Students are less experienced In the classroom it is possible to set up an environment with little or no impediments which makes this transition much,easier,and faster The reminder of this chapter describes the setup of the student projects and the experience made in respect to agile project management and,Students are less experienced In the classroom it is possible to set up an environment with little or no impediments which makes this transition much easier and faster The reminder of this chapter describes the setup of the student projects and the experience made in respect to agile project management and,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,development teams generate too much complexity for an empirical process like Scrum to manage What about the optimal size of student teams The authors had,best,results when the team size was at the upper limit In smaller student teams there is a risk that the students do not realize the,development teams generate too much complexity for an empirical process like Scrum to manage What about the optimal size of student teams The authors had best results when the team size was at the upper limit In smaller student teams there is a risk that the students do not realize the,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,seen as an overhead and in the worst case only applied because the coach says so In properly sized teams project management is crucial for,success,Another benefit of larger teams is that the students get more work done which results in more realistic software applications In our experience optimal student,seen as an overhead and in the worst case only applied because the coach says so In properly sized teams project management is crucial for success Another benefit of larger teams is that the students get more work done which results in more realistic software applications In our experience optimal student,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,test environment ready before they actually start coding Therefore we introduced a Sprint Zero before the official project start The goal of Sprint Zero is,simple,All teams are able to do automatic testing The students have to implement a complete test case which demonstrates their ability to test the application,test environment ready before they actually start coding Therefore we introduced a Sprint Zero before the official project start The goal of Sprint Zero is simple All teams are able to do automatic testing The students have to implement a complete test case which demonstrates their ability to test the application,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,week Week 16 Students and faculty are informed about the project module and asked to send in project ideas Kick off Presentation and election of,best,suited project ideas Composition of student teams Sprint 0 Students setup complete automatic testing and building environment Introduction to IT infrastructure Sprint 0 Students setup,week Week 16 Students and faculty are informed about the project module and asked to send in project ideas Kick off Presentation and election of best suited project ideas Composition of student teams Sprint 0 Students setup complete automatic testing and building environment Introduction to IT infrastructure Sprint 0 Students setup,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,end of the project module all the teams present their application in the plenum This is a great opportunity for all teams to present their,achievements,The presentation takes about 20 minutes and consists of the project vision architecture and design of the application as well as a demonstration C Internet,end of the project module all the teams present their application in the plenum This is a great opportunity for all teams to present their achievements The presentation takes about 20 minutes and consists of the project vision architecture and design of the application as well as a demonstration C Internet,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,The presentation takes about 20 minutes and consists of the project vision architecture and design of the application as well as a demonstration C Internet,simplifies,Collaboration In the educational student project the team is mostly not co located Additionally the students often work at different times This makes collaboration difficult,The presentation takes about 20 minutes and consists of the project vision architecture and design of the application as well as a demonstration C Internet simplifies Collaboration In the educational student project the team is mostly not co located Additionally the students often work at different times This makes collaboration difficult,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,the single team members and the coach possible Without the Internet and its online collaboration tools distributed student teams would not be feasible The tools,simplify,collaboration among students and make progress visible for the coach The same is true for problems and difficulties 1 Jenkins CI Server Jenkins 25 is,the single team members and the coach possible Without the Internet and its online collaboration tools distributed student teams would not be feasible The tools simplify collaboration among students and make progress visible for the coach The same is true for problems and difficulties 1 Jenkins CI Server Jenkins 25 is,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,1 Jenkins CI Server Jenkins 25 is an open source continuous integration server It provides immediate feedback of the build status and the overall project,progress,both to the students and the coach 2 GIT and GitHub Git 26 is a distributed code versioning system CVS designed to handle everything from,1 Jenkins CI Server Jenkins 25 is an open source continuous integration server It provides immediate feedback of the build status and the overall project progress both to the students and the coach 2 GIT and GitHub Git 26 is a distributed code versioning system CVS designed to handle everything from,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,GIT and GitHub Git 26 is a distributed code versioning system CVS designed to handle everything from small to very large projects with speed and,efficiency,Its workflow make it particularly well suited for distributed software development teams Git is the successor of SVN subversion and is rapidly becoming the most,GIT and GitHub Git 26 is a distributed code versioning system CVS designed to handle everything from small to very large projects with speed and efficiency Its workflow make it particularly well suited for distributed software development teams Git is the successor of SVN subversion and is rapidly becoming the most,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,projects GitHub provides several collaboration features such as bug tracking feature requests task management and wikis for every project 3 Trello Trello is a very,simple,collaboration tool for all kind of projects Its main advantage is its simplicity Trello runs in the web browser and almost on any mobile device,projects GitHub provides several collaboration features such as bug tracking feature requests task management and wikis for every project 3 Trello Trello is a very simple collaboration tool for all kind of projects Its main advantage is its simplicity Trello runs in the web browser and almost on any mobile device,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,the different projects 4 OpenOLAT Learning Management System OpenOLAT 30 is a web based e learning platform for teaching learning assessment and collaboration OpenOLAT is,simple,and intuitive to use 5 Project Wiki In the student projects a project wiki is used for documentation purposes GitHub comes with a project wiki,the different projects 4 OpenOLAT Learning Management System OpenOLAT 30 is a web based e learning platform for teaching learning assessment and collaboration OpenOLAT is simple and intuitive to use 5 Project Wiki In the student projects a project wiki is used for documentation purposes GitHub comes with a project wiki,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,In the round we a total of 45 students and have setup five teams each with nine students In the first year we observed an,improvement,of the programming skills and code quality The object first approach with BlueJ 5 12 has clearly improved the understanding and depth of important OO,In the round we a total of 45 students and have setup five teams each with nine students In the first year we observed an improvement of the programming skills and code quality The object first approach with BlueJ 5 12 has clearly improved the understanding and depth of important OO,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,depth of important OO concepts skills of most students Paying special attention to technical practices like automatic unit tests and clean code has had a,positive,effect on design quality and documentation Applying a Learning Management System LMS was helpful for collaboration and presentation of material This was especially true in,depth of important OO concepts skills of most students Paying special attention to technical practices like automatic unit tests and clean code has had a positive effect on design quality and documentation Applying a Learning Management System LMS was helpful for collaboration and presentation of material This was especially true in,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,new Computer Science studies all new lectures and modules were evaluated systematically project module in the fourth semester The students were asked what they liked,best,Its great that we do Agile Practical relevance of the topics presented Good coordination of lecture and project module Best project module so far I,new Computer Science studies all new lectures and modules were evaluated systematically project module in the fourth semester The students were asked what they liked best Its great that we do Agile Practical relevance of the topics presented Good coordination of lecture and project module Best project module so far I,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,project module so far I liked that we could choose the projects ourselves Scrum From part time students we often get feedback that they can,benefit,of the agile practices directly in their job Scrum in combination with the online collaboration tools made it possible to keep the overview of the,project module so far I liked that we could choose the projects ourselves Scrum From part time students we often get feedback that they can benefit of the agile practices directly in their job Scrum in combination with the online collaboration tools made it possible to keep the overview of the,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,it possible to keep the overview of the student projects Coaching the projects to desired outcome and assessing the team members was possible in an,efficient,and transparent manner projects With respect to evaluation and assessment of the individual students it is very hard to find out who did what and,it possible to keep the overview of the student projects Coaching the projects to desired outcome and assessing the team members was possible in an efficient and transparent manner projects With respect to evaluation and assessment of the individual students it is very hard to find out who did what and,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,is very hard to find out who did what and how much in the project The team setup is critical with respect to finding a,well,balanced team with the necessary level of knowhow motivation and commitment Another critical issue are the Product Owner and Scrum Master roles We let the,is very hard to find out who did what and how much in the project The team setup is critical with respect to finding a well balanced team with the necessary level of knowhow motivation and commitment Another critical issue are the Product Owner and Scrum Master roles We let the,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,mature agile teams apply more collaboration practices Therefore it is important that the students learn about collaboration practices and how to live them This is,best,realized in a real agile project This paper discusses how educational projects can be setup in such a way that students can experience the importance,mature agile teams apply more collaboration practices Therefore it is important that the students learn about collaboration practices and how to live them This is best realized in a real agile project This paper discusses how educational projects can be setup in such a way that students can experience the importance,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,experience the importance of collaboration The Internet and its plethora of online tools act as an enabler of collaboration in agile educational software projects The,benefits,of online collaboration tools make it possible for the lecturer to coach and steer student software development projects and last but not least assess the,experience the importance of collaboration The Internet and its plethora of online tools act as an enabler of collaboration in agile educational software projects The benefits of online collaboration tools make it possible for the lecturer to coach and steer student software development projects and last but not least assess the,2016
CSEET_Teaching_Agile_Collaboration_Skills_in_the_Classroom_2016_IEEE.txt,lecturer to coach and steer student software development projects and last but not least assess the students The authors are convinced that software engineering education,benefits,significantly by embracing the modern collaboration tools the Internet has made available,lecturer to coach and steer student software development projects and last but not least assess the students The authors are convinced that software engineering education benefits significantly by embracing the modern collaboration tools the Internet has made available,2016
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,a way to enlarge critically small departments We show how to teach XP using class projects We also discuss some of the problems brought to,effective,distance education by this method and their solutions We essentially find in this case study that XP can be studied remotely and that distance education,a way to enlarge critically small departments We show how to teach XP using class projects We also discuss some of the problems brought to effective distance education by this method and their solutions We essentially find in this case study that XP can be studied remotely and that distance education,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,engineering staff 1 Teaching agile methods We have frequently taught software engineering using practical projects EXtreme Programming XP is no different in fact it is,easier,to present with a project in the course because of the brevity of the books describing it The syllabus in Appendix A is representative of,engineering staff 1 Teaching agile methods We have frequently taught software engineering using practical projects EXtreme Programming XP is no different in fact it is easier to present with a project in the course because of the brevity of the books describing it The syllabus in Appendix A is representative of,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,creating a virtual computer science department There is tremendous difficulty recruiting suitable faculty for the computer science departments of small primarily liberal arts colleges One,solution,may be to combine several departments of computer science and offer courses in which all could participate This has been done elsewhere for departments of,creating a virtual computer science department There is tremendous difficulty recruiting suitable faculty for the computer science departments of small primarily liberal arts colleges One solution may be to combine several departments of computer science and offer courses in which all could participate This has been done elsewhere for departments of,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,faculty and which courses to offer As far as the faculty are concerned the instructor of a course of this type should be outgoing no,easy,task to find this type of person in many computer science departments comfortable with the technology and willing to work hard at contacts with the,faculty and which courses to offer As far as the faculty are concerned the instructor of a course of this type should be outgoing no easy task to find this type of person in many computer science departments comfortable with the technology and willing to work hard at contacts with the,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,This of course makes it a little harder on the distance instructor in that they have to be aware of different styles but it is,easier,than teaching them or reaching a multi institutional agreement on them 2 1 Reconciling calendars Alleghenys spring semester is a day shorter at both the,This of course makes it a little harder on the distance instructor in that they have to be aware of different styles but it is easier than teaching them or reaching a multi institutional agreement on them 2 1 Reconciling calendars Alleghenys spring semester is a day shorter at both the,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,each schools contingent told to work during the week that their school was in session checked by the weekly report and by making a key,progress,milestone due the week when classes resumed at both locations Actually the very best item of support was a course web site This used WebCT,each schools contingent told to work during the week that their school was in session checked by the weekly report and by making a key progress milestone due the week when classes resumed at both locations Actually the very best item of support was a course web site This used WebCT,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,designed and presented course but evaluations of those topics were similar to the previous semesters Regardless the Allegheny students seem to have liked this course,better,than the CMU students Subjectively the instructor considered the Allegheny students to be more qualified overall Perhaps being smarter and not feeling left out are,designed and presented course but evaluations of those topics were similar to the previous semesters Regardless the Allegheny students seem to have liked this course better than the CMU students Subjectively the instructor considered the Allegheny students to be more qualified overall Perhaps being smarter and not feeling left out are,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,than the CMU students Subjectively the instructor considered the Allegheny students to be more qualified overall Perhaps being smarter and not feeling left out are,positives,toward success Unfortunately the number of Allegheny students eventually four prevents statistically significant analysis of data 2 5 Future funding The same foundation that funded,than the CMU students Subjectively the instructor considered the Allegheny students to be more qualified overall Perhaps being smarter and not feeling left out are positives toward success Unfortunately the number of Allegheny students eventually four prevents statistically significant analysis of data 2 5 Future funding The same foundation that funded,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,Driver was doing Depending on the bandwidth the Navigators would comment via the computers themselves or telephone 4 Conclusion From the instructors viewpoint the class,successfully,proved the idea of synchronous distance education for this topic Even though he has experience in synchronous distributed classes it was a decade ago His,Driver was doing Depending on the bandwidth the Navigators would comment via the computers themselves or telephone 4 Conclusion From the instructors viewpoint the class successfully proved the idea of synchronous distance education for this topic Even though he has experience in synchronous distributed classes it was a decade ago His,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,concerning the selection and adaptation of software development processes How does the course develop skills The course develops the advanced skills that are needed for,success,in the diverse discipline of software development For example students will read original articles and books from leading software development practitioners in an attempt to,concerning the selection and adaptation of software development processes How does the course develop skills The course develops the advanced skills that are needed for success in the diverse discipline of software development For example students will read original articles and books from leading software development practitioners in an attempt to,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,the creation of software is central to the field Students that have the ability to analyze compare and use different software development approaches will be,better,equipped to function as well rounded computer scientists Agile programming grading criteria 1 Projects 35 the evaluation of agile methods for application to a specific,the creation of software is central to the field Students that have the ability to analyze compare and use different software development approaches will be better equipped to function as well rounded computer scientists Agile programming grading criteria 1 Projects 35 the evaluation of agile methods for application to a specific,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,means that you fall short of an acceptable answer a means that the answer is acceptable and a means that your answer really impressed us,positively,i e we did not think of it 3 Participation 10 An evaluation of the ability and willingness to knowledgeably participate in class discussions Attendance,means that you fall short of an acceptable answer a means that the answer is acceptable and a means that your answer really impressed us positively i e we did not think of it 3 Participation 10 An evaluation of the ability and willingness to knowledgeably participate in class discussions Attendance,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,the paper on Problem Frames Base your story development p 88 of Beck00 on the last iteration there Decompose further if possible Third program a,solution,using XP while tracking the following metrics 1 Time on task i e hours and minutes doing problem work 2 Time on course i e,the paper on Problem Frames Base your story development p 88 of Beck00 on the last iteration there Decompose further if possible Third program a solution using XP while tracking the following metrics 1 Time on task i e hours and minutes doing problem work 2 Time on course i e,2005
CSEET_Teaching_eXtreme_Programming_Remotely_2005_IEEE_cleaned.txt,code 25 February Revised stories and estimates for Cycle III 4 March Cycle III code assessment of XP as a method including utility appropriateness and,ease,of use A final evaluation of the metrics I recommend establishing a web site for the project,code 25 February Revised stories and estimates for Cycle III 4 March Cycle III code assessment of XP as a method including utility appropriateness and ease of use A final evaluation of the metrics I recommend establishing a web site for the project,2005
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,Fundamentally the software factory model seeks to integrate the academic and industrial sectors in order to improve the educational experience of students while simultaneously providing,benefits,to universities and business 2 3 4 In fact there a variety of software factories currently in existence in both Europe and the US that,Fundamentally the software factory model seeks to integrate the academic and industrial sectors in order to improve the educational experience of students while simultaneously providing benefits to universities and business 2 3 4 In fact there a variety of software factories currently in existence in both Europe and the US that,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,universities and business 2 3 4 In fact there a variety of software factories currently in existence in both Europe and the US that have,successfully,undertaken multiple collaborative projects 5 For example a group in the University of Helsinki created a software factory to support education research and entrepreneurship while,universities and business 2 3 4 In fact there a variety of software factories currently in existence in both Europe and the US that have successfully undertaken multiple collaborative projects 5 For example a group in the University of Helsinki created a software factory to support education research and entrepreneurship while,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,CS and non CS and acquire their positions through a standard interview process There have been no regular employees other than students To maintain an,effective,level of personnel obtaining funding is a key aspect of the ASF and a core responsibility of its Director Historically this funding has come from,CS and non CS and acquire their positions through a standard interview process There have been no regular employees other than students To maintain an effective level of personnel obtaining funding is a key aspect of the ASF and a core responsibility of its Director Historically this funding has come from,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,priorities Some of these have included 1 Classroom Support The ASF has provided maintenance services for software developed in the CS 4540 5540 course as,well,as guidance and mentoring to students currently developing projects as part of this course This improves the educational experience in this course in two ways,priorities Some of these have included 1 Classroom Support The ASF has provided maintenance services for software developed in the CS 4540 5540 course as well as guidance and mentoring to students currently developing projects as part of this course This improves the educational experience in this course in two ways,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,to other more experienced students not just the instructor to ask questions about the entire software development process and specific technologies 2 Service and Training,benefits,to students include the addition of a service learning component to existing software development courses and the hands on training and experience that comes from,to other more experienced students not just the instructor to ask questions about the entire software development process and specific technologies 2 Service and Training benefits to students include the addition of a service learning component to existing software development courses and the hands on training and experience that comes from,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,key goal of improving water quality in the Toledo Metro area 12 3 Virtual Token Economy an educational app designed to motivate younger students to,improved,learning was developed in conjunction with the University of Memphis 4 How Many a game like app targeted at improving the mathematical ability of students,key goal of improving water quality in the Toledo Metro area 12 3 Virtual Token Economy an educational app designed to motivate younger students to improved learning was developed in conjunction with the University of Memphis 4 How Many a game like app targeted at improving the mathematical ability of students,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,issue related to any entity like the ASF is the continual funding of personnel and equipment Over the years the ASF has had support and,success,from various funding sources including university and departmental resource support grant funding and project based funding This has allowed for the active employment of between,issue related to any entity like the ASF is the continual funding of personnel and equipment Over the years the ASF has had support and success from various funding sources including university and departmental resource support grant funding and project based funding This has allowed for the active employment of between,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,property concerns the ASF has been shying away from commercial projects and focusing on service learning projects centered on university departments programs and research as,well,as pro bono projects for non profits In recent years the number of internally sponsored projects has decreased due to the increasing budget constraints many,property concerns the ASF has been shying away from commercial projects and focusing on service learning projects centered on university departments programs and research as well as pro bono projects for non profits In recent years the number of internally sponsored projects has decreased due to the increasing budget constraints many,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,was developed as a method for private entities to show their support for the ASF and the Department of Computer Science through monetary donations that,benefit,these same entities The corporate memberships support many facets of the ASF including scholarships student wages hardware and software for development projects and professional training,was developed as a method for private entities to show their support for the ASF and the Department of Computer Science through monetary donations that benefit these same entities The corporate memberships support many facets of the ASF including scholarships student wages hardware and software for development projects and professional training,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,the mission of the ASF is not to make profit but to educate students in software engineering practices through hands on engagement In addition the,easiest,and also a major pathway for ASF projects the CS 4540 5550 course is typically only offered during one semester of the year historically the,the mission of the ASF is not to make profit but to educate students in software engineering practices through hands on engagement In addition the easiest and also a major pathway for ASF projects the CS 4540 5550 course is typically only offered during one semester of the year historically the,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,a faculty member who is both capable and willing to serve in the position This leads to changes of leadership management that can be both,beneficial,and detrimental 4 Fulfilling Educational Mission Recently the CS Department raised the question that with the significant amount of time and effort put into the,a faculty member who is both capable and willing to serve in the position This leads to changes of leadership management that can be both beneficial and detrimental 4 Fulfilling Educational Mission Recently the CS Department raised the question that with the significant amount of time and effort put into the,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,9 student employees at any given time in a department of 300 students the student impact seems limited Others argue that the ASF provides a,valuable,experience for those involved and a unique opportunity for student recruitment and marketing While there is truth in both of these arguments the discussion is,9 student employees at any given time in a department of 300 students the student impact seems limited Others argue that the ASF provides a valuable experience for those involved and a unique opportunity for student recruitment and marketing While there is truth in both of these arguments the discussion is,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,the development pace and quality is lower than the typical professional grade Instead find ways to allow corporate entities to contribute funds while gaining some,benefit,such as recognition access to career fairs and or additional early exposure to students 3 Focus on the non profit and research sectors Following from,the development pace and quality is lower than the typical professional grade Instead find ways to allow corporate entities to contribute funds while gaining some benefit such as recognition access to career fairs and or additional early exposure to students 3 Focus on the non profit and research sectors Following from,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,type should be centered on student experiences while serving the community Providing services to non profit organizations is fulfilling for student employees and of great,benefit,to the community Developing research software enables undergraduate research and helps students gain interest in post baccalaureate studies This also allows the entity to participate,type should be centered on student experiences while serving the community Providing services to non profit organizations is fulfilling for student employees and of great benefit to the community Developing research software enables undergraduate research and helps students gain interest in post baccalaureate studies This also allows the entity to participate,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,ASF the transition of students every one to two years is guaranteed This requires a type of transitioning program to pass on institutional memory as,well,as development processes and practices As the Director will also change with some regularity a similar process should be developed 5 Software development infrastructure is,ASF the transition of students every one to two years is guaranteed This requires a type of transitioning program to pass on institutional memory as well as development processes and practices As the Director will also change with some regularity a similar process should be developed 5 Software development infrastructure is,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,technology services in order to ensure the stability of infrastructure for the long haul VI THE ROAD AHEAD While the past ten years have shown,success,there are still questions to be answered and progress to be made with regards to the ASF Currently there are several plans in development which,technology services in order to ensure the stability of infrastructure for the long haul VI THE ROAD AHEAD While the past ten years have shown success there are still questions to be answered and progress to be made with regards to the ASF Currently there are several plans in development which,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,which increases sense of self worth and confidence strengthen interpersonal relationship skills increase personal satisfaction with the job and foster leadership skills Mentees will also,benefit,from increased self confidence improved interpersonal relationship skills and opportunities for networking and experiential learning B Promote graduate and undergraduate research and scholarship in software,which increases sense of self worth and confidence strengthen interpersonal relationship skills increase personal satisfaction with the job and foster leadership skills Mentees will also benefit from increased self confidence improved interpersonal relationship skills and opportunities for networking and experiential learning B Promote graduate and undergraduate research and scholarship in software,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,the ASF with the new Software Engineering Degree that the department will begin offering in the Fall of 2017 While the ASF has seen significant,progress,and success over the years it can continue to play a major role in growing the Software Engineering program VII CONCLUSION Over ten years the,the ASF with the new Software Engineering Degree that the department will begin offering in the Fall of 2017 While the ASF has seen significant progress and success over the years it can continue to play a major role in growing the Software Engineering program VII CONCLUSION Over ten years the,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,can continue to play a major role in growing the Software Engineering program VII CONCLUSION Over ten years the ASF has proven to be a,valuable,tool for enhancing Software Engineering education and training at the Department of Computer Science at BGSU while promoting software engineering research and community engagement Along,can continue to play a major role in growing the Software Engineering program VII CONCLUSION Over ten years the ASF has proven to be a valuable tool for enhancing Software Engineering education and training at the Department of Computer Science at BGSU while promoting software engineering research and community engagement Along,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,Computer Science at BGSU while promoting software engineering research and community engagement Along with many successes and accomplishments continued funding completed projects and most importantly,improved,education experience for students there have also been major challenges along the way Yet as time moves on future plans for mentorship training and active,Computer Science at BGSU while promoting software engineering research and community engagement Along with many successes and accomplishments continued funding completed projects and most importantly improved education experience for students there have also been major challenges along the way Yet as time moves on future plans for mentorship training and active,2017
CSEET_Ten_Years_of_the_Agile_Software_Factory_for_Software_Engineering_Education_and_Training_2017_IEEE_cleaned.txt,as time moves on future plans for mentorship training and active engagement in the new Software Engineering degree program are laying a path to continued,success,for the ASF,as time moves on future plans for mentorship training and active engagement in the new Software Engineering degree program are laying a path to continued success for the ASF,2017
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,task as educators is to feed this peer driven educational experience with the right constraints theory tools and infrastructure However we struggled with finding the,best,framing and we experienced a wide range of group behaviours and results With too much freedom the students learning processes degenerated when encountering decisions and,task as educators is to feed this peer driven educational experience with the right constraints theory tools and infrastructure However we struggled with finding the best framing and we experienced a wide range of group behaviours and results With too much freedom the students learning processes degenerated when encountering decisions and,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,annually and students have widely varying experience with practical development tools With limited resources for teaching and supervision it is essential to find a cost,effective,approach that realizes the course objectives and employs peer learning collaboration student based assessment and supervision in a realistic project setting Progressive enhancement of curriculum,annually and students have widely varying experience with practical development tools With limited resources for teaching and supervision it is essential to find a cost effective approach that realizes the course objectives and employs peer learning collaboration student based assessment and supervision in a realistic project setting Progressive enhancement of curriculum,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,team that is continuously being challenged to use methods and tools new to them The course must offer both aid to the development process as,well,as systematic assessment and feedback regarding the learning objectives Trained but lower grade TA staff TAs are carefully selected and trained each working 8 12,team that is continuously being challenged to use methods and tools new to them The course must offer both aid to the development process as well as systematic assessment and feedback regarding the learning objectives Trained but lower grade TA staff TAs are carefully selected and trained each working 8 12,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,encompass theory and practice of development processes agile methods project management and planning modeling UML architecture testing evolution CM reuse safety security quality and process,improvement,Assessment is done mainly on group effort without a final individual exam We employed teams of nine to eleven TAs with a total effort ranging,encompass theory and practice of development processes agile methods project management and planning modeling UML architecture testing evolution CM reuse safety security quality and process improvement Assessment is done mainly on group effort without a final individual exam We employed teams of nine to eleven TAs with a total effort ranging,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,group work and TA aid are available 24 7 TAs are recruited among higher year students with grades in the same course among the 20,best,TAs receive pedagogical training and are instructed to be good mentors Different TA functions in particular assessment are circulated but direct group aid and feedback,group work and TA aid are available 24 7 TAs are recruited among higher year students with grades in the same course among the 20 best TAs receive pedagogical training and are instructed to be good mentors Different TA functions in particular assessment are circulated but direct group aid and feedback,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,phenomena in a hands on and understandable way the Spring 2017 instance of the course emphasized students innovative capacities Inspired by a large number of,successful,startups founded by university students we would like to encourage the self learning process that is driven by joy curiosity and discovery We aimed at,phenomena in a hands on and understandable way the Spring 2017 instance of the course emphasized students innovative capacities Inspired by a large number of successful startups founded by university students we would like to encourage the self learning process that is driven by joy curiosity and discovery We aimed at,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,learning experience in university education with roBOT technology Students gathered requirements about problems of university education solvable by a software system conceptualized and presented a,solution,After that they were guided through a systematic workflow to implement demonstrable solutions In other words students had considerable freedom in the journey of revolutionizing,learning experience in university education with roBOT technology Students gathered requirements about problems of university education solvable by a software system conceptualized and presented a solution After that they were guided through a systematic workflow to implement demonstrable solutions In other words students had considerable freedom in the journey of revolutionizing,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,learning SE The project did not involve real customers A team of supervisors was employed to assist students in refining their requirements and implementing the,solutions,Students were required to formulate user stories product backlogs non functional requirements to reason and document their architectural decisions via architectural diagrams Regarding methodologies students,learning SE The project did not involve real customers A team of supervisors was employed to assist students in refining their requirements and implementing the solutions Students were required to formulate user stories product backlogs non functional requirements to reason and document their architectural decisions via architectural diagrams Regarding methodologies students,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,Planning Day Working Day and Release Day As the course instructors we set up checkpoints at the end of each iteration where students reported their,progress,During each iteration the students had large freedom in deciding their team roles and working style in the projects The students were introduced to SEMAT,Planning Day Working Day and Release Day As the course instructors we set up checkpoints at the end of each iteration where students reported their progress During each iteration the students had large freedom in deciding their team roles and working style in the projects The students were introduced to SEMAT,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,and technology assistance Each TA supervised 15 groups spending an average 20 30 minutes for each group weekly TAs used Google sheets to note the,progress,of their teams The intermediate deliveries from students during the projects were co assessed by course responsible and TAs The final assessment of the performance,and technology assistance Each TA supervised 15 groups spending an average 20 30 minutes for each group weekly TAs used Google sheets to note the progress of their teams The intermediate deliveries from students during the projects were co assessed by course responsible and TAs The final assessment of the performance,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,gathered by wearable sensors communicated and stored on a server A service provider or data analyst eg a health monitoring service or coach would give,value,back to the data provider by analyzing the data and visualizing the result The mentioned scenarios were suggested and supported with guest lectures eg a,gathered by wearable sensors communicated and stored on a server A service provider or data analyst eg a health monitoring service or coach would give value back to the data provider by analyzing the data and visualizing the result The mentioned scenarios were suggested and supported with guest lectures eg a,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,sprints were scheduled for the development process An agile software development process is close to a full time effort The division of labor roles and,progress,relies on high turn around agility and frequent exposure to a problem owner and other driving factors For each sprint user stories with high priorities,sprints were scheduled for the development process An agile software development process is close to a full time effort The division of labor roles and progress relies on high turn around agility and frequent exposure to a problem owner and other driving factors For each sprint user stories with high priorities,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,projects We also needed to build on the expected student competency from previous courses which included procedural programming with Python object oriented programming with Java,simple,desktop application architecture but not writing own tests or using build tools Most students were taking UX and DB courses in parallel with the SE,projects We also needed to build on the expected student competency from previous courses which included procedural programming with Python object oriented programming with Java simple desktop application architecture but not writing own tests or using build tools Most students were taking UX and DB courses in parallel with the SE,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,of three leading TAs managed and collected assessment instructions and templates and configured the learning software A student reference group provided continuous input on student,progress,general problems and areas needing improvement Each group had two specific TAs allocated throughout the course both taking roles as mentors and assessors The supervision,of three leading TAs managed and collected assessment instructions and templates and configured the learning software A student reference group provided continuous input on student progress general problems and areas needing improvement Each group had two specific TAs allocated throughout the course both taking roles as mentors and assessors The supervision,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,taking roles as mentors and assessors The supervision was continuous and organized as meetings message interchanges or GitLab based communication TAs and lecturers continuously monitored,progress,and products Students and TAs were free to organize meetings and evaluation sessions except demos which required suitable rooms Piazza was used as a common,taking roles as mentors and assessors The supervision was continuous and organized as meetings message interchanges or GitLab based communication TAs and lecturers continuously monitored progress and products Students and TAs were free to organize meetings and evaluation sessions except demos which required suitable rooms Piazza was used as a common,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,flexible options for methodological practices make many teams confused about what they should use for their projects The amount of freedom in both problem and,solution,domains had burdened the TAs making it difficult to assist each team with their own problems and own approach Specific choices of programming language and,flexible options for methodological practices make many teams confused about what they should use for their projects The amount of freedom in both problem and solution domains had burdened the TAs making it difficult to assist each team with their own problems and own approach Specific choices of programming language and,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,had burdened the TAs making it difficult to assist each team with their own problems and own approach Specific choices of programming language and database,solution,were recommended in order to be able to provide students with technical support We realize that having available and competent student assistants is a challenge,had burdened the TAs making it difficult to assist each team with their own problems and own approach Specific choices of programming language and database solution were recommended in order to be able to provide students with technical support We realize that having available and competent student assistants is a challenge,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,weaknesses of the approach is shown in Table 4 B Approach No Student Left Behind The defined project process and provided templates gave students a,well,defined workflow with a set of team assignments The problem space was fixed and the solution space was guided The process was not realistic but,weaknesses of the approach is shown in Table 4 B Approach No Student Left Behind The defined project process and provided templates gave students a well defined workflow with a set of team assignments The problem space was fixed and the solution space was guided The process was not realistic but,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,and the solution space was guided The process was not realistic but afforded TAs and teachers good control and competent and timely feedback The most,successful,part of the course was a fulfillment that no one was left behind Tests showed consistently high average score on all SE topics Teams were,and the solution space was guided The process was not realistic but afforded TAs and teachers good control and competent and timely feedback The most successful part of the course was a fulfillment that no one was left behind Tests showed consistently high average score on all SE topics Teams were,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,team members but this was hardly a problem 2 cases had to be resolved because of conflicting student schedules Randomly composed teams worked seemingly very,well,wrt shared workload Some students wanted to use a different technology stack e g write a web client in JavaScript and server using node js,team members but this was hardly a problem 2 cases had to be resolved because of conflicting student schedules Randomly composed teams worked seemingly very well wrt shared workload Some students wanted to use a different technology stack e g write a web client in JavaScript and server using node js,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,hands on competence and training among staff Some statements from the TAs are quite interesting Technology and tool focus quenched innovativeness but increased control of,progress,and effort Very difficult to separate between groups all performed at a very high level and got high scores Anonymous student responses from a reference,hands on competence and training among staff Some statements from the TAs are quite interesting Technology and tool focus quenched innovativeness but increased control of progress and effort Very difficult to separate between groups all performed at a very high level and got high scores Anonymous student responses from a reference,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,wanted Two individual multiple choice tests each with 20 questions drawn from separate pools of approximately 60 questions were designed to test theoretical knowledge as,well,as process and technology awareness The tests were reasonably difficult with the mean score at 80 and 72 respectively The test had very high participation,wanted Two individual multiple choice tests each with 20 questions drawn from separate pools of approximately 60 questions were designed to test theoretical knowledge as well as process and technology awareness The tests were reasonably difficult with the mean score at 80 and 72 respectively The test had very high participation,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,to the project surfaced However this was intended The second test was thus perceived as much less stressful The significant majority of students performed very,well,Some islands of discontent about other teams getting too good scoring on products persisted for a while but this was handled and explained using student,to the project surfaced However this was intended The second test was thus perceived as much less stressful The significant majority of students performed very well Some islands of discontent about other teams getting too good scoring on products persisted for a while but this was handled and explained using student,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,accommodate in a large project based SE course To answer RQ1 we find the common flexible elements across dimensions between the two approaches that are,positively,perceived by both lecturers and students The result is that all of the dimensions 1 project setting 2 process 3 technology 4 supervision and 5,accommodate in a large project based SE course To answer RQ1 we find the common flexible elements across dimensions between the two approaches that are positively perceived by both lecturers and students The result is that all of the dimensions 1 project setting 2 process 3 technology 4 supervision and 5,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,maintain fairness From the findings we suggest several dimensions of choices that might impact the course settings Freedom of technology and method choices reduce the,value,and validity of TA aid and assessment Freedom of problem selection increases involvement and time spent Freedom of team arrangement increases team competitiveness and potential,maintain fairness From the findings we suggest several dimensions of choices that might impact the course settings Freedom of technology and method choices reduce the value and validity of TA aid and assessment Freedom of problem selection increases involvement and time spent Freedom of team arrangement increases team competitiveness and potential,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,freedom of choices would probably increase the fun and creativity among some students however it increases the risks in teaching and managing the course as,well,Also it comes at a cost of decreasing freedom and learning for some individuals and groups Increased freedom would probably also increase the learning effect,freedom of choices would probably increase the fun and creativity among some students however it increases the risks in teaching and managing the course as well Also it comes at a cost of decreasing freedom and learning for some individuals and groups Increased freedom would probably also increase the learning effect,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,it comes at a cost of decreasing freedom and learning for some individuals and groups Increased freedom would probably also increase the learning effect and,efficiency,For some Few not the majority Having the freedom to make active decisions with regards to the problem domain process technology and deliverable content is,it comes at a cost of decreasing freedom and learning for some individuals and groups Increased freedom would probably also increase the learning effect and efficiency For some Few not the majority Having the freedom to make active decisions with regards to the problem domain process technology and deliverable content is,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,For some Few not the majority Having the freedom to make active decisions with regards to the problem domain process technology and deliverable content is,valuable,The question remains when and if the students are competent enough to thrive and learn from this freedom Furthermore at what stage are the student,For some Few not the majority Having the freedom to make active decisions with regards to the problem domain process technology and deliverable content is valuable The question remains when and if the students are competent enough to thrive and learn from this freedom Furthermore at what stage are the student,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,are the student mature enough to accept that failure is an important part of innovation We do not yet know if an early failure or,success,as a software engineer in an introductory course will weed out the conscientious data analysts and leave us with the ever innovative and sanguine entrepreneur,are the student mature enough to accept that failure is an important part of innovation We do not yet know if an early failure or success as a software engineer in an introductory course will weed out the conscientious data analysts and leave us with the ever innovative and sanguine entrepreneur,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,proper software engineering background Table 6 Comparing NSLB and ESIAI Strength Weakness No Student Left Behind Thorough and predictable coverage High average level of competence,effective,TA involvement Too many details that may be relevant to everybody Hard work and less fun negative appreciation of innovation Every Student Is An Innovator,proper software engineering background Table 6 Comparing NSLB and ESIAI Strength Weakness No Student Left Behind Thorough and predictable coverage High average level of competence effective TA involvement Too many details that may be relevant to everybody Hard work and less fun negative appreciation of innovation Every Student Is An Innovator,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,put a high demand on a responsive resourceful and competent teaching staff A possible combination of these dimensions would probably be a innovative problem guided,solution,approach where students are inspired and motivated to define their projects with requirements and product backlogs The requirements and early design phases can be validated,put a high demand on a responsive resourceful and competent teaching staff A possible combination of these dimensions would probably be a innovative problem guided solution approach where students are inspired and motivated to define their projects with requirements and product backlogs The requirements and early design phases can be validated,2020
CSEET_Unreined_Students_or_Not_Modes_of_Freedom_in_a_Project-Based_Software_Engineering_Course_2020_IEEE_cleaned.txt,motivated to define their projects with requirements and product backlogs The requirements and early design phases can be validated by staff to ensure feasible technical,solutions,for them In the solution space students should be systematically guided with technological infrastructure and necessary programming competence They need to carry out the solution,motivated to define their projects with requirements and product backlogs The requirements and early design phases can be validated by staff to ensure feasible technical solutions for them In the solution space students should be systematically guided with technological infrastructure and necessary programming competence They need to carry out the solution,2020
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,by all the student participants This paper presents the perspective of one of students involved in the project It gathers observations and analyzes the educational,value,of Knowing Yourself and Beyond based on the accomplished collaborative work and interviews with student developers and professors The relevant lessons learned from this project,by all the student participants This paper presents the perspective of one of students involved in the project It gathers observations and analyzes the educational value of Knowing Yourself and Beyond based on the accomplished collaborative work and interviews with student developers and professors The relevant lessons learned from this project,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,of developer and Scrum Master in the GSD 2009 project that involved students from Senegal India and the US This paper principally illustrates the educational,value,of Know Yourself and Beyond gained from this project from a students perspective The findings are based on observations the documentation the logs the statistics,of developer and Scrum Master in the GSD 2009 project that involved students from Senegal India and the US This paper principally illustrates the educational value of Know Yourself and Beyond gained from this project from a students perspective The findings are based on observations the documentation the logs the statistics,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,into the Computer Science curriculum and have students develop software together 1 2 3 4 5 The goal of the GSD project series is to,better,prepare students as future IT professionals In 2009 Agile Methodologies and Scrum were adopted for the first time with the intention to encourage students to,into the Computer Science curriculum and have students develop software together 1 2 3 4 5 The goal of the GSD project series is to better prepare students as future IT professionals In 2009 Agile Methodologies and Scrum were adopted for the first time with the intention to encourage students to,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,User Stories in the Product Backlog The Scrum Master is in charge of enabling Scrum by helping the team remove impediments and thus creating the,best,possible circumstances to achieve the goal fixed for the Sprint Typically one Sprint runs in the following way 1 At the beginning of each Sprint,User Stories in the Product Backlog The Scrum Master is in charge of enabling Scrum by helping the team remove impediments and thus creating the best possible circumstances to achieve the goal fixed for the Sprint Typically one Sprint runs in the following way 1 At the beginning of each Sprint,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,the Sprint with the Product Owner The user stories are broken into tasks Team members select the tasks they want to tackle proactively instead of,simply,being assigned tasks by a conventional project manager This is an opportunity for team members to take ownership of their work depending on their own,the Sprint with the Product Owner The user stories are broken into tasks Team members select the tasks they want to tackle proactively instead of simply being assigned tasks by a conventional project manager This is an opportunity for team members to take ownership of their work depending on their own,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,decided with the agreement of the team and the Process Coach that it was important to have a strong Scrum Master to make the project,successful,The kick off meeting of Sprint 1 discussed the product features The plan for Sprint 1 was discussed during the meeting The lead professor gathered,decided with the agreement of the team and the Process Coach that it was important to have a strong Scrum Master to make the project successful The kick off meeting of Sprint 1 discussed the product features The plan for Sprint 1 was discussed during the meeting The lead professor gathered,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,Sprints 2 and 3 The developers were more familiar with RTC as time went by Since the developers were geographically distributed they were unable to,benefit,from the full advantage of the Daily Stand up Scrums As a replacement Daily Scrums were to be posted in writing in the documentation section,Sprints 2 and 3 The developers were more familiar with RTC as time went by Since the developers were geographically distributed they were unable to benefit from the full advantage of the Daily Stand up Scrums As a replacement Daily Scrums were to be posted in writing in the documentation section,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,the beginning of their working day and to explicitly describe their past and future activities and their difficulties From the written Daily Scrums it was,easy,to notice if developers were doing something different from what they planned to do The written Daily Scrums were a simple and obvious way for,the beginning of their working day and to explicitly describe their past and future activities and their difficulties From the written Daily Scrums it was easy to notice if developers were doing something different from what they planned to do The written Daily Scrums were a simple and obvious way for,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,can learn about themselves and their planning estimating and executing skills The Daily Scrums are instruments that help collect the following information in retrospect How,well,do developers plan and then execute their plans Are they getting more self disciplinary Do they understand better their own abilities strengths and weaknesses Are,can learn about themselves and their planning estimating and executing skills The Daily Scrums are instruments that help collect the following information in retrospect How well do developers plan and then execute their plans Are they getting more self disciplinary Do they understand better their own abilities strengths and weaknesses Are,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,they getting more realistic about what they can and cannot do within one day Are they actually working on tasks that matter and help them,achieve,the Sprint goal Daily Scrums permit analysis and reflection They provide a direct explicit and easy way for developers to learn about themselves And by,they getting more realistic about what they can and cannot do within one day Are they actually working on tasks that matter and help them achieve the Sprint goal Daily Scrums permit analysis and reflection They provide a direct explicit and easy way for developers to learn about themselves And by,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,Scrums permit analysis and reflection They provide a direct explicit and easy way for developers to learn about themselves And by taking reference on others,progress,in tasks of similar scale developers can learn about themselves even better 2 Developers have to work at a constant pace Daily Scrums require constant,Scrums permit analysis and reflection They provide a direct explicit and easy way for developers to learn about themselves And by taking reference on others progress in tasks of similar scale developers can learn about themselves even better 2 Developers have to work at a constant pace Daily Scrums require constant,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,tasks of similar scale developers can learn about themselves even better 2 Developers have to work at a constant pace Daily Scrums require constant pace,progress,that ensures that the team always has something ready for the Product Owner They help increase the transparency of the project and prevent unhealthy burn,tasks of similar scale developers can learn about themselves even better 2 Developers have to work at a constant pace Daily Scrums require constant pace progress that ensures that the team always has something ready for the Product Owner They help increase the transparency of the project and prevent unhealthy burn,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,did not conform to the Scrum rituals The quality of Daily Scrums was poor too Working items were vaguely expressed and did not carry much,value,e g Learning Java ME Try to do tasks allocated to me and Unstable Internet Consequently problems that impeded progress were not directly presented Developers,did not conform to the Scrum rituals The quality of Daily Scrums was poor too Working items were vaguely expressed and did not carry much value e g Learning Java ME Try to do tasks allocated to me and Unstable Internet Consequently problems that impeded progress were not directly presented Developers,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,author felt deeply that it was time for her to take over the Scrum Master role in the following Sprint At that time she knew,better,how to act as Scrum Master and hopefully could help foster communications and make sure developers were in control of the process With the help,author felt deeply that it was time for her to take over the Scrum Master role in the following Sprint At that time she knew better how to act as Scrum Master and hopefully could help foster communications and make sure developers were in control of the process With the help,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,of the unchanged behaviors of these developers after the end of the project in a friendly conversation with them They reported that they understood very,well,the principles of Scrum but just lacked motivation to do all this work that they judged administrative After all that was a school exercise done,of the unchanged behaviors of these developers after the end of the project in a friendly conversation with them They reported that they understood very well the principles of Scrum but just lacked motivation to do all this work that they judged administrative After all that was a school exercise done,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,ABOUT KNOWING YOURSELF TO KNOW AND TO GROW 1 Education and process method A tool to dig into student s inner side There is no,better,time than school time in one s life to grab and cherish all the possible opportunities and examine ones motivations passions strengths and weaknesses Every,ABOUT KNOWING YOURSELF TO KNOW AND TO GROW 1 Education and process method A tool to dig into student s inner side There is no better time than school time in one s life to grab and cherish all the possible opportunities and examine ones motivations passions strengths and weaknesses Every,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,ones motivations passions strengths and weaknesses Every software development project created a new opportunity for developers and other team members to get to know themselves,better,and deeper Agile Methodologies and Scrum reinforce this idea and particularly emphasize the planning estimating and executing abilities of each participant These are just the,ones motivations passions strengths and weaknesses Every software development project created a new opportunity for developers and other team members to get to know themselves better and deeper Agile Methodologies and Scrum reinforce this idea and particularly emphasize the planning estimating and executing abilities of each participant These are just the,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,that they can showcase to potential employers Students have to understand the importance of necessary compromise in following rules cooperating changing behavior when necessary to,achieve,a common goal and produce good quality work The student author would like to ask fellow students to keep in mind that professors can be,that they can showcase to potential employers Students have to understand the importance of necessary compromise in following rules cooperating changing behavior when necessary to achieve a common goal and produce good quality work The student author would like to ask fellow students to keep in mind that professors can be,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,ask fellow students to keep in mind that professors can be a source of reference letters for them There is no reason not to take,advantage,of a golden opportunity like this After all at school we are taught a lesson and then a test In life we are given a,ask fellow students to keep in mind that professors can be a source of reference letters for them There is no reason not to take advantage of a golden opportunity like this After all at school we are taught a lesson and then a test In life we are given a,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,development industry B ABOUT BEYOND TO INTERACT WITH THE OUTSIDE WORLD AND TO REFLECT ONESELF 1 Knowing others is an inverse process to know oneself,better,Working in a team implies to get to know understand tolerate appreciate and learn from others That is an enlightening experience We can have team,development industry B ABOUT BEYOND TO INTERACT WITH THE OUTSIDE WORLD AND TO REFLECT ONESELF 1 Knowing others is an inverse process to know oneself better Working in a team implies to get to know understand tolerate appreciate and learn from others That is an enlightening experience We can have team,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,Given the rigidity of Scrum requirements we have to work interdependently and expose our working style in front of others We get to know ourselves,better,by mirroring ourselves with others and by analyzing the difference with someone who did better than us why did I spend nearly twice as much,Given the rigidity of Scrum requirements we have to work interdependently and expose our working style in front of others We get to know ourselves better by mirroring ourselves with others and by analyzing the difference with someone who did better than us why did I spend nearly twice as much,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,twice as much time than him given a similar work item size Why was my planning quality worse than hers How can I make an,improvement,When will I be able to catch up with them 2 Understanding teamwork and preparing to help others is a process to grow oneself Scrum,twice as much time than him given a similar work item size Why was my planning quality worse than hers How can I make an improvement When will I be able to catch up with them 2 Understanding teamwork and preparing to help others is a process to grow oneself Scrum,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,only chance for the team to succeed is to ensure that everybody knows what is going on and that the team is able to find,solutions,to move forward VI CONCLUSION NEXT STEP The post project interviews indicated that all the students had a positive learning experience by going through a,only chance for the team to succeed is to ensure that everybody knows what is going on and that the team is able to find solutions to move forward VI CONCLUSION NEXT STEP The post project interviews indicated that all the students had a positive learning experience by going through a,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,curve in knowing more about themselves others collaboration technical skills and process method within a short period of time In the future we would know,better,how to go about this type of project and how to mitigate problems rather than succumb to them Obviously some of the educational values illustrated,curve in knowing more about themselves others collaboration technical skills and process method within a short period of time In the future we would know better how to go about this type of project and how to mitigate problems rather than succumb to them Obviously some of the educational values illustrated,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,in this paper are not new but Scrum rituals and the obligatory adherence to them help students know themselves in a more direct explicit and,easy,way Scrum can be considered as a good pedagogical exercise and be used in similar projects This project brought to the forefront concerns about how,in this paper are not new but Scrum rituals and the obligatory adherence to them help students know themselves in a more direct explicit and easy way Scrum can be considered as a good pedagogical exercise and be used in similar projects This project brought to the forefront concerns about how,2010
CSE_Know_Yourself_and_Beyond_A_students_global_software_development_project_experience_with_Agile_Methodology_2010_IEEE_cleaned.txt,Scrum efficiently in a distributed development environment and how students can grow as productive members in a global distributed software development team after knowing themselves,better,In the next step we would suggest an approach with dedicated Scrum Masters i e Scrum Masters who do not participate in developers work to,Scrum efficiently in a distributed development environment and how students can grow as productive members in a global distributed software development team after knowing themselves better In the next step we would suggest an approach with dedicated Scrum Masters i e Scrum Masters who do not participate in developers work to,2010
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,of course is to understand the core of lean to the point of being able to understand its applicability in new software development environment To,achieve,this goal our paramount idea has been to get the students to feel what a lean approach is therefore we have decided to articulate the,of course is to understand the core of lean to the point of being able to understand its applicability in new software development environment To achieve this goal our paramount idea has been to get the students to feel what a lean approach is therefore we have decided to articulate the,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,of course is to understand the core of lean to the point of being able to understand its applicability in new software development environment To,achieve,this goal our paramount idea has been to get the students to feel what a lean approach is therefore we have decided to articulate the,of course is to understand the core of lean to the point of being able to understand its applicability in new software development environment To achieve this goal our paramount idea has been to get the students to feel what a lean approach is therefore we have decided to articulate the,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,Lean approach in various domains during the course the organization and form of their learning activities in such exercises should be aligned with Lean as,well,Otherwise not only a significant number of students find many contradictions between the subject and the way of teaching but the students might just miss,Lean approach in various domains during the course the organization and form of their learning activities in such exercises should be aligned with Lean as well Otherwise not only a significant number of students find many contradictions between the subject and the way of teaching but the students might just miss,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,contradictions between the subject and the way of teaching but the students might just miss the core idea of the course a risk that is,well,evident also by simply analysing the status of the industry We have already mentioned that our two core reference principles that we wanted to apply,contradictions between the subject and the way of teaching but the students might just miss the core idea of the course a risk that is well evident also by simply analysing the status of the industry We have already mentioned that our two core reference principles that we wanted to apply,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,are i Elimination of waste ii Autonomation We have now to understand what they mean in an educational context The elimination of waste appears the,easier,principle to implement which taken individually may look trivial but properly contextualized and rationalized may help students perceiving the deepness of the issue Referring to,are i Elimination of waste ii Autonomation We have now to understand what they mean in an educational context The elimination of waste appears the easier principle to implement which taken individually may look trivial but properly contextualized and rationalized may help students perceiving the deepness of the issue Referring to,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,look trivial but properly contextualized and rationalized may help students perceiving the deepness of the issue Referring to elimination of waste we can consider a,simple,set of concepts and example that can help the students to perceive the matter at stake Make the best possible use of the time in,look trivial but properly contextualized and rationalized may help students perceiving the deepness of the issue Referring to elimination of waste we can consider a simple set of concepts and example that can help the students to perceive the matter at stake Make the best possible use of the time in,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,deeper implication In a sense it should be the core of any educational endavour because we would like every student to understand her himself the,progress,s he is making in her his education moreover we would like any student to be the main actor of the education endeavour the real,deeper implication In a sense it should be the core of any educational endavour because we would like every student to understand her himself the progress s he is making in her his education moreover we would like any student to be the main actor of the education endeavour the real,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,to the risk of some lack of precision but so there is the possibility of an immediate feedback Sharing assignments so students can compare their,solutions,and grading with someone elses These two concepts together lead to the development of the reference educational activities that have guided the development of the,to the risk of some lack of precision but so there is the possibility of an immediate feedback Sharing assignments so students can compare their solutions and grading with someone elses These two concepts together lead to the development of the reference educational activities that have guided the development of the,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,final grade see Sect 4 A presentation by a guest lecturer or from online videos see Sects 5 and 6 A personal review of the,progress,of the grand challenges see Sect 7 A final reflection on what has been learnt in the class Needless to mention any distraction is eliminated,final grade see Sect 4 A presentation by a guest lecturer or from online videos see Sects 5 and 6 A personal review of the progress of the grand challenges see Sect 7 A final reflection on what has been learnt in the class Needless to mention any distraction is eliminated,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,the grand challenges and by the final reflection at the end of the class 4 Immediate Collecting Corrections and Grading The key point of any,efficient,learning activity is an immediate feedback In courses such Lean Software Development this is of high demand because many parts of the course could be,the grand challenges and by the final reflection at the end of the class 4 Immediate Collecting Corrections and Grading The key point of any efficient learning activity is an immediate feedback In courses such Lean Software Development this is of high demand because many parts of the course could be,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,related to assignments immediate corrections and grading are crucial During each class assignment of the course students use Learning management system Moodle to upload their,solutions,After that the instructor immediately started grading and the results of the grading were immediately available to students during the same class However this is,related to assignments immediate corrections and grading are crucial During each class assignment of the course students use Learning management system Moodle to upload their solutions After that the instructor immediately started grading and the results of the grading were immediately available to students during the same class However this is,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,between the submission of an assignment or the performance of a task and its grading relates to the concept of elimination of waste and the,positive,impact it has on the overall organization So while we perform grading immediately we encourage students to appreciate its value the one discussed at the,between the submission of an assignment or the performance of a task and its grading relates to the concept of elimination of waste and the positive impact it has on the overall organization So while we perform grading immediately we encourage students to appreciate its value the one discussed at the,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,lowering the standard font size putting too much text in one slide enlarging the standard paper size etc This requirement helped students to focus on,value,first and to distinguish value of the deliverable from the size of the deliverable s text Grading criteria for the briefings include Quality of the,lowering the standard font size putting too much text in one slide enlarging the standard paper size etc This requirement helped students to focus on value first and to distinguish value of the deliverable from the size of the deliverable s text Grading criteria for the briefings include Quality of the,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,natural conclusion for the presentation or talk The Q A session reveals the level of the analysis and helps students learn which parts can be,improved,6 Skype Meetings with Experts Each Skype meeting with expert was prepared in the following way Students were asked to collect materials about an expert,natural conclusion for the presentation or talk The Q A session reveals the level of the analysis and helps students learn which parts can be improved 6 Skype Meetings with Experts Each Skype meeting with expert was prepared in the following way Students were asked to collect materials about an expert,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,with key experts of the field if needed The outcome of grand challenge is a deliverable which need to be supplied through the wiki as,well,as a comprehensive report of the grand challenge of at most 10 pages and a presentation of at most 10 slides Grading criteria for the,with key experts of the field if needed The outcome of grand challenge is a deliverable which need to be supplied through the wiki as well as a comprehensive report of the grand challenge of at most 10 pages and a presentation of at most 10 slides Grading criteria for the,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,of the findings Clear evidence of the rational deduction of the findings from the empirical analysis However students were also informed that to get the,best,grade they were expected to apply the principles discussed in this course about handling uncertainty irreversibility wicked projects etc 8 Connection Between the Lean Approach,of the findings Clear evidence of the rational deduction of the findings from the empirical analysis However students were also informed that to get the best grade they were expected to apply the principles discussed in this course about handling uncertainty irreversibility wicked projects etc 8 Connection Between the Lean Approach,2019
DEVOPS_A_Lean_and_Devops_Approach_to_Teach_Lean_Software_Development_2019_WebOfScience.txt,application of the regulations when they needed without any specific action or control For instance live grading strongly connects two processes i development of the,solution,by a student and ii testing and accepting of the solution with possibility of discussing and improving the solution Thus it shows to students a,application of the regulations when they needed without any specific action or control For instance live grading strongly connects two processes i development of the solution by a student and ii testing and accepting of the solution with possibility of discussing and improving the solution Thus it shows to students a,2019
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,of this presentation of is a uniform evaluation in or der to obtain insights from different perspectives This comparison can draw conclusions for possible necessary,improvements,of the respective concepts CCS CONCEPTS Software and its engineering Collaboration in software development Social and professional topics Software engineering education KEYWORDS Agile Methods Scrum,of this presentation of is a uniform evaluation in or der to obtain insights from different perspectives This comparison can draw conclusions for possible necessary improvements of the respective concepts CCS CONCEPTS Software and its engineering Collaboration in software development Social and professional topics Software engineering education KEYWORDS Agile Methods Scrum,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,universities is the respective uniform evaluations and their comparison in order to obtain insights from different perspectives The aim should not be to find a,best,solution since a uniform concept for all three universities cannot be depicted structurally due to the different framework conditions Nevertheless the comparison can draw conclusions,universities is the respective uniform evaluations and their comparison in order to obtain insights from different perspectives The aim should not be to find a best solution since a uniform concept for all three universities cannot be depicted structurally due to the different framework conditions Nevertheless the comparison can draw conclusions,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,concept for all three universities cannot be depicted structurally due to the different framework conditions Nevertheless the comparison can draw conclusions for a possible necessary,improvement,of the respective concepts This paper represents a practice report No systematic literature review of didactic approaches to learn and teach Scrum was carried out,concept for all three universities cannot be depicted structurally due to the different framework conditions Nevertheless the comparison can draw conclusions for a possible necessary improvement of the respective concepts This paper represents a practice report No systematic literature review of didactic approaches to learn and teach Scrum was carried out,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,together as a capstone project in which students traverse all steps of the development cycle from eliciting and analysing requirements through delivering a working and,well,tested software system which is accompanied by adequate documentation facing a firm deadline at the end of the project This implies that the project topic,together as a capstone project in which students traverse all steps of the development cycle from eliciting and analysing requirements through delivering a working and well tested software system which is accompanied by adequate documentation facing a firm deadline at the end of the project This implies that the project topic,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,with the team Methodological competences Students are expected to explore various options in a specific situation including e g Sprint Reviews and decide which options,best,meet their own goals Yet students should also have the freedom to make mistakes learn lessons from them eventually develop alternatives and decide which is,with the team Methodological competences Students are expected to explore various options in a specific situation including e g Sprint Reviews and decide which options best meet their own goals Yet students should also have the freedom to make mistakes learn lessons from them eventually develop alternatives and decide which is,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,meet their own goals Yet students should also have the freedom to make mistakes learn lessons from them eventually develop alternatives and decide which is,best,Students are expected to try out things without being bounded by tight restrictions imposed on them by the instructors except for one The deadline for,meet their own goals Yet students should also have the freedom to make mistakes learn lessons from them eventually develop alternatives and decide which is best Students are expected to try out things without being bounded by tight restrictions imposed on them by the instructors except for one The deadline for,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,SE courses Teaching Learning Didactic goals the tailored implementation project length Sprint length role allocation Daily Scrum Sprint Review Sprint Retrospective the exam and the,value,added e g Improved team performance through team support from a Scrum Master The following sections cover the detailed descriptions of the three different approaches,SE courses Teaching Learning Didactic goals the tailored implementation project length Sprint length role allocation Daily Scrum Sprint Review Sprint Retrospective the exam and the value added e g Improved team performance through team support from a Scrum Master The following sections cover the detailed descriptions of the three different approaches,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,the students divide themselves independently into teams of no more than nine persons They do not yet know the concrete project task which has certain,advantages,and disadvantages Once the teams have been found the newly structured teams are trained in team building with an experienced trainer and coach in order,the students divide themselves independently into teams of no more than nine persons They do not yet know the concrete project task which has certain advantages and disadvantages Once the teams have been found the newly structured teams are trained in team building with an experienced trainer and coach in order,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,of the customer are a documentation the use of a version management and artefacts corresponding to their process model We require them to report their,progress,to us on a daily basis To manage their project they must first select a process model and assign the corresponding roles accordingly On day,of the customer are a documentation the use of a version management and artefacts corresponding to their process model We require them to report their progress to us on a daily basis To manage their project they must first select a process model and assign the corresponding roles accordingly On day,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,longer have a task We decided to fill both roles with students who feel confident in these roles They receive additional material and instructions as,well,as the opportunity to moderate meetings together with us 3 1 2 6 Daily Scrum Sprint Review and Sprint Retrospective Daily Scrums should be performed,longer have a task We decided to fill both roles with students who feel confident in these roles They receive additional material and instructions as well as the opportunity to moderate meetings together with us 3 1 2 6 Daily Scrum Sprint Review and Sprint Retrospective Daily Scrums should be performed,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,at the end of the course As this module is very project oriented we have established the following assessment guideline It should be possible to,achieve,a total of 100 points The guideline is divided into the two large proportions important to us The disciplinary section mainly represented by the interview,at the end of the course As this module is very project oriented we have established the following assessment guideline It should be possible to achieve a total of 100 points The guideline is divided into the two large proportions important to us The disciplinary section mainly represented by the interview,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,hours on average for the project out of which 10 5 hours they and the lecturers are present at the university SE methods should be,improved,by the support of the simulation of a realworld software project and the understanding of the development of software In the past the undergraduates have,hours on average for the project out of which 10 5 hours they and the lecturers are present at the university SE methods should be improved by the support of the simulation of a realworld software project and the understanding of the development of software In the past the undergraduates have,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,asked self responsibly to hold a Daily Scrum everyday they meet All stakeholders participate in a Sprint Review to take the maximum profit for product,improvement,Similar as in industry also in academia the effort is high with many participants so after a first full featured Sprint Review the effort can,asked self responsibly to hold a Daily Scrum everyday they meet All stakeholders participate in a Sprint Review to take the maximum profit for product improvement Similar as in industry also in academia the effort is high with many participants so after a first full featured Sprint Review the effort can,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,the effort is high with many participants so after a first full featured Sprint Review the effort can be reduced with some experience to the,best,profit cost ratio After the Sprint Review the Sprint Retrospective takes place which is moderated by one of the Scrum Masters 3 2 2 8,the effort is high with many participants so after a first full featured Sprint Review the effort can be reduced with some experience to the best profit cost ratio After the Sprint Review the Sprint Retrospective takes place which is moderated by one of the Scrum Masters 3 2 2 8,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,Assessment Grading implies artefacts of the seminar phase a written examination after the seminar phase the artefacts of the project phase including the documented backlog,progress,and a final oral examination Partial grades for artefacts are group grades see Table 2 but individual contribution is considered additionally so in extreme cases,Assessment Grading implies artefacts of the seminar phase a written examination after the seminar phase the artefacts of the project phase including the documented backlog progress and a final oral examination Partial grades for artefacts are group grades see Table 2 but individual contribution is considered additionally so in extreme cases,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,like Scrum at all In addition to theoretical lectures and practical projects the teaching learning content is also available as learning videos which is particularly,beneficial,for audiovisual learners 12 A particular advantage of learning videos lies in the fact that learners can deal with relevant topics repeatedly independent of time,like Scrum at all In addition to theoretical lectures and practical projects the teaching learning content is also available as learning videos which is particularly beneficial for audiovisual learners 12 A particular advantage of learning videos lies in the fact that learners can deal with relevant topics repeatedly independent of time,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,by getting rigid instructions from instructors Typically for each project team a real customer is available He brings in a specific problem which should be,solved,with a software system e g a travelling management system a fleet management system or a campus management It is worth noting however that usually,by getting rigid instructions from instructors Typically for each project team a real customer is available He brings in a specific problem which should be solved with a software system e g a travelling management system a fleet management system or a campus management It is worth noting however that usually,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,on organizing and leading a team The difficulties for them are e g communicating with team members and structuring tasks and motivating team members for,effective,teamwork Master students are responsible for the results and for meeting deadlines as well as for assuring the quality of the software It is important,on organizing and leading a team The difficulties for them are e g communicating with team members and structuring tasks and motivating team members for effective teamwork Master students are responsible for the results and for meeting deadlines as well as for assuring the quality of the software It is important,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,to fill the role of a Product Owner the development team is in charge of writing user stories and filling the product backlog prioritization is,accomplished,in close cooperation with the customer and the customer decides on acceptance or rejection of increments in the Sprint Review Apart from that the development,to fill the role of a Product Owner the development team is in charge of writing user stories and filling the product backlog prioritization is accomplished in close cooperation with the customer and the customer decides on acceptance or rejection of increments in the Sprint Review Apart from that the development,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,and assigns responsibilities and deadlines 3 3 3 5 Exam and Assessment Intended learning outcomes are mainly competences and consequently assessment is competence oriented as,well,At least two instructors accompany observe the project teams during the presence hours each week to get an idea of teamwork and individual contributions In,and assigns responsibilities and deadlines 3 3 3 5 Exam and Assessment Intended learning outcomes are mainly competences and consequently assessment is competence oriented as well At least two instructors accompany observe the project teams during the presence hours each week to get an idea of teamwork and individual contributions In,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,conducted as an additional element to stimulate learning To that end students were asked to reflect on their own individual role in the project as,well,as the performance of the entire team Reflection and metacognition are advantages of project work and are didactical methods to foster soft skills and competences,conducted as an additional element to stimulate learning To that end students were asked to reflect on their own individual role in the project as well as the performance of the entire team Reflection and metacognition are advantages of project work and are didactical methods to foster soft skills and competences,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,which these had been met particular issues in the project that they personally would have treated differently and from their personal point of view more,successfully,which role they would have liked in the project and what they would have done differently in that role and how interaction and cooperation between,which these had been met particular issues in the project that they personally would have treated differently and from their personal point of view more successfully which role they would have liked in the project and what they would have done differently in that role and how interaction and cooperation between,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,the approaches are Full time block week versus 90 minutes per week the project and Sprint length accordingly the virtual Daily Scrums at Coburg as,well,as the division of roles especially the one of the Scrum Master Addition ally the role of the customer varies in the different approaches from,the approaches are Full time block week versus 90 minutes per week the project and Sprint length accordingly the virtual Daily Scrums at Coburg as well as the division of roles especially the one of the Scrum Master Addition ally the role of the customer varies in the different approaches from,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,a common evaluation tool could be used in order to get detailed insights into the arrangements This shall not have the purpose of finding the,best,concept or directly oppose them All of them have their reasons of being as they are tailored to the specific framework of the very application,a common evaluation tool could be used in order to get detailed insights into the arrangements This shall not have the purpose of finding the best concept or directly oppose them All of them have their reasons of being as they are tailored to the specific framework of the very application,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,being as they are tailored to the specific framework of the very application of Scrum in an undergraduate project The aim is to determine the,advantages,and disadvantages of the concepts and based on this to be able to make adjustments changes maybe also following the example of the other approaches,being as they are tailored to the specific framework of the very application of Scrum in an undergraduate project The aim is to determine the advantages and disadvantages of the concepts and based on this to be able to make adjustments changes maybe also following the example of the other approaches,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,the consequences of actions that software engineers may take This level contains competences which are required when acting sensitively in a complex context A creative,solution,needs to be developed for each problem since no standard recipe would work The three levels of competence are arranged in a hierarchy Without knowing,the consequences of actions that software engineers may take This level contains competences which are required when acting sensitively in a complex context A creative solution needs to be developed for each problem since no standard recipe would work The three levels of competence are arranged in a hierarchy Without knowing,2020
ECSEE_Totally Different and yet so Alike – Three Concepts to Use Scrum in Higher Education_2020_ACM_cleaned.txt,three levels of competence are arranged in a hierarchy Without knowing e g design patterns or programming languages at the functional level no creativity of,solution,can be accomplished at the holistic level The higher the level of competence the more complex is the competence and the more important are nontechnical,three levels of competence are arranged in a hierarchy Without knowing e g design patterns or programming languages at the functional level no creativity of solution can be accomplished at the holistic level The higher the level of competence the more complex is the competence and the more important are nontechnical,2020
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,Collaboration and Human Factors in Software Development Teaching Agile Methodologies based on Industrial Insight Abstract Recent studies show that many companies have,successfully,adopted agile methodologies In this paper the authors present results of their quantitative and qualitative studies showing that only experienced companies apply agile collaboration practices,Collaboration and Human Factors in Software Development Teaching Agile Methodologies based on Industrial Insight Abstract Recent studies show that many companies have successfully adopted agile methodologies In this paper the authors present results of their quantitative and qualitative studies showing that only experienced companies apply agile collaboration practices,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,the authors present results of their quantitative and qualitative studies showing that only experienced companies apply agile collaboration practices properly The studies also suggest that,successful,professional agile teams tend to use more collaboration practices and consciously live the agile values This leads to the conclusion that applying the collaborative practices,the authors present results of their quantitative and qualitative studies showing that only experienced companies apply agile collaboration practices properly The studies also suggest that successful professional agile teams tend to use more collaboration practices and consciously live the agile values This leads to the conclusion that applying the collaborative practices,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,experience in agile development The studies show that agile methodologies are of high practical relevance Furthermore it appears that there is a high demand for,well,educated software engineers in the agile domain Another phenomenon is distributed software development near shore and offshore teams have become common practice These distributed teams,experience in agile development The studies show that agile methodologies are of high practical relevance Furthermore it appears that there is a high demand for well educated software engineers in the agile domain Another phenomenon is distributed software development near shore and offshore teams have become common practice These distributed teams,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,studies give a deep insight into the current state of the art agile development in practice and the still open challenges The studies also deliver,valuable,input for the further evolution of software engineering education Particularly they shed some light on the questions 1 Which are the state of the art,studies give a deep insight into the current state of the art agile development in practice and the still open challenges The studies also deliver valuable input for the further evolution of software engineering education Particularly they shed some light on the questions 1 Which are the state of the art,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,enablers for software development in distributed teams In this paper the authors present this new curriculum approach describe their first experiences and discuss possible further,improvements,The rest of the paper is structured as follows Section two discusses related work Section three presents results from the various studies and their impact,enablers for software development in distributed teams In this paper the authors present this new curriculum approach describe their first experiences and discuss possible further improvements The rest of the paper is structured as follows Section two discusses related work Section three presents results from the various studies and their impact,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,overview of the new Software Engineering module Section five presents how collaboration and agile values are taught and practiced in the classroom The usage and,benefits,of appropriate collaboration tools are discussed Section six evaluates and discusses our observations followed by final conclusions and an outlook on the ongoing evolution of,overview of the new Software Engineering module Section five presents how collaboration and agile values are taught and practiced in the classroom The usage and benefits of appropriate collaboration tools are discussed Section six evaluates and discusses our observations followed by final conclusions and an outlook on the ongoing evolution of,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,1 Maturity leads to Collaboration In 20 it was found that in agile software development experience leads to collaboration It could also be shown that,successful,professional agile teams tend to use more collaboration practices Unfortunately this transition to more and better collaboration tends to take years This raises two questions,1 Maturity leads to Collaboration In 20 it was found that in agile software development experience leads to collaboration It could also be shown that successful professional agile teams tend to use more collaboration practices Unfortunately this transition to more and better collaboration tends to take years This raises two questions,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,are in a privileged situation because all the barriers listed in Table II are either irrelevant or can be minimized by choosing the project setup,well,Still professional and educational projects differ in many ways and we have to be careful not to end up with mimicry Some of the advantages,are in a privileged situation because all the barriers listed in Table II are either irrelevant or can be minimized by choosing the project setup well Still professional and educational projects differ in many ways and we have to be careful not to end up with mimicry Some of the advantages,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,of the Sprint Backlog In the classroom it is possible to set up an environment with little or no impediments which makes this transition much,easier,and faster The remainder of this chapter describes the setup of the student projects and the experience made in respect to agile project management and,of the Sprint Backlog In the classroom it is possible to set up an environment with little or no impediments which makes this transition much easier and faster The remainder of this chapter describes the setup of the student projects and the experience made in respect to agile project management and,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,development teams generate too much complexity for an empirical process like Scrum to manage What about the optimal size of student teams The authors had,best,results when the team size was at the upper limit In smaller student teams there is a risk that the students do not realize the,development teams generate too much complexity for an empirical process like Scrum to manage What about the optimal size of student teams The authors had best results when the team size was at the upper limit In smaller student teams there is a risk that the students do not realize the,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,seen as an overhead and in the worst case only applied because the coach says so In properly sized teams project management is crucial for,success,Another benefit of larger teams is that the students get more work done which results in more realistic software applications In our experience optimal student,seen as an overhead and in the worst case only applied because the coach says so In properly sized teams project management is crucial for success Another benefit of larger teams is that the students get more work done which results in more realistic software applications In our experience optimal student,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,test environment ready before they actually start coding Therefore we introduced a Sprint Zero before the official project start The goal of Sprint Zero is,simple,All teams are able to do automatic testing The students have to implement a complete test case which demonstrates their ability to test the application,test environment ready before they actually start coding Therefore we introduced a Sprint Zero before the official project start The goal of Sprint Zero is simple All teams are able to do automatic testing The students have to implement a complete test case which demonstrates their ability to test the application,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,STUDENT PROJECTS Students and faculty are informed about the project module and asked to send in project ideas Kick off Meeting Presentation and election of,best,suited project ideas Composition of student teams Sprint 0 Students set up complete automatic testing and building environment Walking Skeleton Demonstration of testing and building,STUDENT PROJECTS Students and faculty are informed about the project module and asked to send in project ideas Kick off Meeting Presentation and election of best suited project ideas Composition of student teams Sprint 0 Students set up complete automatic testing and building environment Walking Skeleton Demonstration of testing and building,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,end of the project module all the teams present their application in the plenum This is a great opportunity for all teams to present their,achievements,The presentation takes about 20 minutes and consists of the project vision architecture and design of the application as well as a demonstration C Internet,end of the project module all the teams present their application in the plenum This is a great opportunity for all teams to present their achievements The presentation takes about 20 minutes and consists of the project vision architecture and design of the application as well as a demonstration C Internet,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,The presentation takes about 20 minutes and consists of the project vision architecture and design of the application as well as a demonstration C Internet,simplifies,Collaboration In the educational student project the team is mostly not co located Additionally the students often work at different times This makes collaboration difficult,The presentation takes about 20 minutes and consists of the project vision architecture and design of the application as well as a demonstration C Internet simplifies Collaboration In the educational student project the team is mostly not co located Additionally the students often work at different times This makes collaboration difficult,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,the single team members and the coach possible Without the Internet and its online collaboration tools distributed student teams would not be feasible The tools,simplify,collaboration among students and make progress visible for the coach The same is true for problems and difficulties 1 Jenkins CI Server Jenkins 22 is,the single team members and the coach possible Without the Internet and its online collaboration tools distributed student teams would not be feasible The tools simplify collaboration among students and make progress visible for the coach The same is true for problems and difficulties 1 Jenkins CI Server Jenkins 22 is,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,1 Jenkins CI Server Jenkins 22 is an open source continuous integration server It provides immediate feedback of the build status and the overall project,progress,both to the students and the coach 2 GIT and GitHub Git 23 is a distributed code versioning system CVS designed to handle everything from,1 Jenkins CI Server Jenkins 22 is an open source continuous integration server It provides immediate feedback of the build status and the overall project progress both to the students and the coach 2 GIT and GitHub Git 23 is a distributed code versioning system CVS designed to handle everything from,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,GIT and GitHub Git 23 is a distributed code versioning system CVS designed to handle everything from small to very large projects with speed and,efficiency,Its workflow make it particularly well suited for distributed software development teams Git is the successor of SVN subversion and is rapidly becoming the most,GIT and GitHub Git 23 is a distributed code versioning system CVS designed to handle everything from small to very large projects with speed and efficiency Its workflow make it particularly well suited for distributed software development teams Git is the successor of SVN subversion and is rapidly becoming the most,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,projects GitHub provides several collaboration features such as bug tracking feature requests task management and wikis for every project 3 Trello Trello is a very,simple,collaboration tool 25 for all kind of projects Its main advantage is its simplicity Trello runs in the web browser and almost on any mobile,projects GitHub provides several collaboration features such as bug tracking feature requests task management and wikis for every project 3 Trello Trello is a very simple collaboration tool 25 for all kind of projects Its main advantage is its simplicity Trello runs in the web browser and almost on any mobile,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,in agile software development is important for the outcome Paying special attention to technical practices like automatic unit tests and clean code has had a,positive,effect on design code quality and documentation The coordination of the software development lecture and the student project was reported to be excellent The students,in agile software development is important for the outcome Paying special attention to technical practices like automatic unit tests and clean code has had a positive effect on design code quality and documentation The coordination of the software development lecture and the student project was reported to be excellent The students,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,and practice Next some written statements3 from the software development lecture and student project in the fourth semester The students were asked what they liked,best,Its great that we do Agile Practical relevance of the topics presented Good coordination of lecture and project module Best project module so far I,and practice Next some written statements3 from the software development lecture and student project in the fourth semester The students were asked what they liked best Its great that we do Agile Practical relevance of the topics presented Good coordination of lecture and project module Best project module so far I,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,project module so far I liked that we could choose the projects ourselves Scrum From part time students we often get feedback that they can,benefit,from the agile practices directly in their job Scrum in combination with the online collaboration tools made it possible for the coach to maintain the,project module so far I liked that we could choose the projects ourselves Scrum From part time students we often get feedback that they can benefit from the agile practices directly in their job Scrum in combination with the online collaboration tools made it possible for the coach to maintain the,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,coach to maintain the overview of all student projects Coaching the projects to the desired outcome and assessing the Scrum teams was possible in an,efficient,and transparent manner With respect to the evaluation and assessment of the individual student it is different Assessing individual team member is a contradiction to,coach to maintain the overview of all student projects Coaching the projects to the desired outcome and assessing the Scrum teams was possible in an efficient and transparent manner With respect to the evaluation and assessment of the individual student it is different Assessing individual team member is a contradiction to,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,In the first round all the students of a Scrum team got the same grades The team setup is critical with respect to finding a,well,balanced team with the necessary level of knowhow motivation and commitment Other critical issues are the roles of Product Owner and Scrum Master We let,In the first round all the students of a Scrum team got the same grades The team setup is critical with respect to finding a well balanced team with the necessary level of knowhow motivation and commitment Other critical issues are the roles of Product Owner and Scrum Master We let,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,mature agile teams apply more collaboration practices Therefore it is important that the students learn about collaboration practices and how to live them This is,best,realized in a real agile project This paper discusses how educational projects can be setup in such a way that students can experience the importance,mature agile teams apply more collaboration practices Therefore it is important that the students learn about collaboration practices and how to live them This is best realized in a real agile project This paper discusses how educational projects can be setup in such a way that students can experience the importance,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,experience the importance of collaboration The Internet and its plethora of online tools act as an enabler of collaboration in agile educational software projects The,benefits,of online collaboration tools make it possible for the lecturer to coach and steer student software development projects and last but not least assess the,experience the importance of collaboration The Internet and its plethora of online tools act as an enabler of collaboration in agile educational software projects The benefits of online collaboration tools make it possible for the lecturer to coach and steer student software development projects and last but not least assess the,2016
EDUCON_Collaboration_and_human_factors_in_software_development_Teaching_agile_methodologies_based_on_industrial_insight_2016_IEEE_cleaned.txt,lecturer to coach and steer student software development projects and last but not least assess the students The authors are convinced that software engineering education,benefits,significantly by embracing the modern collaboration tools the Internet has made available 3 The statements are translated from German The statements are taken from the,lecturer to coach and steer student software development projects and last but not least assess the students The authors are convinced that software engineering education benefits significantly by embracing the modern collaboration tools the Internet has made available 3 The statements are translated from German The statements are taken from the,2016
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,new car which runs 100 miles per gallon 1 Several recent surveys 2 3 show that agile methodologies like Scrum Extreme Programming or Kanban have,successfully,been adopted by many companies to develop software However agile methodologies do not come for free A different set of skills or agile practices as,new car which runs 100 miles per gallon 1 Several recent surveys 2 3 show that agile methodologies like Scrum Extreme Programming or Kanban have successfully been adopted by many companies to develop software However agile methodologies do not come for free A different set of skills or agile practices as,2014
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,with architects seniors and juniors in one team and many of them are not yet familiar with the agile philosophy Even though those teams have,improved,in software development to some extent they are far less productive than the early adopter expert teams Survey results show that quality has partially even,with architects seniors and juniors in one team and many of them are not yet familiar with the agile philosophy Even though those teams have improved in software development to some extent they are far less productive than the early adopter expert teams Survey results show that quality has partially even,2014
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,semester team project where the taught competences are directly applied Especially the latter approach requires a strong coordination of the different courses This is not,easy,with lecturers who insist on their independence of teaching The authors have started to adapt their software engineering courses in the mentioned directions and have,semester team project where the taught competences are directly applied Especially the latter approach requires a strong coordination of the different courses This is not easy with lecturers who insist on their independence of teaching The authors have started to adapt their software engineering courses in the mentioned directions and have,2014
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,insist on their independence of teaching The authors have started to adapt their software engineering courses in the mentioned directions and have made first very,positive,experiences and received encouraging feedback from the students A A Bottom up Adapted Teaching Approach Figure 2 shows the adapted software engineering curriculum of UAS,insist on their independence of teaching The authors have started to adapt their software engineering courses in the mentioned directions and have made first very positive experiences and received encouraging feedback from the students A A Bottom up Adapted Teaching Approach Figure 2 shows the adapted software engineering curriculum of UAS,2014
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,write and estimate user stories do the release and sprint planning and execute four sprints with 10 minutes each including the retrospectives for continuous process,improvement,B An Integrated Teaching Approach Since 2012 a Software Engineering course has been taught at Zurich University of Applied Sciences which is designed to give,write and estimate user stories do the release and sprint planning and execute four sprints with 10 minutes each including the retrospectives for continuous process improvement B An Integrated Teaching Approach Since 2012 a Software Engineering course has been taught at Zurich University of Applied Sciences which is designed to give,2014
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,Agile Development Sprint 5 Agile Development Sprint 6 Preparation for examination No workshop V EXPERIENCES AND ANALYSIS The feedback for both described approaches is very,positive,each having its strengths and weaknesses A A Bottom up Adapted Teaching Approach The course Software Construction is taught in the second semester parallel to,Agile Development Sprint 5 Agile Development Sprint 6 Preparation for examination No workshop V EXPERIENCES AND ANALYSIS The feedback for both described approaches is very positive each having its strengths and weaknesses A A Bottom up Adapted Teaching Approach The course Software Construction is taught in the second semester parallel to,2014
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,students like the course for several reasons first it is very practice oriented introducing and applying todays state of art tools and environments for an,efficient,software development as needed for an agile approach Second students are used to and like to work with tools They experiment with them themselves and,students like the course for several reasons first it is very practice oriented introducing and applying todays state of art tools and environments for an efficient software development as needed for an agile approach Second students are used to and like to work with tools They experiment with them themselves and,2014
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,control with immediate feedback The open dashboard of the continuous integration server where the build results of all groups are available establishes transparency and a,positive,competition among the teams The teams rapidly see the advantages of such environments and are asking to use it for the student projects The guest,control with immediate feedback The open dashboard of the continuous integration server where the build results of all groups are available establishes transparency and a positive competition among the teams The teams rapidly see the advantages of such environments and are asking to use it for the student projects The guest,2014
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,of software development The feedback for the Scrum City Game simulation is very encouraging The students especially like living the complete process and make very,positive,experiences with the retrospective as a mean for a continuous process improvement which even works with small 10 sprints Another student feedback is that they,of software development The feedback for the Scrum City Game simulation is very encouraging The students especially like living the complete process and make very positive experiences with the retrospective as a mean for a continuous process improvement which even works with small 10 sprints Another student feedback is that they,2014
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,with 25 students3 An excerpt of the encouraging results is shown in Table 3 The evaluation shows that the concept of this course is being,well,received and that participants are learning a great deal about agile methodologies while having fun The evaluation shows that the adjustments for the fall 2013,with 25 students3 An excerpt of the encouraging results is shown in Table 3 The evaluation shows that the concept of this course is being well received and that participants are learning a great deal about agile methodologies while having fun The evaluation shows that the adjustments for the fall 2013,2014
EDUCON_New_sustainable_teaching_approaches_in_software_engineering_education_2014_IEEE_cleaned.txt,that participants are learning a great deal about agile methodologies while having fun The evaluation shows that the adjustments for the fall 2013 lectures have,improved,it even more,that participants are learning a great deal about agile methodologies while having fun The evaluation shows that the adjustments for the fall 2013 lectures have improved it even more,2014
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,concepts using the Scrum framework in real life projects is presented It extends the PBL concept with respect to competences Feedback from students customers as,well,as our own experience confirm the benefits of the presented approach Keywords Project Based Learning Agile Methods Scrum Software Engineering Coaching Student Self Assessment I,concepts using the Scrum framework in real life projects is presented It extends the PBL concept with respect to competences Feedback from students customers as well as our own experience confirm the benefits of the presented approach Keywords Project Based Learning Agile Methods Scrum Software Engineering Coaching Student Self Assessment I,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,students are heterogeneous on the other hand professors and lecturers have to teach subjects fast and effectively Project based learning PBL is an accepted and,valuable,didactic approach that builds up knowledge using a constructivist learning approach 4 and facilitates the development of key competences required by future employers 11 It,students are heterogeneous on the other hand professors and lecturers have to teach subjects fast and effectively Project based learning PBL is an accepted and valuable didactic approach that builds up knowledge using a constructivist learning approach 4 and facilitates the development of key competences required by future employers 11 It,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,and skills that enable a person or an organization to act effectively in a job or situation In our opinion the definition from 5 fits,well,with our association of this term This links to the skills that enable someone to solve problems in a variety of situations The sufficiency of,and skills that enable a person or an organization to act effectively in a job or situation In our opinion the definition from 5 fits well with our association of this term This links to the skills that enable someone to solve problems in a variety of situations The sufficiency of,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,term This links to the skills that enable someone to solve problems in a variety of situations The sufficiency of knowledge describes the situation very,well,Beside technical and functional knowledge acquired in the curriculum of computer science or business information systems studies working in projects with varying topics requires from,term This links to the skills that enable someone to solve problems in a variety of situations The sufficiency of knowledge describes the situation very well Beside technical and functional knowledge acquired in the curriculum of computer science or business information systems studies working in projects with varying topics requires from,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,working in projects with varying topics requires from our point of view the following competences Being able to understand the customer requirements and develop IT,solutions,that satisfy the customer Negotiating realistic requirements and project conditions Planning and controlling projects with fixed deadlines and budget Recognizing problems early and handling escalations,working in projects with varying topics requires from our point of view the following competences Being able to understand the customer requirements and develop IT solutions that satisfy the customer Negotiating realistic requirements and project conditions Planning and controlling projects with fixed deadlines and budget Recognizing problems early and handling escalations,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,different sites Being able to interact with people from different cultures Result orientation and quality awareness In addition the level of commitment is important as,well,meaning the wanting to do it Mapping these ideas to student projects requires more than standard PBL to build up these competences We want the,different sites Being able to interact with people from different cultures Result orientation and quality awareness In addition the level of commitment is important as well meaning the wanting to do it Mapping these ideas to student projects requires more than standard PBL to build up these competences We want the,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,for motivation are freedom purpose and expertise Purpose We select projects that are either focusing on leading edge technology current trends or with high social,value,We ask the partner companies to provide projects that are of real interest and provide real values Therefore it is pretty obvious for the students,for motivation are freedom purpose and expertise Purpose We select projects that are either focusing on leading edge technology current trends or with high social value We ask the partner companies to provide projects that are of real interest and provide real values Therefore it is pretty obvious for the students,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,provide projects that are of real interest and provide real values Therefore it is pretty obvious for the students to see the purpose and the,value,of the project which typically leads to a high engagement level Freedom Students are free to choose from a portfolio of different projects They are,provide projects that are of real interest and provide real values Therefore it is pretty obvious for the students to see the purpose and the value of the project which typically leads to a high engagement level Freedom Students are free to choose from a portfolio of different projects They are,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,professors we act as coaches rather than as grading instances so that the students see and feel how their skills improve The module International Business,solution,Project IBSP in the 6th semester of our Business Information System Bachelors degree program implements our extended PBL concept Weve successfully run the module for,professors we act as coaches rather than as grading instances so that the students see and feel how their skills improve The module International Business solution Project IBSP in the 6th semester of our Business Information System Bachelors degree program implements our extended PBL concept Weve successfully run the module for,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,the module for more than 8 years implementing more than 100 IT related projects It deepens the students understanding of formerly pure knowledge it shows,best,practices and improves the students ability to apply this knowledge All the stakeholders students professors and companies are impressed by the results This paper outlines,the module for more than 8 years implementing more than 100 IT related projects It deepens the students understanding of formerly pure knowledge it shows best practices and improves the students ability to apply this knowledge All the stakeholders students professors and companies are impressed by the results This paper outlines,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,students ability to apply this knowledge All the stakeholders students professors and companies are impressed by the results This paper outlines why our approach is,successful,and helpful for agile projects in the software development domain II HOW DID WE IMPLEMENT IT Our approach to PBL is specific with respect to,students ability to apply this knowledge All the stakeholders students professors and companies are impressed by the results This paper outlines why our approach is successful and helpful for agile projects in the software development domain II HOW DID WE IMPLEMENT IT Our approach to PBL is specific with respect to,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,and even start ups A project has a capacity of round about 1000 person hours which allows the implementation of complex topics Approaches with standard,solutions,e g implementations of an existing specification or a standard 3 tier web architecture are avoided The application of technology in an innovative context e,and even start ups A project has a capacity of round about 1000 person hours which allows the implementation of complex topics Approaches with standard solutions e g implementations of an existing specification or a standard 3 tier web architecture are avoided The application of technology in an innovative context e,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,innovative context e g with mobile devices cloud computing machine learning containers like Docker is an important aim of these projects This helps students as,well,as supervisors to get hands on experience with the latest technologies B Teams The students apply for projects topics or customers resp Then the supervisors,innovative context e g with mobile devices cloud computing machine learning containers like Docker is an important aim of these projects This helps students as well as supervisors to get hands on experience with the latest technologies B Teams The students apply for projects topics or customers resp Then the supervisors,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,latest technologies B Teams The students apply for projects topics or customers resp Then the supervisors define teams consisting of 5 7 persons Literature on,effective,teams confirms teams up to 5 persons 16 This process is based on the preferences listed by students During the group assignment process supervisors take,latest technologies B Teams The students apply for projects topics or customers resp Then the supervisors define teams consisting of 5 7 persons Literature on effective teams confirms teams up to 5 persons 16 This process is based on the preferences listed by students During the group assignment process supervisors take,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,the group assignment process supervisors take into consideration the abilities of each student making sure that each student group has the necessary abilities to be,successful,The project teams act self responsible under periodic coaching from supervisors C SCRUM Education Students are provided with a one day introduction to Scrum before,the group assignment process supervisors take into consideration the abilities of each student making sure that each student group has the necessary abilities to be successful The project teams act self responsible under periodic coaching from supervisors C SCRUM Education Students are provided with a one day introduction to Scrum before,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,then will choose the team as a contractor The definition of a useful proposal requires the definition of a clear aim of the project as,well,as a backlog of requirements with an estimation and prioritization of the relevant user stories In order to achieve this goal students receive another Scrum,then will choose the team as a contractor The definition of a useful proposal requires the definition of a clear aim of the project as well as a backlog of requirements with an estimation and prioritization of the relevant user stories In order to achieve this goal students receive another Scrum,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,the supervisors In this structure the students project is used as the real life example of a Scrum project which makes the Scrum training very,effective,D Structure of the module tools and methods Our approach is supported by an infrastructure consisting of different tools and guide lines in place The,the supervisors In this structure the students project is used as the real life example of a Scrum project which makes the Scrum training very effective D Structure of the module tools and methods Our approach is supported by an infrastructure consisting of different tools and guide lines in place The,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,type of the project there will be additional roles like developer software architect or tester The teams are requested to provide status reports weekly as,well,as report their working hours together with the achieved results Two peer reviews are conducted at mid term and at the end of the term,type of the project there will be additional roles like developer software architect or tester The teams are requested to provide status reports weekly as well as report their working hours together with the achieved results Two peer reviews are conducted at mid term and at the end of the term,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,grading scheme based on six criteria was developed These were derived from our personal experience as team leaders or managers in the real world as,well,as from current studies e g 11 about the requested skills of employees in the IT area Technical expertise this criterion reflects the ability to,grading scheme based on six criteria was developed These were derived from our personal experience as team leaders or managers in the real world as well as from current studies e g 11 about the requested skills of employees in the IT area Technical expertise this criterion reflects the ability to,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,current studies e g 11 about the requested skills of employees in the IT area Technical expertise this criterion reflects the ability to adapt and,enhance,the technical skills students should have developed during their studies and during the project Functional and domain expertise this represents the ability and the skills,current studies e g 11 about the requested skills of employees in the IT area Technical expertise this criterion reflects the ability to adapt and enhance the technical skills students should have developed during their studies and during the project Functional and domain expertise this represents the ability and the skills,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,and domain expertise this represents the ability and the skills of the students when it comes to analyzing understanding and modeling or designing problems and,solutions,in the customers domain Quality Focus do students do their best to achieve high quality results What kind of actions are performed to ensure quality,and domain expertise this represents the ability and the skills of the students when it comes to analyzing understanding and modeling or designing problems and solutions in the customers domain Quality Focus do students do their best to achieve high quality results What kind of actions are performed to ensure quality,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,Focus do students do their best to achieve high quality results What kind of actions are performed to ensure quality learn from errors and systematically,enhance,the quality of the produced results be it documents or code Communication Skills this criterion reflects the need of working together closely and communicating efficiently,Focus do students do their best to achieve high quality results What kind of actions are performed to ensure quality learn from errors and systematically enhance the quality of the produced results be it documents or code Communication Skills this criterion reflects the need of working together closely and communicating efficiently,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,of the produced results be it documents or code Communication Skills this criterion reflects the need of working together closely and communicating efficiently politely and,well,structured with colleagues customers and coaches Teamwork and team focus most of nowadays work heavily depends on joint work with colleagues within a team or,of the produced results be it documents or code Communication Skills this criterion reflects the need of working together closely and communicating efficiently politely and well structured with colleagues customers and coaches Teamwork and team focus most of nowadays work heavily depends on joint work with colleagues within a team or,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,This is where agile methods of software development such as Scrum or Lean are needed Motivation and Engagement is students willingness to contribute to the,success,of the project in an adequate manner These criteria were made transparent to students They were asked to evaluate themselves and their team mates twice,This is where agile methods of software development such as Scrum or Lean are needed Motivation and Engagement is students willingness to contribute to the success of the project in an adequate manner These criteria were made transparent to students They were asked to evaluate themselves and their team mates twice,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,results of these reflections and peer ratings are discussed in section V C In individual interviews at the end of the semester students present their,achievement,and results in a discussion with their supervisors They have to emphasize contributions that they are especially proud of In addition to these supervisors take,results of these reflections and peer ratings are discussed in section V C In individual interviews at the end of the semester students present their achievement and results in a discussion with their supervisors They have to emphasize contributions that they are especially proud of In addition to these supervisors take,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,deployment is crucial to continuously deliver software increments with manageable testing efforts 8 Bringing in a new software increment requires testing of the new as,well,as well as the existing increments to show that the code is still valid Without automation testing efforts would increase with every increment significantly reducing,deployment is crucial to continuously deliver software increments with manageable testing efforts 8 Bringing in a new software increment requires testing of the new as well as well as the existing increments to show that the code is still valid Without automation testing efforts would increase with every increment significantly reducing,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,which has to be tuned to an individuals capabilities However such approaches cannot be used to construct knowledge in a Computer Science environment as the,solutions,proposed are shorter lectures frequent tests and self assessment schemes 15 They cannot help to build up capabilities and soft skills from complementary areas as,which has to be tuned to an individuals capabilities However such approaches cannot be used to construct knowledge in a Computer Science environment as the solutions proposed are shorter lectures frequent tests and self assessment schemes 15 They cannot help to build up capabilities and soft skills from complementary areas as,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,of the evaluation of a two stage formative peer review feedback 17 a student evaluation of the module including the way it was taught as,well,as the reflections of the lecturing staff that was collected in a blog Thus the mix of quantitative and qualitative methods helps to evaluate the,of the evaluation of a two stage formative peer review feedback 17 a student evaluation of the module including the way it was taught as well as the reflections of the lecturing staff that was collected in a blog Thus the mix of quantitative and qualitative methods helps to evaluate the,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,up that were logged and discussed by the involved Professors This is listed below as our experience These reflections help to identify problems identify possible,solutions,and improve the module They have been used as qualitative data as often suggested by the Triangulation method 7 V EXPERIENCES FROM 8 YEARS PROJECTS,up that were logged and discussed by the involved Professors This is listed below as our experience These reflections help to identify problems identify possible solutions and improve the module They have been used as qualitative data as often suggested by the Triangulation method 7 V EXPERIENCES FROM 8 YEARS PROJECTS,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,their understanding improve their testing techniques during the development and optimize their build and deployment infrastructure They will understand very fast the need and the,benefit,of automated tests With real life customer they feel the pressure of expected continuous delivery which makes the experiences very realistic and motivates the students,their understanding improve their testing techniques during the development and optimize their build and deployment infrastructure They will understand very fast the need and the benefit of automated tests With real life customer they feel the pressure of expected continuous delivery which makes the experiences very realistic and motivates the students,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,All these have to be handled by students The project supervisors provide advice and support the teams by coaching As a consequence the students learn,efficient,ways of communication and also learn to use strategies for de escalation In order to evaluate the quality of the lecture and to determine if,All these have to be handled by students The project supervisors provide advice and support the teams by coaching As a consequence the students learn efficient ways of communication and also learn to use strategies for de escalation In order to evaluate the quality of the lecture and to determine if,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,passed the module think or say e g after they already left university The customers perspective which reflects how the real world sees the students,improvements,and learnings The current students reflection on their own performance and the feedback to and from their team mates with respect to the criteria discussed,passed the module think or say e g after they already left university The customers perspective which reflects how the real world sees the students improvements and learnings The current students reflection on their own performance and the feedback to and from their team mates with respect to the criteria discussed,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,on their own performance and the feedback to and from their team mates with respect to the criteria discussed above Supervisors regularly reflect on the,progress,of the project In retrospective meetings at the end of term problems and solutions are identified reflected and documented in a blog In this way,on their own performance and the feedback to and from their team mates with respect to the criteria discussed above Supervisors regularly reflect on the progress of the project In retrospective meetings at the end of term problems and solutions are identified reflected and documented in a blog In this way,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,encouraged to make mistakes and hence learn important lessons B Customers Perspective Also from the outside perspective the responses to that learning style are very,positive,Industry partners are enthusiastic about the module design and state that they missed this during their studies Companies are applying for projects repeatedly The counterparts,encouraged to make mistakes and hence learn important lessons B Customers Perspective Also from the outside perspective the responses to that learning style are very positive Industry partners are enthusiastic about the module design and state that they missed this during their studies Companies are applying for projects repeatedly The counterparts,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,support the student teams with advice and share their experience The companies use the results in sales cases for internal promotions and even run software,solutions,productively C Peer and Self Reflection Results As already mentioned above students were asked twice during the project to reflect and estimate their own performance,support the student teams with advice and share their experience The companies use the results in sales cases for internal promotions and even run software solutions productively C Peer and Self Reflection Results As already mentioned above students were asked twice during the project to reflect and estimate their own performance,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,project each student participates in a personal interview where she or he reflects on the categories mentioned Students receive the feedback from the team as,well,as the feedback of the professor coaching the team In most cases there is a good correlation between self reflection and peer feedback However there,project each student participates in a personal interview where she or he reflects on the categories mentioned Students receive the feedback from the team as well as the feedback of the professor coaching the team In most cases there is a good correlation between self reflection and peer feedback However there,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,of the team mates In these cases the coach has to work with the student and show ways or methods how that situation can be,improved,In the course we collect anonymized data containing self reflection and peer feedback Looking at that data lead to interesting observations Figure 1 and Figure,of the team mates In these cases the coach has to work with the student and show ways or methods how that situation can be improved In the course we collect anonymized data containing self reflection and peer feedback Looking at that data lead to interesting observations Figure 1 and Figure,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,evaluation rounds during one term containing data of 32 students organized in 7 teams The scale has been selected in such a way that a,value,of 200 means the according skill is assumed to be very good while a value of 100 means that it should be improved since there,evaluation rounds during one term containing data of 32 students organized in 7 teams The scale has been selected in such a way that a value of 200 means the according skill is assumed to be very good while a value of 100 means that it should be improved since there,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,figures show that during the second evaluation all the skills improve and since this is not only a result of the self reflection Im getting,better,at it but also of the team feedback She he is performing better this shows that the concept of this formative element helps student to,figures show that during the second evaluation all the skills improve and since this is not only a result of the self reflection Im getting better at it but also of the team feedback She he is performing better this shows that the concept of this formative element helps student to,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,also correlates with interviews with the customers that work with the team and the grades given by the professors These results suggest that the biggest,improvement,has been achieved in the area of soft skills communication and team orientation as well as the commitment to the project D Students Evaluation of,also correlates with interviews with the customers that work with the team and the grades given by the professors These results suggest that the biggest improvement has been achieved in the area of soft skills communication and team orientation as well as the commitment to the project D Students Evaluation of,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,course evaluation process where all the courses and all the professors and supervisors are rated by the students Student feedback always rates the module clearly,better,than the universitys and the departments average And from the comments and statements given by students e g the close cooperation with the customer facilitates,course evaluation process where all the courses and all the professors and supervisors are rated by the students Student feedback always rates the module clearly better than the universitys and the departments average And from the comments and statements given by students e g the close cooperation with the customer facilitates,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,substantial knowhow they gained They appreciate the role of the professors as coaches rather than as lecturers which is confirmed by literature to be a,better,teaching approach 1 On the other hand the evaluation results also show that the projects are very intensive and the students perceive to have a,substantial knowhow they gained They appreciate the role of the professors as coaches rather than as lecturers which is confirmed by literature to be a better teaching approach 1 On the other hand the evaluation results also show that the projects are very intensive and the students perceive to have a,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,a project based learning approach for teaching software engineering concepts in which students are coached rather than taught in a classical manner Qualitative observations as,well,as results based on quantitative data were illustrated and discussed All these suggest that students improved their soft and technical skills during this module The,a project based learning approach for teaching software engineering concepts in which students are coached rather than taught in a classical manner Qualitative observations as well as results based on quantitative data were illustrated and discussed All these suggest that students improved their soft and technical skills during this module The,2018
EDUCON_Teaching_agile_principles_and_software_engineering_concepts_through_real-life_projects_2018_IEEE_cleaned.txt,intercultural competencies and experience in international set ups These requirements are addressed in our new international Bachelors Program International IT Business where the International Business,solution,Project is also part of The number of international projects is expected to raise to more than 50 in the next years,intercultural competencies and experience in international set ups These requirements are addressed in our new international Bachelors Program International IT Business where the International Business solution Project is also part of The number of international projects is expected to raise to more than 50 in the next years,2018
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,on human interaction and work life balance we believe that experiencing a full agile product development cycle in the risk free academic environment is a,benefit,not only for our students technical skills but to their social skills as well I INTRODUCTION Technical topics such as data structures and algorithms software,on human interaction and work life balance we believe that experiencing a full agile product development cycle in the risk free academic environment is a benefit not only for our students technical skills but to their social skills as well I INTRODUCTION Technical topics such as data structures and algorithms software,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,believe that the human side how to deal with collaborative software development processes and their need for self organization motivation and work coordination can greatly,benefit,students in their transition to and success in todays job market A lab course specifically tailored to the use of a concrete software development methodology,believe that the human side how to deal with collaborative software development processes and their need for self organization motivation and work coordination can greatly benefit students in their transition to and success in todays job market A lab course specifically tailored to the use of a concrete software development methodology,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,products to be created by students in our labs Of particular interest are two issues which we have identified to be especially detrimental to the,success,of the labs Firstly academic instructors tend to introduce cutting edge research topics into their labs mostly this is done in the hope of recruiting,products to be created by students in our labs Of particular interest are two issues which we have identified to be especially detrimental to the success of the labs Firstly academic instructors tend to introduce cutting edge research topics into their labs mostly this is done in the hope of recruiting,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,lot of time on getting up to speed on the topic which is not the focus of a software development lab Secondly while we do,value,software modeling getting the model right can consume so much time that the inevitable coding part at the end of the project is more like,lot of time on getting up to speed on the topic which is not the focus of a software development lab Secondly while we do value software modeling getting the model right can consume so much time that the inevitable coding part at the end of the project is more like,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,time available and the number of students involved Performing a generic RUP process with a small number of students for example is not going to,benefit,anyone Two years ago we devised a new software development lab to alleviate these problems As we discuss in this paper we have chosen an,time available and the number of students involved Performing a generic RUP process with a small number of students for example is not going to benefit anyone Two years ago we devised a new software development lab to alleviate these problems As we discuss in this paper we have chosen an,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,through the highly iterative nature of agile processes We have chosen Scrum 1 as the actual process Furthermore an particular emphasis was placed on an,easy,to understand fun challenge which was highly motivational for students yet offered many of the challenges of real world software products especially the requirements of,through the highly iterative nature of agile processes We have chosen Scrum 1 as the actual process Furthermore an particular emphasis was placed on an easy to understand fun challenge which was highly motivational for students yet offered many of the challenges of real world software products especially the requirements of,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,proper tooling infrastructure based on Eclipse and a product skeleton for the students to build upon We were able to organize and manage two particularly,successful,lab courses in the years 2010 and 2011 The selected set of organizational technical and product features seems well balanced and therefore it appears beneficial,proper tooling infrastructure based on Eclipse and a product skeleton for the students to build upon We were able to organize and manage two particularly successful lab courses in the years 2010 and 2011 The selected set of organizational technical and product features seems well balanced and therefore it appears beneficial,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,must be avoided if possible and b that the project organization means and infrastructure taught in the course are ineffective for leading a project to,success,Our goal in the new setup of the software development lab course is to improve on past installments and to teach students the cornerstones a,must be avoided if possible and b that the project organization means and infrastructure taught in the course are ineffective for leading a project to success Our goal in the new setup of the software development lab course is to improve on past installments and to teach students the cornerstones a,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,of the software development lab course is to improve on past installments and to teach students the cornerstones a software development endeavor requires to be,successful,For this we decided to teach by example and hence to provide a healthy and effective organizational frame In this frame we rely on empirically,of the software development lab course is to improve on past installments and to teach students the cornerstones a software development endeavor requires to be successful For this we decided to teach by example and hence to provide a healthy and effective organizational frame In this frame we rely on empirically,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,the completeness of the product that the student create during the lab course and more emphasis on the process of product creation and its continuous,improvement,during the lab A Product In previous courses the students got involved in cutting edge research topics and developed a product realizing innovative but not,the completeness of the product that the student create during the lab course and more emphasis on the process of product creation and its continuous improvement during the lab A Product In previous courses the students got involved in cutting edge research topics and developed a product realizing innovative but not,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,the lab A Product In previous courses the students got involved in cutting edge research topics and developed a product realizing innovative but not yet,well,established ideas e g a visual scene rendering engine with an easy programmable animation interface The students were therefore heavily occupied by catching up with,the lab A Product In previous courses the students got involved in cutting edge research topics and developed a product realizing innovative but not yet well established ideas e g a visual scene rendering engine with an easy programmable animation interface The students were therefore heavily occupied by catching up with,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,significant part of students attention To concentrate more on learning the main activities for managing and carrying out software development we instead suggest developing a,simple,and easy to grasp product The product vision must be clear enough to fully explain and understand it immediately and must allow focusing on the,significant part of students attention To concentrate more on learning the main activities for managing and carrying out software development we instead suggest developing a simple and easy to grasp product The product vision must be clear enough to fully explain and understand it immediately and must allow focusing on the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,actual process of software development right from the beginning To keep motivation among the participating students high the product has to be appealing despite its,simplicity,In our lab course we decided to develop a simple card game for software engineers called The Bug is a Lie The game is a,actual process of software development right from the beginning To keep motivation among the participating students high the product has to be appealing despite its simplicity In our lab course we decided to develop a simple card game for software engineers called The Bug is a Lie The game is a,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,people take manager honest developers evil code monkeys and consultants and how they more often than not work against each other This card game is,well,suited for a lab course since 1 it is easily and shortly explained and 2 it is not only a virtual game but also has,people take manager honest developers evil code monkeys and consultants and how they more often than not work against each other This card game is well suited for a lab course since 1 it is easily and shortly explained and 2 it is not only a virtual game but also has,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,database layer For illustrating the game the students have 4 to sketch a graphical user interface according to customers needs One of the most convincing,advantages,of this card game is that it is 5 easily decomposed into self contained work packages or user stories After the initial setup of the,database layer For illustrating the game the students have 4 to sketch a graphical user interface according to customers needs One of the most convincing advantages of this card game is that it is 5 easily decomposed into self contained work packages or user stories After the initial setup of the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,to draw two cards The game can therefore be developed in iterations each providing an executable and playable fraction of the game To highlight the,advantages,of Scrum for a product with unclear and changing requirements user stories can be uncovered gradually over the course of the lab Additionally the initial,to draw two cards The game can therefore be developed in iterations each providing an executable and playable fraction of the game To highlight the advantages of Scrum for a product with unclear and changing requirements user stories can be uncovered gradually over the course of the lab Additionally the initial,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,to account for the current state of the product and the capabilities of the team Altogether the game The Bug is a Lie is an,easy,to understand card game which nevertheless poses enough challenges to students While the game logic is rather straightforward to be implemented since it is given,to account for the current state of the product and the capabilities of the team Altogether the game The Bug is a Lie is an easy to understand card game which nevertheless poses enough challenges to students While the game logic is rather straightforward to be implemented since it is given,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,the design of an elaborate architecture comprehensive coding and rigorous testing B Process Organization The purpose of the lab course is to teach how to,successfully,develop software The main focus is therefore not placed on the product but on the introduction of an up to date software development process and,the design of an elaborate architecture comprehensive coding and rigorous testing B Process Organization The purpose of the lab course is to teach how to successfully develop software The main focus is therefore not placed on the product but on the introduction of an up to date software development process and,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,to balance customers needs and development time how to cope with changes and how to organize themselves in a team Since agile processes are a,well,known approach to flexibly cope with unanticipated changes in customers requirements the lab course is based on the agile process Scrum 1 In Scrum the,to balance customers needs and development time how to cope with changes and how to organize themselves in a team Since agile processes are a well known approach to flexibly cope with unanticipated changes in customers requirements the lab course is based on the agile process Scrum 1 In Scrum the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,yet treated user stories changes or extensions are collected but remain in a separate product backlog to be introduced in future sprints To monitor the,progress,during a sprint and to make it visible to everyone a burn down chart capturing the remaining efforts for the current sprint is created and,yet treated user stories changes or extensions are collected but remain in a separate product backlog to be introduced in future sprints To monitor the progress during a sprint and to make it visible to everyone a burn down chart capturing the remaining efforts for the current sprint is created and,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,working on software development around forty hours per week However the real world is intruding with organizational duties like installing software or doing paperwork as,well,as delays due to sickness holidays hardware breakdowns and the like The velocity parameter is team specific and captures the ratio of effective work hours,working on software development around forty hours per week However the real world is intruding with organizational duties like installing software or doing paperwork as well as delays due to sickness holidays hardware breakdowns and the like The velocity parameter is team specific and captures the ratio of effective work hours,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,take the roles of Scrum master and product owner respectively Since tutors are more experienced and not directly involved in the development work they can,better,supervise the process and ensure that the Scrum values are respected Furthermore organizational problems like providing meeting rooms can only be solved by university staff,take the roles of Scrum master and product owner respectively Since tutors are more experienced and not directly involved in the development work they can better supervise the process and ensure that the Scrum values are respected Furthermore organizational problems like providing meeting rooms can only be solved by university staff,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,elicit them in requirements meetings Trainings with participants unfamiliar to Scrum 4 showed that user story decomposition is too complex for beginners and decomposition is,better,trained through task decomposition of user stories The students themselves are responsible for estimating user stories and assembling the sprint backlog By letting them independently,elicit them in requirements meetings Trainings with participants unfamiliar to Scrum 4 showed that user story decomposition is too complex for beginners and decomposition is better trained through task decomposition of user stories The students themselves are responsible for estimating user stories and assembling the sprint backlog By letting them independently,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,product owner for Scrum meetings once a week which corresponds to one meeting every thirteen working hours for a fifteen minutes standup meeting report on,progress,plans and impediments in the fashion of a weekly Scrum meeting Other tutors meetings are scheduled as needed during the standup meetings At the end,product owner for Scrum meetings once a week which corresponds to one meeting every thirteen working hours for a fifteen minutes standup meeting report on progress plans and impediments in the fashion of a weekly Scrum meeting Other tutors meetings are scheduled as needed during the standup meetings At the end,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,the implemented features Each sprint closes with the sprint retrospective where the team reflects about the execution of the last sprint and identifies areas of,improvement,guided by the Scrum master C Tooling Infrastructure The tooling infrastructure is primarily designated to support the Scrum process discussed above The tooling infrastructure is,the implemented features Each sprint closes with the sprint retrospective where the team reflects about the execution of the last sprint and identifies areas of improvement guided by the Scrum master C Tooling Infrastructure The tooling infrastructure is primarily designated to support the Scrum process discussed above The tooling infrastructure is,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,testing support a version control system a web based issue tracker and wiki for the management of the product and sprint backlogs a continuous integration,solution,and a UML tool In the selection of the tools we put special emphasis on tools that integrate well with each other provide a consistent,testing support a version control system a web based issue tracker and wiki for the management of the product and sprint backlogs a continuous integration solution and a UML tool In the selection of the tools we put special emphasis on tools that integrate well with each other provide a consistent,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,with good tool integrations Trac 6 as web based issue tracker and wiki and Subversion SVN 7 as version control system All three tools integrate,well,with each other Eclipse and Trac offer both sophisticated means for linking and navigating between related resources allowing for a quicker and better understanding of,with good tool integrations Trac 6 as web based issue tracker and wiki and Subversion SVN 7 as version control system All three tools integrate well with each other Eclipse and Trac offer both sophisticated means for linking and navigating between related resources allowing for a quicker and better understanding of,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,draws burn down charts based on workload estimations attached to tickets Fig 2 shows the sprint whiteboard wiki page featuring a burn down chart as,well,as automatically updated ticket lists generated from ticket queries that show sprint backlog items i e items not yet started items in progress and completed,draws burn down charts based on workload estimations attached to tickets Fig 2 shows the sprint whiteboard wiki page featuring a burn down chart as well as automatically updated ticket lists generated from ticket queries that show sprint backlog items i e items not yet started items in progress and completed,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,add the Bitten 9 continuous integration plug in to Trac that builds the product runs all tests every six hours and displays results on build,success,test success code size and unit test coverage on the lab course s Trac site Our Eclipse setup also includes test supporting tools While JUnit,add the Bitten 9 continuous integration plug in to Trac that builds the product runs all tests every six hours and displays results on build success test success code size and unit test coverage on the lab course s Trac site Our Eclipse setup also includes test supporting tools While JUnit,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,runs all affected unit tests on code changes Finally we introduce MagicDraw 12 for the creation of UML diagrams We periodically encourage students to use,simple,and communicative UML diagrams as means for discussing and clarifying designs and for documenting design decisions at the end of each sprint Therefore we try,runs all affected unit tests on code changes Finally we introduce MagicDraw 12 for the creation of UML diagrams We periodically encourage students to use simple and communicative UML diagrams as means for discussing and clarifying designs and for documenting design decisions at the end of each sprint Therefore we try,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,with clearly represented UML diagrams D Libraries Similar to the lab course tooling infrastructure we focus on state of the art exemplary libraries that feature,well,designed programming interfaces from which the students can learn and which help our participants in creating the product we require them to produce In the,with clearly represented UML diagrams D Libraries Similar to the lab course tooling infrastructure we focus on state of the art exemplary libraries that feature well designed programming interfaces from which the students can learn and which help our participants in creating the product we require them to produce In the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,JUnit 4 20 and Mockito 21 for the creation of test mocks We provide a short introduction for each library in the Trac wiki as,well,as links to detailed documentation In this way the students are able to read up on more advanced topics E Skeleton With the substantial amount,JUnit 4 20 and Mockito 21 for the creation of test mocks We provide a short introduction for each library in the Trac wiki as well as links to detailed documentation In this way the students are able to read up on more advanced topics E Skeleton With the substantial amount,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,skeleton server that was provided together with two pages of explanatory text Fig 3 Server Skeleton Architecture This skeleton formed the basis for extension and,improvement,in the three sprints of the course III RESULTS AND EVALUATION We implemented the lab course during the summer terms of 2010 and 2011 with,skeleton server that was provided together with two pages of explanatory text Fig 3 Server Skeleton Architecture This skeleton formed the basis for extension and improvement in the three sprints of the course III RESULTS AND EVALUATION We implemented the lab course during the summer terms of 2010 and 2011 with,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,the student questionnaires that were created specifically for the evaluation of the new lab course we can deduce that the lab course setup is very,well,received Slight negative feedback was found on imposing the dictum of good enough design i e to only design a system as far as the,the student questionnaires that were created specifically for the evaluation of the new lab course we can deduce that the lab course setup is very well received Slight negative feedback was found on imposing the dictum of good enough design i e to only design a system as far as the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,system as far as the currently considered user stories require it to be designed and to look no further ahead students did not experience the,value,and the potential of a clean and simple design as it seems they had a hard time at creating and capturing proper system designs in,system as far as the currently considered user stories require it to be designed and to look no further ahead students did not experience the value and the potential of a clean and simple design as it seems they had a hard time at creating and capturing proper system designs in,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,design as it seems they had a hard time at creating and capturing proper system designs in general From a birds eye view both courses,successfully,created a restricted but working and playable version of the game The created versions were robust featured satisfactory unit test coverage and were of acceptable,design as it seems they had a hard time at creating and capturing proper system designs in general From a birds eye view both courses successfully created a restricted but working and playable version of the game The created versions were robust featured satisfactory unit test coverage and were of acceptable,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,to readability and maintainability A Product In the execution of both lab courses we found that the product The Bug is a Lie is very,well,accepted The game is explained quickly and especially the hands on sessions where the students can play the real card game are highly appreciated and,to readability and maintainability A Product In the execution of both lab courses we found that the product The Bug is a Lie is very well accepted The game is explained quickly and especially the hands on sessions where the students can play the real card game are highly appreciated and,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,students manage to realize a sophisticated and appealing UI Fig 4 shows the result of the 2011 course Although the game UI itself was a,success,fundamental issues in user story definitions arose in the second sprint of the two courses Usually students tend to separate units of work along the,students manage to realize a sophisticated and appealing UI Fig 4 shows the result of the 2011 course Although the game UI itself was a success fundamental issues in user story definitions arose in the second sprint of the two courses Usually students tend to separate units of work along the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,tutors pay close attention that user story partitioning is performed in accordance with recommendations from the literature 22 i e in features with real costumer,value,Still students tend to create a game UI kernel user story with the problem that as long as the game UI kernel is under development,tutors pay close attention that user story partitioning is performed in accordance with recommendations from the literature 22 i e in features with real costumer value Still students tend to create a game UI kernel user story with the problem that as long as the game UI kernel is under development,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,or rule i e stories without a technical focus The product structure allows tutors to tune the amount of work per sprint depending on the,success,and velocity of the Scrum team with relative ease The product itself is appealing to the students Most of the students indicate that given the,or rule i e stories without a technical focus The product structure allows tutors to tune the amount of work per sprint depending on the success and velocity of the Scrum team with relative ease The product itself is appealing to the students Most of the students indicate that given the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,the Scrum team with relative ease The product itself is appealing to the students Most of the students indicate that given the choice they would,value,a fun product more than a product relevant in research or industry However some students criticized that the specific game The Bug is a Lie,the Scrum team with relative ease The product itself is appealing to the students Most of the students indicate that given the choice they would value a fun product more than a product relevant in research or industry However some students criticized that the specific game The Bug is a Lie,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,game more if they could share it with family and friends B Process Organization The chosen process fits the settings of the lab course quite,well,It creates a high commitment of the students to the product and the lab course itself The students are able to create a satisfactory and,game more if they could share it with family and friends B Process Organization The chosen process fits the settings of the lab course quite well It creates a high commitment of the students to the product and the lab course itself The students are able to create a satisfactory and,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,students to the product and the lab course itself The students are able to create a satisfactory and working product while learning the cornerstones of,effective,software development Since the participating students have varying development experience and programming skills the introduction phase is particularly useful A 4 hour lesson on Scrum,students to the product and the lab course itself The students are able to create a satisfactory and working product while learning the cornerstones of effective software development Since the participating students have varying development experience and programming skills the introduction phase is particularly useful A 4 hour lesson on Scrum,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,practical application of the process in the lab course After this introduction all students are able to put the Scrum rules into action in an,effective,way The second lesson on tools libraries and the provided skeleton allows an immediate kick start of the project However tutors must take care that,practical application of the process in the lab course After this introduction all students are able to put the Scrum rules into action in an effective way The second lesson on tools libraries and the provided skeleton allows an immediate kick start of the project However tutors must take care that,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,sessions since due to the size and complexity of the provided skeleton difficulties in understanding and extending it may arise One of the most important,advantages,of the outlined process organization is the workload limit imposed on the development of the product On the one hand this workload limit creates great,sessions since due to the size and complexity of the provided skeleton difficulties in understanding and extending it may arise One of the most important advantages of the outlined process organization is the workload limit imposed on the development of the product On the one hand this workload limit creates great,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,into the sprint it is a good means for allocating time for initialization and organization On the other hand the workload limit makes time a,valuable,resource that has to be managed carefully Students hence learn to develop software with a limited time budget in an effective way As a result,into the sprint it is a good means for allocating time for initialization and organization On the other hand the workload limit makes time a valuable resource that has to be managed carefully Students hence learn to develop software with a limited time budget in an effective way As a result,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,different persons leading to a clear separation of concerns The students have several questions about the rules design and realization of the product that are,best,answered by a product owner familiar with the game Conversely the students can approach the Scrum master with impediments or organizational problems In a students,different persons leading to a clear separation of concerns The students have several questions about the rules design and realization of the product that are best answered by a product owner familiar with the game Conversely the students can approach the Scrum master with impediments or organizational problems In a students,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,not only report on technical advances in the weekly Scrum meetings but also on delays impediments and next steps and that they critically analyze their,best,practices They have to establish openness and honesty as a common value so that problems can be openly addressed In our 2010 lab course closeness,not only report on technical advances in the weekly Scrum meetings but also on delays impediments and next steps and that they critically analyze their best practices They have to establish openness and honesty as a common value so that problems can be openly addressed In our 2010 lab course closeness,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,the estimation process is hard for the students We recommend that the tutors assist the first estimations by partitioning user stories into tasks and providing,solution,approaches but do not overwhelm the students with hints since this has a high impact on the estimations As soon as the students become more,the estimation process is hard for the students We recommend that the tutors assist the first estimations by partitioning user stories into tasks and providing solution approaches but do not overwhelm the students with hints since this has a high impact on the estimations As soon as the students become more,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,later than in the second sprint the tutors have to make sure to abandon their assistance to not further influence the process Depending on the,progress,of work it might also be better to hold the status report meetings more often than once a week to give students more possibilities to,later than in the second sprint the tutors have to make sure to abandon their assistance to not further influence the process Depending on the progress of work it might also be better to hold the status report meetings more often than once a week to give students more possibilities to,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,also suffer from the problems of distributed development and reduced availability Therefore they must be encouraged to organize regular pair programming or working meetings to,benefit,from quick communication channels and high collaboration In the same way the students have to be urged to make use of UML sketches During the,also suffer from the problems of distributed development and reduced availability Therefore they must be encouraged to organize regular pair programming or working meetings to benefit from quick communication channels and high collaboration In the same way the students have to be urged to make use of UML sketches During the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,During the planning meeting and the development work UML sketches help to visualize and fix ideas on the architecture of the product We demonstrate the,advantage,of UML for sharing knowledge by providing UML diagrams for the skeleton for recording ideas by documenting the sprint planning meetings and for clarifying designs,During the planning meeting and the development work UML sketches help to visualize and fix ideas on the architecture of the product We demonstrate the advantage of UML for sharing knowledge by providing UML diagrams for the skeleton for recording ideas by documenting the sprint planning meetings and for clarifying designs,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,meetings and for clarifying designs by supporting design discussions with UML Unfortunately the students often have difficulties in formulating their visions in a fast and,simple,way since they are either not used to creating a proper system design at all or are only familiar with extensive modeling instead of good,meetings and for clarifying designs by supporting design discussions with UML Unfortunately the students often have difficulties in formulating their visions in a fast and simple way since they are either not used to creating a proper system design at all or are only familiar with extensive modeling instead of good,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,used to creating a proper system design at all or are only familiar with extensive modeling instead of good enough design Nevertheless the students generally,benefit,from the advantages of Scrum short sprints and an executable product at the end of each sprint keep development on time and effective while the,used to creating a proper system design at all or are only familiar with extensive modeling instead of good enough design Nevertheless the students generally benefit from the advantages of Scrum short sprints and an executable product at the end of each sprint keep development on time and effective while the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,or verifiable Code coverage architecture documentation and conformity with user stories are good means to evaluate the quality of the product without assuming a certain,progress,in the completion of the product and can be easily supervised To rate the realization of the process we monitor the participation of each student,or verifiable Code coverage architecture documentation and conformity with user stories are good means to evaluate the quality of the product without assuming a certain progress in the completion of the product and can be easily supervised To rate the realization of the process we monitor the participation of each student,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,kick starting effect and prevention of lengthy setup phases are both achieved However as the students become more and more familiar with the tooling infrastructure,progress,can still be impeded due to design and code quality issues of the created code Luckily acquired familiarity with the infrastructure allows students to cope,kick starting effect and prevention of lengthy setup phases are both achieved However as the students become more and more familiar with the tooling infrastructure progress can still be impeded due to design and code quality issues of the created code Luckily acquired familiarity with the infrastructure allows students to cope,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,the created code Luckily acquired familiarity with the infrastructure allows students to cope with these issues Also the visibility and browsability of the code base,progress,and remaining workload that Eclipse Trac and SVN offer enables students and tutors to discover impediments and problems early enough to remedy them within the,the created code Luckily acquired familiarity with the infrastructure allows students to cope with these issues Also the visibility and browsability of the code base progress and remaining workload that Eclipse Trac and SVN offer enables students and tutors to discover impediments and problems early enough to remedy them within the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,feedback provided by continuous integration specifically concerning unit test coverage also allow the tutors to point the finger on issues that are relevant for project,success,On the negative side however we discovered that students have a hard time getting used to specifying and updating remaining efforts on Trac tickets which,feedback provided by continuous integration specifically concerning unit test coverage also allow the tutors to point the finger on issues that are relevant for project success On the negative side however we discovered that students have a hard time getting used to specifying and updating remaining efforts on Trac tickets which,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,Both seem enough to eventually cope with the unknown APIs although pair programming sessions may help to transfer knowledge far quicker Furthermore we experienced the,value,of clear and accessible documentation of libraries once a student introduced a library with documentation that is not freely available Students struggled heavily with the,Both seem enough to eventually cope with the unknown APIs although pair programming sessions may help to transfer knowledge far quicker Furthermore we experienced the value of clear and accessible documentation of libraries once a student introduced a library with documentation that is not freely available Students struggled heavily with the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,shows that course supervisors need to be aware of the consequences and impact of students actions and general approach E Skeleton The provided skeleton is,well,adopted by students In the first sprint of both course installments however students had unexpected difficulties in understanding the provided skeleton and in finding the,shows that course supervisors need to be aware of the consequences and impact of students actions and general approach E Skeleton The provided skeleton is well adopted by students In the first sprint of both course installments however students had unexpected difficulties in understanding the provided skeleton and in finding the,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,and testing standards of the skeleton by themselves Several gentle reminders in sprint retrospectives and dedicated design patterns and design principle sessions are necessary to,achieve,an acceptable software quality On the other hand by letting the quality degrade students get first hand experiences on the consequences of code quality degradation,and testing standards of the skeleton by themselves Several gentle reminders in sprint retrospectives and dedicated design patterns and design principle sessions are necessary to achieve an acceptable software quality On the other hand by letting the quality degrade students get first hand experiences on the consequences of code quality degradation,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,On the other hand by letting the quality degrade students get first hand experiences on the consequences of code quality degradation for their project s,progress,Nevertheless the kick starting effect of the provided skeleton is clearly achieved as the general project progress is characterized by a very productive first sprint,On the other hand by letting the quality degrade students get first hand experiences on the consequences of code quality degradation for their project s progress Nevertheless the kick starting effect of the provided skeleton is clearly achieved as the general project progress is characterized by a very productive first sprint,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,tickets of the 2010 course installment It can be expected that if the students started from nothing the first sprint would be characterized by slow,progress,Additionally as expected the skeleton provides useful examples of library usage and reduces the amount of conflicts in collaboration Furthermore in the case of code,tickets of the 2010 course installment It can be expected that if the students started from nothing the first sprint would be characterized by slow progress Additionally as expected the skeleton provides useful examples of library usage and reduces the amount of conflicts in collaboration Furthermore in the case of code,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,conflicts in collaboration Furthermore in the case of code quality degradation the skeleton provides presentable code examples that are up to standard IV AREAS OF,improvements,AND FURTHER IDEAS The lab course setup with its product process infrastructure libraries and skeleton has proven to be adequate for successfully teaching agile software,conflicts in collaboration Furthermore in the case of code quality degradation the skeleton provides presentable code examples that are up to standard IV AREAS OF improvements AND FURTHER IDEAS The lab course setup with its product process infrastructure libraries and skeleton has proven to be adequate for successfully teaching agile software,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,teaching agile software development practices Nevertheless the two instantiations of the course have disclosed shortcomings that should be addressed in future installments These areas of,improvements,can be grouped around knowledge transfer improvements and process improvements Concerning knowledge transfer we experienced that the introduction to the skeleton code needs to be,teaching agile software development practices Nevertheless the two instantiations of the course have disclosed shortcomings that should be addressed in future installments These areas of improvements can be grouped around knowledge transfer improvements and process improvements Concerning knowledge transfer we experienced that the introduction to the skeleton code needs to be,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,experienced that the introduction to the skeleton code needs to be extended For this plenary sessions with live code inspection discussion and coding may be,helpful,In addition precise and simple to read written instructions on how to extend the skeleton code should be provided Furthermore we believe that on top,experienced that the introduction to the skeleton code needs to be extended For this plenary sessions with live code inspection discussion and coding may be helpful In addition precise and simple to read written instructions on how to extend the skeleton code should be provided Furthermore we believe that on top,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,programming and design skills of the students Following our experience with test driven development coding dojos it is important to create an open motivating and,positive,learning environment for maximum knowledge transfer On the organizational side we observed in both installments of the lab that the students were struggling for proper,programming and design skills of the students Following our experience with test driven development coding dojos it is important to create an open motivating and positive learning environment for maximum knowledge transfer On the organizational side we observed in both installments of the lab that the students were struggling for proper,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,the lab that the students were struggling for proper communication channels Students tried to establish the use of forums or instant chat clients with varying,success,We cannot provide a conclusive and well founded recommendation on the best electronic communication means but a group solution like Google groups or Yahoo groups,the lab that the students were struggling for proper communication channels Students tried to establish the use of forums or instant chat clients with varying success We cannot provide a conclusive and well founded recommendation on the best electronic communication means but a group solution like Google groups or Yahoo groups,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,system like Git 24 as a replacement for SVN Git would allow students to commit small increments to their local repositories and therefore make merging,easier,when pushing changes to the shared repository A big concern in establishing coding design dojos and regular shared working sessions is the lack of familiarity,system like Git 24 as a replacement for SVN Git would allow students to commit small increments to their local repositories and therefore make merging easier when pushing changes to the shared repository A big concern in establishing coding design dojos and regular shared working sessions is the lack of familiarity,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,and trust that newly formed teams experience One can expect that students may be reluctant to committing to these activities without knowing their team mates,well,To help the teams start establishing healthy practices it is therefore necessary to introduce team building activities multiplayer game needs such as e g game,and trust that newly formed teams experience One can expect that students may be reluctant to committing to these activities without knowing their team mates well To help the teams start establishing healthy practices it is therefore necessary to introduce team building activities multiplayer game needs such as e g game,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,inevitable code and fix phase at the end of a project In this paper we have presented the setup implementation and results of two highly,successful,software development labs conducted at our university in 2010 and 2011 The labs are based on agile development methodologies specifically Scrum permanent collaboration and feedback,inevitable code and fix phase at the end of a project In this paper we have presented the setup implementation and results of two highly successful software development labs conducted at our university in 2010 and 2011 The labs are based on agile development methodologies specifically Scrum permanent collaboration and feedback,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,The labs are based on agile development methodologies specifically Scrum permanent collaboration and feedback and keeping an adapted work life balance We have found the,easy,to understand accessible Scrum methodology to be ideal for introducing software processes not to mention its widespread industry acceptance Other key lessons learned from our,The labs are based on agile development methodologies specifically Scrum permanent collaboration and feedback and keeping an adapted work life balance We have found the easy to understand accessible Scrum methodology to be ideal for introducing software processes not to mention its widespread industry acceptance Other key lessons learned from our,2012
EDUCON_Teaching_agile_software_development_through_lab_courses_2012_IEEE_cleaned.txt,include using a fun challenge for student motivation and providing a skeleton and development environment for a quick start We hope that our findings may,benefit,and inspire other instructors We are keen on your input on the presented methods and will gladly share more information on our setup,include using a fun challenge for student motivation and providing a skeleton and development environment for a quick start We hope that our findings may benefit and inspire other instructors We are keen on your input on the presented methods and will gladly share more information on our setup,2012
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,Work in,progress,Fostering Soft Skills of Engineering Students Within Scrum Projects Abstract The integration of project based learning and Agile approaches within the engineering degree program is,Work in progress Fostering Soft Skills of Engineering Students Within Scrum Projects Abstract The integration of project based learning and Agile approaches within the engineering degree program is,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,Engineering Students Within Scrum Projects Abstract The integration of project based learning and Agile approaches within the engineering degree program is considered to be an,effective,way for the development of teamwork and project management skills of engineering students The objective of this paper is to present the ongoing practical experience,Engineering Students Within Scrum Projects Abstract The integration of project based learning and Agile approaches within the engineering degree program is considered to be an effective way for the development of teamwork and project management skills of engineering students The objective of this paper is to present the ongoing practical experience,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,The project investigates the strategies and methods of learning and teaching aimed at contextualizing the educational process and implementing situated learning which will ensure the,effective,formation of a set of professional and general competencies of engineering students As part of the project in the 20172018 academic year an integrated course,The project investigates the strategies and methods of learning and teaching aimed at contextualizing the educational process and implementing situated learning which will ensure the effective formation of a set of professional and general competencies of engineering students As part of the project in the 20172018 academic year an integrated course,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,these competencies into four categories subject specific competencies corresponding to general professional and special professional components and generic competencies including personal and interpersonal components as,well,as those required later in the education process and professional field B Types of Problems and Projects The projects task in the first semester for,these competencies into four categories subject specific competencies corresponding to general professional and special professional components and generic competencies including personal and interpersonal components as well as those required later in the education process and professional field B Types of Problems and Projects The projects task in the first semester for,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,system with a focus on its practical application search for information aimed at detailing the description and analysis of possible analogues of such systems as,well,as to create a complex of UML diagrams in the Visual Paradigm environment The project task is considered as ill defined Students had to model,system with a focus on its practical application search for information aimed at detailing the description and analysis of possible analogues of such systems as well as to create a complex of UML diagrams in the Visual Paradigm environment The project task is considered as ill defined Students had to model,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,cases draw main UML diagrams for own system taking into account constraints of the real world Additionally attention was paid to the use of the,simplest,tools of organizing individual and teamwork namely Trello based Kanban boards An example of a Trello board created by one of the student teams is,cases draw main UML diagrams for own system taking into account constraints of the real world Additionally attention was paid to the use of the simplest tools of organizing individual and teamwork namely Trello based Kanban boards An example of a Trello board created by one of the student teams is,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,required in the learning and the professional field To be able to identify the purpose of the project and work consistently and methodologically correctly to,achieve,these goals To be able to present the results in written oral and graphic form To be able to communicate with other team members using,required in the learning and the professional field To be able to identify the purpose of the project and work consistently and methodologically correctly to achieve these goals To be able to present the results in written oral and graphic form To be able to communicate with other team members using,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,features of Scrum methodology Visual Paradigm was chosen as the software for the project implementation as it has the ability to create UML diagrams as,well,as to develop the whole set of documents and automated support for Scrum In the third semester of the course Project Work Technology the next,features of Scrum methodology Visual Paradigm was chosen as the software for the project implementation as it has the ability to create UML diagrams as well as to develop the whole set of documents and automated support for Scrum In the third semester of the course Project Work Technology the next,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,of creating web applications This will ensure the interdisciplinary nature of the project C Assessments During the first two semesters the assessment of students academic,achievements,was carried out in the ratio 20 quizzes conducted on the theoretical aspects 40 individual laboratory reports 40 final project The main requirement for learning,of creating web applications This will ensure the interdisciplinary nature of the project C Assessments During the first two semesters the assessment of students academic achievements was carried out in the ratio 20 quizzes conducted on the theoretical aspects 40 individual laboratory reports 40 final project The main requirement for learning,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,laboratory reports 40 final project The main requirement for learning outcomes is their measurability which implies the use of a certain scale for measuring academic,achievement,In our case in developing the learning outcomes for the theoretical module we used Anderson s taxonomy as the one having elaborated vocabulary dictionaries We,laboratory reports 40 final project The main requirement for learning outcomes is their measurability which implies the use of a certain scale for measuring academic achievement In our case in developing the learning outcomes for the theoretical module we used Anderson s taxonomy as the one having elaborated vocabulary dictionaries We,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,71 0 99 3 86 0 77 4 79 0 43 1 50 0 76 4 29 0 73 1 Teamwork was critical for the,successful,project completion 2 My teammates helped me understand the ideas and materials of the project 3 I learned how to plan the work of the,71 0 99 3 86 0 77 4 79 0 43 1 50 0 76 4 29 0 73 1 Teamwork was critical for the successful project completion 2 My teammates helped me understand the ideas and materials of the project 3 I learned how to plan the work of the,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,communicate with other team members 12 I felt motivated to work as a team The results shown in Table II demonstrate that students have a,positive,perception of teamwork They understand the importance of teamwork for successful project completion In addition the influence of the project on the skills related to,communicate with other team members 12 I felt motivated to work as a team The results shown in Table II demonstrate that students have a positive perception of teamwork They understand the importance of teamwork for successful project completion In addition the influence of the project on the skills related to,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,65 3 57 0 94 3 29 0 91 The development of critical thinking skills was highly rated In addition the students have demonstrated a,positive,perception of the role of project work in the application of knowledge of disciplines methods and tools in practice The preliminary results of the course,65 3 57 0 94 3 29 0 91 The development of critical thinking skills was highly rated In addition the students have demonstrated a positive perception of the role of project work in the application of knowledge of disciplines methods and tools in practice The preliminary results of the course,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,real professional context The main problem however is a lack of self directed learning skills in students which is especially noticeable for underclassmen The students,positively,perceive the use of ICT during classes while actively participating in the proposed interactive tasks Therefore the general evaluation of the course Project Work Technology,real professional context The main problem however is a lack of self directed learning skills in students which is especially noticeable for underclassmen The students positively perceive the use of ICT during classes while actively participating in the proposed interactive tasks Therefore the general evaluation of the course Project Work Technology,2020
EDUCON_Work_in_Progress_Fostering_Soft-Skills_of_Engineering_Students_Within_Scrum_Projects_2020_IEEE_cleaned.txt,despite some difficulties which were observed Such as the necessity of coordinating learning outcomes and course content requires a responsible attitude of all stakeholders as,well,as regular consultations between staff and faculty members Some of them expressed worries about the significant additional workload which is quite true at least for,despite some difficulties which were observed Such as the necessity of coordinating learning outcomes and course content requires a responsible attitude of all stakeholders as well as regular consultations between staff and faculty members Some of them expressed worries about the significant additional workload which is quite true at least for,2020
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,,advantages,of Agile Methodologies for Software and Product Development in a Capstone Design Project Abstract Professional skills are often emphasized in a capstone engineering design course,advantages of Agile Methodologies for Software and Product Development in a Capstone Design Project Abstract Professional skills are often emphasized in a capstone engineering design course,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,a product of the project management approach followed by design teams The principles behind agile development and the features of the Scrum methodology match up,well,with the expected outcomes of a major engineering design experience and preparation needed by students for engineering practice This paper presents a case study on,a product of the project management approach followed by design teams The principles behind agile development and the features of the Scrum methodology match up well with the expected outcomes of a major engineering design experience and preparation needed by students for engineering practice This paper presents a case study on,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,experience and preparation needed by students for engineering practice This paper presents a case study on design team use of an agile process for the,successful,development and release on the Google Play store of an Android app for a client during the span of a two semester senior design course,experience and preparation needed by students for engineering practice This paper presents a case study on design team use of an agile process for the successful development and release on the Google Play store of an Android app for a client during the span of a two semester senior design course,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,of a two semester senior design course in electrical and computer engineering The agile project management used in the case study was found to be,beneficial,to all involved students mentors and clients It emphasizes behaviors that lead to greater satisfaction and higher quality results with the senior design experience Student,of a two semester senior design course in electrical and computer engineering The agile project management used in the case study was found to be beneficial to all involved students mentors and clients It emphasizes behaviors that lead to greater satisfaction and higher quality results with the senior design experience Student,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,a product of the project management approach followed by design teams The principles behind agile development and the features of the Scrum methodology match up,well,with the expected outcomes of a major engineering design experience and preparation needed by students for engineering practice Agile software development methodologies are commonly found,a product of the project management approach followed by design teams The principles behind agile development and the features of the Scrum methodology match up well with the expected outcomes of a major engineering design experience and preparation needed by students for engineering practice Agile software development methodologies are commonly found,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,design courses ranging from software design to mechatronics design This paper presents a case study on design team use of an agile process for the,successful,development and release on the Google Play store of an Android app for a client during the span of a two semester senior design course,design courses ranging from software design to mechatronics design This paper presents a case study on design team use of an agile process for the successful development and release on the Google Play store of an Android app for a client during the span of a two semester senior design course,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,app design team used two week sprints during the second semester of the course Each sprint iteration included planning issue triage and assignment demonstration of,progress,and release all facilitating frequent communication among team members The team held meetings with a faculty mentor and the client between iterations Their application of,app design team used two week sprints during the second semester of the course Each sprint iteration included planning issue triage and assignment demonstration of progress and release all facilitating frequent communication among team members The team held meetings with a faculty mentor and the client between iterations Their application of,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,tool to use in the field to efficiently record butterfly sighting data The purpose of the app is to give the user a quick and,efficient,method to collect data across a variety of survey protocols traditionally used by researchers and citizen scientists in the field The app stores a superset,tool to use in the field to efficiently record butterfly sighting data The purpose of the app is to give the user a quick and efficient method to collect data across a variety of survey protocols traditionally used by researchers and citizen scientists in the field The app stores a superset,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,created by the user Users can also take photos of specimens to include with records The Reiman Gardens client expects that the content should greatly,enhance,the understanding of butterfly populations The project began during spring semester 2013 With guidance and assistance from the client the team sent a questionnaire to,created by the user Users can also take photos of specimens to include with records The Reiman Gardens client expects that the content should greatly enhance the understanding of butterfly populations The project began during spring semester 2013 With guidance and assistance from the client the team sent a questionnaire to,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,development and used two week sprints during the second semester of the course fall 2013 Each sprint iteration included issue triage and assignment demonstration of,progress,release and planning all facilitating frequent communication among team members The team held meetings with a faculty mentor and the client between iterations The sprint,development and used two week sprints during the second semester of the course fall 2013 Each sprint iteration included issue triage and assignment demonstration of progress release and planning all facilitating frequent communication among team members The team held meetings with a faculty mentor and the client between iterations The sprint,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,Sprint 02 focused on the goal of improving the user experience with expanded preferences in the settings an ongoing notification while a survey is in,progress,and a counter to add a sighting with multiple butterflies The Sprint 02 release and Sprint 03 plans are shown in Fig 2 The team,Sprint 02 focused on the goal of improving the user experience with expanded preferences in the settings an ongoing notification while a survey is in progress and a counter to add a sighting with multiple butterflies The Sprint 02 release and Sprint 03 plans are shown in Fig 2 The team,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,items to be added to or fixed in the application The team identified the most used and essential features and optimized those processes for maximum,efficiency,The early part of the semester was focused on adding or enhancing major features that were completed by mid September By November the app was,items to be added to or fixed in the application The team identified the most used and essential features and optimized those processes for maximum efficiency The early part of the semester was focused on adding or enhancing major features that were completed by mid September By November the app was,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,an Atom news feed on its website through which it posted updates after each sprint This enabled those interested to receive push updates of UBR,progress,in their news reader With UBR installed through the Google Play store users were presented with the option to submit a report after an error,an Atom news feed on its website through which it posted updates after each sprint This enabled those interested to receive push updates of UBR progress in their news reader With UBR installed through the Google Play store users were presented with the option to submit a report after an error,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,with the option to submit a report after an error Through the developer console the team could view the stack traces of the errors as,well,as device information The app itself includes a page through which users can submit feedback in the categories of bug feature request and comment These,with the option to submit a report after an error Through the developer console the team could view the stack traces of the errors as well as device information The app itself includes a page through which users can submit feedback in the categories of bug feature request and comment These,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,compared Also because it is able to export to external databases users will be able to export their data to a common database for even,easier,collaboration Conservation efforts will be helped immensely because of this The application also makes going into the field and taking a survey easier so people,compared Also because it is able to export to external databases users will be able to export their data to a common database for even easier collaboration Conservation efforts will be helped immensely because of this The application also makes going into the field and taking a survey easier so people,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,the next sprint and answered any entomology questions to help with functions they were working on 2 How did the process followed by the team,enhance,communication with you We always knew what the team was working on and what challenges they were facing We also had lots of email communication,the next sprint and answered any entomology questions to help with functions they were working on 2 How did the process followed by the team enhance communication with you We always knew what the team was working on and what challenges they were facing We also had lots of email communication,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,lots of email communication for problems or questions that came up It was nice to know that the team was working hard and always making,progress,This was the fourth group that I have worked with and their process made it much easier for us to help steer the content development,lots of email communication for problems or questions that came up It was nice to know that the team was working hard and always making progress This was the fourth group that I have worked with and their process made it much easier for us to help steer the content development,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,the year deadline 3 How was product quality affected by the approach taken by the team the teams approach greatly affected the quality in a,positive,way Functionality issues were solved quickly and effectively with open and constant communication 4 Do you have other observations about the team or product I,the year deadline 3 How was product quality affected by the approach taken by the team the teams approach greatly affected the quality in a positive way Functionality issues were solved quickly and effectively with open and constant communication 4 Do you have other observations about the team or product I,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,applying a Scrum agile methodology are described in the literature and course materials 3 4 5 They fall into four areas associated with the established,value,proposition of Scrum emphasizing cross functional interactions a working product customer collaboration and response to change The effects especially relevant to senior design outcomes are,applying a Scrum agile methodology are described in the literature and course materials 3 4 5 They fall into four areas associated with the established value proposition of Scrum emphasizing cross functional interactions a working product customer collaboration and response to change The effects especially relevant to senior design outcomes are,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,ends the highest priority work has been completed A useful product is ready to be delivered with each sprint and provides a visible measure of,progress,for the team and customer Customer focus Each sprint involves face to face communication feedback and collaboration with the customer The continuous involvement puts a,ends the highest priority work has been completed A useful product is ready to be delivered with each sprint and provides a visible measure of progress for the team and customer Customer focus Each sprint involves face to face communication feedback and collaboration with the customer The continuous involvement puts a,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,feedback and collaboration with the customer The continuous involvement puts a focus on the customer and customer satisfaction Iterative development The sprint iterations facilitate a,simple,flexible and predictable design process There is minimal long range planning with work estimates and adapting done with each sprint There is both a constant,feedback and collaboration with the customer The continuous involvement puts a focus on the customer and customer satisfaction Iterative development The sprint iterations facilitate a simple flexible and predictable design process There is minimal long range planning with work estimates and adapting done with each sprint There is both a constant,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,adapting done with each sprint There is both a constant pace of development and constant attention to good design The UBR team noted that these,benefits,helped address two challenges from the student perspective The standard waterfall approach sometimes amounts to guesswork The iterative development made planning more tractable Senior design,adapting done with each sprint There is both a constant pace of development and constant attention to good design The UBR team noted that these benefits helped address two challenges from the student perspective The standard waterfall approach sometimes amounts to guesswork The iterative development made planning more tractable Senior design,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,set different than initially envisioned In short a Scrum methodology supports the development of high performing teams fully functional products meaningful customer interactions and continuous,improvement,in the design process To the extent that these can be modeled in senior design these contribute to a more realistic design experience in the,set different than initially envisioned In short a Scrum methodology supports the development of high performing teams fully functional products meaningful customer interactions and continuous improvement in the design process To the extent that these can be modeled in senior design these contribute to a more realistic design experience in the,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,process To the extent that these can be modeled in senior design these contribute to a more realistic design experience in the capstone environment and,better,preparation for engineering practice VI SENIOR DESIGN Senior design in electrical and computer engineering at this university is a two semester required course intended to,process To the extent that these can be modeled in senior design these contribute to a more realistic design experience in the capstone environment and better preparation for engineering practice VI SENIOR DESIGN Senior design in electrical and computer engineering at this university is a two semester required course intended to,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,required course intended to prepare students for engineering practice and the workplace During the first semester students work in project teams to propose a design,solution,to an engineering problem and use their technical writing skills to produce a project plan and design report During the second semester students create a,required course intended to prepare students for engineering practice and the workplace During the first semester students work in project teams to propose a design solution to an engineering problem and use their technical writing skills to produce a project plan and design report During the second semester students create a,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,cycle are listed below 1 a an ability to apply knowledge of mathematics science and engineering b an ability to design and conduct experiments as,well,as to analyze and interpret data c an ability to design a system component or process to meet desired needs within realistic constraints such as,cycle are listed below 1 a an ability to apply knowledge of mathematics science and engineering b an ability to design and conduct experiments as well as to analyze and interpret data c an ability to design a system component or process to meet desired needs within realistic constraints such as,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,f an understanding of professional and ethical responsibility g an ability to communicate effectively h the broad education necessary to understand the impact of engineering,solutions,in a global economic environmental and societal context i a recognition of the need for and an ability to engage in lifelong learning j a,f an understanding of professional and ethical responsibility g an ability to communicate effectively h the broad education necessary to understand the impact of engineering solutions in a global economic environmental and societal context i a recognition of the need for and an ability to engage in lifelong learning j a,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,needed to a complex open ended problem with realistic constraints Thus design skills associated with outcomes b c e and k are commonly addressed as,well,Improvements and innovation in senior design directly impact student learning of design and professional skills expected in the engineering workplace VII ASSESSMENT In this section,needed to a complex open ended problem with realistic constraints Thus design skills associated with outcomes b c e and k are commonly addressed as well Improvements and innovation in senior design directly impact student learning of design and professional skills expected in the engineering workplace VII ASSESSMENT In this section,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,of that competency For example the Initiative competency has the following definition and key actions Initiative Taking prompt action to accomplish objectives taking action to,achieve,goals beyond what is required being proactive Key Actions Responds quickly Takes immediate action when confronted with a problem or when made aware of a,of that competency For example the Initiative competency has the following definition and key actions Initiative Taking prompt action to accomplish objectives taking action to achieve goals beyond what is required being proactive Key Actions Responds quickly Takes immediate action when confronted with a problem or when made aware of a,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,Responds quickly Takes immediate action when confronted with a problem or when made aware of a situation Takes independent action Implements new ideas or potential,solutions,without prompting does not wait for others to take action or to request action Goes above and beyond Takes action that goes beyond job requirements,Responds quickly Takes immediate action when confronted with a problem or when made aware of a situation Takes independent action Implements new ideas or potential solutions without prompting does not wait for others to take action or to request action Goes above and beyond Takes action that goes beyond job requirements,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,not wait for others to take action or to request action Goes above and beyond Takes action that goes beyond job requirements in order to,achieve,objectives In addition each competency is further defined with representative career activities Initiative has these representative career activities Checking validity of processes or tools without,not wait for others to take action or to request action Goes above and beyond Takes action that goes beyond job requirements in order to achieve objectives In addition each competency is further defined with representative career activities Initiative has these representative career activities Checking validity of processes or tools without,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,Immediately finding information for use on a project or product Responding effectively with minimal direction by identifying appropriate information tools or people Creating new and,effective,solutions to problems Responding quickly to feedback Initiating discussions with team members when faced with a problem Developing solutions to engineering problems in a timely,Immediately finding information for use on a project or product Responding effectively with minimal direction by identifying appropriate information tools or people Creating new and effective solutions to problems Responding quickly to feedback Initiating discussions with team members when faced with a problem Developing solutions to engineering problems in a timely,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,satisfaction The Continuous Learning competency has the following definition and representative career activities Continuous Learning Actively identifying new areas for learning regularly creating and taking,advantage,of learning opportunities using newly gained knowledge and skill on the job and learning through application Subset of Representative Career Activities Designing experiments or products,satisfaction The Continuous Learning competency has the following definition and representative career activities Continuous Learning Actively identifying new areas for learning regularly creating and taking advantage of learning opportunities using newly gained knowledge and skill on the job and learning through application Subset of Representative Career Activities Designing experiments or products,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,supervisors assessment of the associated key actions A program average for each competency is computed by averaging all the supervisor competency values A score for,achievement,of a student outcome is calculated using the mapping An achievement percentage is calculated relative to a perfect score To illustrate the level 1 approach,supervisors assessment of the associated key actions A program average for each competency is computed by averaging all the supervisor competency values A score for achievement of a student outcome is calculated using the mapping An achievement percentage is calculated relative to a perfect score To illustrate the level 1 approach,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,1 Teamwork 2 Product Quality 3 Customer Focus 4 Iterative Development VIII CONCLUSIONS This work adds to a small but growing evidence base on the,value,of agile development methods in engineering education and in particular capstone design Often learning outcomes are focused on content i e what students learn from,1 Teamwork 2 Product Quality 3 Customer Focus 4 Iterative Development VIII CONCLUSIONS This work adds to a small but growing evidence base on the value of agile development methods in engineering education and in particular capstone design Often learning outcomes are focused on content i e what students learn from,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,subject matter covered However some knowledge skills and abilities are behavioral in nature and students learn through practice In such instances the process used can,enhance,or even define the learning experience This paper has presented a case for adopting an agile design process and illustrated its potential impact on professional,subject matter covered However some knowledge skills and abilities are behavioral in nature and students learn through practice In such instances the process used can enhance or even define the learning experience This paper has presented a case for adopting an agile design process and illustrated its potential impact on professional,2014
FIE_Advantages_of_agile_methodologies_for_software_and_product_development_in_a_capstone_design_project_2014_IEEE_cleaned.txt,process and illustrated its potential impact on professional skills development and preparation for engineering practice Overall the UBR teams use of Scrum resulted in a,better,experience for all parties involved through the rich communication it facilitated Iterative development enabled smoother adaptation and higher product quality as the student design team,process and illustrated its potential impact on professional skills development and preparation for engineering practice Overall the UBR teams use of Scrum resulted in a better experience for all parties involved through the rich communication it facilitated Iterative development enabled smoother adaptation and higher product quality as the student design team,2014
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,development by pairing lectures with hands on projects has become the norm This approach poses the problem of grading and evaluating practical project work as,well,as process conformance during development Yet few best practices exist for measuring the success of students in implementing agile practices Most university courses rely on,development by pairing lectures with hands on projects has become the norm This approach poses the problem of grading and evaluating practical project work as well as process conformance during development Yet few best practices exist for measuring the success of students in implementing agile practices Most university courses rely on,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,oral exams Index TermsMetrics Computer engineering Assessment tools Capstone projects Higher education I INTRODUCTION In order to provide feedback to students and educators on how,well,Scrum and agile best practices are followed in a team the day to day development process needs to be assessed We propose objective automated conformance,oral exams Index TermsMetrics Computer engineering Assessment tools Capstone projects Higher education I INTRODUCTION In order to provide feedback to students and educators on how well Scrum and agile best practices are followed in a team the day to day development process needs to be assessed We propose objective automated conformance,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,practice that should be executed and measured This involves both those who have knowledge and experience in agile development i e the teaching staff as,well,a the team who might have previous experience and personal preferences Agile methodologies such as XP or Scrum advise a multitude of practices e g,practice that should be executed and measured This involves both those who have knowledge and experience in agile development i e the teaching staff as well a the team who might have previous experience and personal preferences Agile methodologies such as XP or Scrum advise a multitude of practices e g,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,rating function It maps the violation details returned by the query into the more abstract form of a score bounded by a high and low,value,We employed percentages from 0 to 100 where 100 indicates that no violations were detected and 0 that the described practice was not followed at,rating function It maps the violation details returned by the query into the more abstract form of a score bounded by a high and low value We employed percentages from 0 to 100 where 100 indicates that no violations were detected and 0 that the described practice was not followed at,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,and 0 that the described practice was not followed at all Numerical values allow the development of a metric over time to be visualized as,well,the results of individual metrics to be summed into an overall team score in an iteration e g a sprint Two main types of rating,and 0 that the described practice was not followed at all Numerical values allow the development of a metric over time to be visualized as well the results of individual metrics to be summed into an overall team score in an iteration e g a sprint Two main types of rating,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,of violations the metric measures e g commits without tests Overview of the expected process i e the practice which should be followed and its,advantages,with references to literature A description of what constitutes a violation of this process should be included A list of data sources the metric requires,of violations the metric measures e g commits without tests Overview of the expected process i e the practice which should be followed and its advantages with references to literature A description of what constitutes a violation of this process should be included A list of data sources the metric requires,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,can be used to extract process violations see Listing 1 The rating function then outputs a list of process violations by teams and iteration as,well,as a score indicating the seriousness of the extracted violations MATCH m Milestone i Issue l Label WHERE m title Sprint 12 and m due_on,can be used to extract process violations see Listing 1 The rating function then outputs a list of process violations by teams and iteration as well as a score indicating the seriousness of the extracted violations MATCH m Milestone i Issue l Label WHERE m title Sprint 12 and m due_on,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,Percent Sprint Amount Sprint 12 2 Issues 129 135 Total Percent 10 0 2 Listing 1 Example of a Neo4J graph database query 4 as,well,as an example result of user stories that were part of sprints before Sprint 12 but are not marked as done C Context Analysis In,Percent Sprint Amount Sprint 12 2 Issues 129 135 Total Percent 10 0 2 Listing 1 Example of a Neo4J graph database query 4 as well as an example result of user stories that were part of sprints before Sprint 12 but are not marked as done C Context Analysis In,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,Sprint 12 but are not marked as done C Context Analysis In order to gather information about the quality of violations e g identifying false,positives,additional information on detected violations is needed For example the change history of a user story can be viewed or directly discussed with the involved,Sprint 12 but are not marked as done C Context Analysis In order to gather information about the quality of violations e g identifying false positives additional information on detected violations is needed For example the change history of a user story can be viewed or directly discussed with the involved,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,on detected violations is needed For example the change history of a user story can be viewed or directly discussed with the involved developers D,improvement,A major part of the lifecycle of conformance metrics is their continuous improvement this means ensuring that the metrics fit the project and team context,on detected violations is needed For example the change history of a user story can be viewed or directly discussed with the involved developers D improvement A major part of the lifecycle of conformance metrics is their continuous improvement this means ensuring that the metrics fit the project and team context,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,lifecycle of conformance metrics is their continuous improvement this means ensuring that the metrics fit the project and team context Especially the amount of false,positives,i e process violations that were detected but do not actually pose a problem for a development team need to be minimized The amount of,lifecycle of conformance metrics is their continuous improvement this means ensuring that the metrics fit the project and team context Especially the amount of false positives i e process violations that were detected but do not actually pose a problem for a development team need to be minimized The amount of,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,were detected but do not actually pose a problem for a development team need to be minimized The amount of real violations i e true,positives,can be reduced by modifying the query or process description thereby adjusting the metric to better fit the executed process or by making sure the,were detected but do not actually pose a problem for a development team need to be minimized The amount of real violations i e true positives can be reduced by modifying the query or process description thereby adjusting the metric to better fit the executed process or by making sure the,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,by making sure the defined process is followed more closely e g by additional training or tutoring 5 The knowledge that was gathered in the,improvement,step can then be made explicit again in the first step of the lifecycle by editing the conformance template III CONFORMANCE METRICS DETAILS While the,by making sure the defined process is followed more closely e g by additional training or tutoring 5 The knowledge that was gathered in the improvement step can then be made explicit again in the first step of the lifecycle by editing the conformance template III CONFORMANCE METRICS DETAILS While the,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,programming practices Closely related is the bus number 7 which is the number of developers that a project would need to lose to halt its,progress,It measures the concentration of knowledge about software components in individual team members Following the practice of Collective Code Ownership can help every developer work,programming practices Closely related is the bus number 7 which is the number of developers that a project would need to lose to halt its progress It measures the concentration of knowledge about software components in individual team members Following the practice of Collective Code Ownership can help every developer work,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,TDD an automated test is written before the code that makes it pass This is followed by a refactoring step Following TDD can have a,positive,effect on system design and assures that all code is always tested 8 Kniberg states You can take my house and my TV and my,TDD an automated test is written before the code that makes it pass This is followed by a refactoring step Following TDD can have a positive effect on system design and assures that all code is always tested 8 Kniberg states You can take my house and my TV and my,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,in the principles of the agile manifesto 16 Committing often allows coworkers to build on functionality review the code and makes version control and merging,easier,This metric measures the average amount of commits that were made by the developers of a team over the course of a sprint Generally the,in the principles of the agile manifesto 16 Committing often allows coworkers to build on functionality review the code and makes version control and merging easier This metric measures the average amount of commits that were made by the developers of a team over the course of a sprint Generally the,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,amount of commits that were made by the developers of a team over the course of a sprint Generally the more commits were made the,better,however they should represent working increments of the software Name Daily User Story Amount Synopsis Average amount of user stories a developer is assigned per,amount of commits that were made by the developers of a team over the course of a sprint Generally the more commits were made the better however they should represent working increments of the software Name Daily User Story Amount Synopsis Average amount of user stories a developer is assigned per,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,developer is assigned per day Severity Low Effort Low Data Source User story tracker Description User stories should conform to the INVEST acronym independent negotiable,valuable,estimable small testable Small has been defined to mean a few person days to a few person weeks 17 Cohn does not state absolute values,developer is assigned per day Severity Low Effort Low Data Source User story tracker Description User stories should conform to the INVEST acronym independent negotiable valuable estimable small testable Small has been defined to mean a few person days to a few person weeks 17 Cohn does not state absolute values,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,established such as bad communication between teams involved with user management All metrics could be used to identify instances where tutor intervention would have been,helpful,In some cases severe violations were found that were missed by tutors such as a very complex wrongly prioritized user story that had been in,established such as bad communication between teams involved with user management All metrics could be used to identify instances where tutor intervention would have been helpful In some cases severe violations were found that were missed by tutors such as a very complex wrongly prioritized user story that had been in,2016
FIE_Agile_Metrics_for_a_University_Software_Engineering_Course_2016_IEEE.txt,employed assessment techniques in undergraduate student software engineering capstone projects Future work includes employing the presented metrics in the next installments of project courses as,well,as continuously improving them in order to better reflect project reality and eliminate false positives,employed assessment techniques in undergraduate student software engineering capstone projects Future work includes employing the presented metrics in the next installments of project courses as well as continuously improving them in order to better reflect project reality and eliminate false positives,2016
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,Introductory Programming Courses Abstract In our research we have introduced and implemented a new software development method Testing Before Coding TBC to bring in the,benefits,of using software development lifecycle in computer programming and improved students program quality TBC follows the basic concept of Agile Method such as Test driven,Introductory Programming Courses Abstract In our research we have introduced and implemented a new software development method Testing Before Coding TBC to bring in the benefits of using software development lifecycle in computer programming and improved students program quality TBC follows the basic concept of Agile Method such as Test driven,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,own codes and consider testing as an indispensable part of program development Our method has been exercised in the introductory computer programming courses and has,improved,the students programs quality at least 24 Index Terms software development method eXtreme Programming software quality software testing INTRODUCTION The National Institute of Standards and,own codes and consider testing as an indispensable part of program development Our method has been exercised in the introductory computer programming courses and has improved the students programs quality at least 24 Index Terms software development method eXtreme Programming software quality software testing INTRODUCTION The National Institute of Standards and,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,TDD or Waterfall or any other development method does not acknowledge These activities play a very important role for creating test cases understanding the requirements,helpful,for developing the codes and producing overall higher quality programs TBC provides an easy and simple framework that anyone can follow to develop programs If,TDD or Waterfall or any other development method does not acknowledge These activities play a very important role for creating test cases understanding the requirements helpful for developing the codes and producing overall higher quality programs TBC provides an easy and simple framework that anyone can follow to develop programs If,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,an integral part of programming practice Must learn how to test their own code and write test cases before writing code Understand the problem requirements,better,that would be helpful while writing the programs Make a cultural change in program development and consider program quality as an objective THE TBC METHOD,an integral part of programming practice Must learn how to test their own code and write test cases before writing code Understand the problem requirements better that would be helpful while writing the programs Make a cultural change in program development and consider program quality as an objective THE TBC METHOD,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,non TBC sections We have also used different automated tools to measure the fault density in the programs in both sections and found the similar,improvement,in the TBC section s code quality I Some activities introduced in the TBC method The TBC method acknowledged the classical or traditional development method,non TBC sections We have also used different automated tools to measure the fault density in the programs in both sections and found the similar improvement in the TBC section s code quality I Some activities introduced in the TBC method The TBC method acknowledged the classical or traditional development method,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,concluded that the TBC sections have less faults or failures in their code which supports our previous claim that the TBC sections program quality are,better,than the non TBC sections RESULTS AND CONCLUSIONS The TBC method is an agile software development method and it is a subset of eXtreme Programming,concluded that the TBC sections have less faults or failures in their code which supports our previous claim that the TBC sections program quality are better than the non TBC sections RESULTS AND CONCLUSIONS The TBC method is an agile software development method and it is a subset of eXtreme Programming,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,sections RESULTS AND CONCLUSIONS The TBC method is an agile software development method and it is a subset of eXtreme Programming and it provides a,simple,framework that anyone can follow and apply in software development Students applying the TBC method do not require any prior knowledge in software lifecycle TBC,sections RESULTS AND CONCLUSIONS The TBC method is an agile software development method and it is a subset of eXtreme Programming and it provides a simple framework that anyone can follow and apply in software development Students applying the TBC method do not require any prior knowledge in software lifecycle TBC,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,as the Waterfall method Our research also concluded that the TBC method makes a cultural shift in software development The TBC method has been implemented,successfully,in five different introductory programming courses in the Department of Computer Science at North Dakota State University in two years and improved the students programs,as the Waterfall method Our research also concluded that the TBC method makes a cultural shift in software development The TBC method has been implemented successfully in five different introductory programming courses in the Department of Computer Science at North Dakota State University in two years and improved the students programs,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,box test cases Students 67 88 have claimed that this method has helped them in understanding the problems and writing the codes made the code,easier,to debug improved the students code reliability and quality and lot more TABLE I COMPARE SOFTWARE QUALITY BETWEEN THE TBC AND TRADITIONAL METHOD Features involved,box test cases Students 67 88 have claimed that this method has helped them in understanding the problems and writing the codes made the code easier to debug improved the students code reliability and quality and lot more TABLE I COMPARE SOFTWARE QUALITY BETWEEN THE TBC AND TRADITIONAL METHOD Features involved,2007
FIE_Applying_the_TBC_method_in_introductory_programming_courses_2007_IEEE.txt,requirements and the problems Data specification data modeling and write test cases before coding cycles force the students to understand the requirements and the problem,better,67 88 of the students claimed The students do not perform the data modeling data specification or create test suites before coding like the TBC,requirements and the problems Data specification data modeling and write test cases before coding cycles force the students to understand the requirements and the problem better 67 88 of the students claimed The students do not perform the data modeling data specification or create test suites before coding like the TBC,2007
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,from XP to provide feedback to the students and track individual performance against goals as part of the students grades The resulting course has been,well,received by the students This paper will describe this course in more detail and assess its effect on students software engineering background through students feedback,from XP to provide feedback to the students and track individual performance against goals as part of the students grades The resulting course has been well received by the students This paper will describe this course in more detail and assess its effect on students software engineering background through students feedback,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,the scale of projects that they can undertake helps motivate the need for a rigorous development process as projects of this scope will not be,successful,if there is no process to coordinate the activities of each of the individuals The course is designed for upper division students in the software,the scale of projects that they can undertake helps motivate the need for a rigorous development process as projects of this scope will not be successful if there is no process to coordinate the activities of each of the individuals The course is designed for upper division students in the software,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,test driven development TDD designing for testability refactoring and planning in XP PAIR PROGRAMMING All of the labs and project activities were required to be,accomplished,in pairs The students were instructed on the roles of the pilot and the co pilot this is described in more detail in 5 where,test driven development TDD designing for testability refactoring and planning in XP PAIR PROGRAMMING All of the labs and project activities were required to be accomplished in pairs The students were instructed on the roles of the pilot and the co pilot this is described in more detail in 5 where,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,quite comfortable especially when they realized that Eclipse also automates their interactions with our project repository in CVS Teaching the students how TDD works was,accomplished,with a lab to develop a small pair of classes The lab started by leading the students carefully through TDD so the steps were of,quite comfortable especially when they realized that Eclipse also automates their interactions with our project repository in CVS Teaching the students how TDD works was accomplished with a lab to develop a small pair of classes The lab started by leading the students carefully through TDD so the steps were of,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,TDD In addition to basic TDD the lab required the development of mock objects to ensure that the students had the necessary background This was,accomplished,by requiring the classes being developed to follow the Observer design pattern That had the side effect of reviewing that pattern which the projects were,TDD In addition to basic TDD the lab required the development of mock objects to ensure that the students had the necessary background This was accomplished by requiring the classes being developed to follow the Observer design pattern That had the side effect of reviewing that pattern which the projects were,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,the side effect of reviewing that pattern which the projects were likely to require By the end of the lab they had developed a non,trivial,pair of classes using TDD DESIGNING FOR TESTABILITY One of the significant challenges for TDD is automating the tests for GUI aspects of the system,the side effect of reviewing that pattern which the projects were likely to require By the end of the lab they had developed a non trivial pair of classes using TDD DESIGNING FOR TESTABILITY One of the significant challenges for TDD is automating the tests for GUI aspects of the system,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,aspects of the system In particular writing JUnit tests for code that is initiated through mouse actions or that builds visual output is cumbersome at,best,Therefore it is important that the GUI portion of the system be as thin as possible To achieve this the students completed a lab on,aspects of the system In particular writing JUnit tests for code that is initiated through mouse actions or that builds visual output is cumbersome at best Therefore it is important that the GUI portion of the system be as thin as possible To achieve this the students completed a lab on,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,outside the context of the project Essentially this pattern allows all of the logic driving the GUI to be automatically tested and leaves only very,simple,widget logic untested This eliminated the need to write GUI specific automated tests and helped our students maintain their interest in TDD REFACTORING Refactoring is,outside the context of the project Essentially this pattern allows all of the logic driving the GUI to be automatically tested and leaves only very simple widget logic untested This eliminated the need to write GUI specific automated tests and helped our students maintain their interest in TDD REFACTORING Refactoring is,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,were instructed on the philosophy behind planning in XP and the details of the Planning and Iteration Planning games In order to help track our,progress,during an iteration we enhanced story cards by adding a section that allows the tracking of the tasks related to a story as a progress,were instructed on the philosophy behind planning in XP and the details of the Planning and Iteration Planning games In order to help track our progress during an iteration we enhanced story cards by adding a section that allows the tracking of the tasks related to a story as a progress,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,customer on the Thursday of the last week of the iteration STAND UPMEETINGS XP promotes short meetings each morning where each individual reports on their,progress,and any challenges they have encountered Our students started every class period with a 15 minute stand up meeting VISIBLY TRACKING AN ITERATION All of,customer on the Thursday of the last week of the iteration STAND UPMEETINGS XP promotes short meetings each morning where each individual reports on their progress and any challenges they have encountered Our students started every class period with a 15 minute stand up meeting VISIBLY TRACKING AN ITERATION All of,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,task cards were posted on a wall in the classroom and the students were encouraged to keep that information up to date This gives everyone,easy,access to information about who is working on which tasks and promotes communication amongst the team MAINTAINING ACCOUNTABILITY The most significant instructional challenge in this,task cards were posted on a wall in the classroom and the students were encouraged to keep that information up to date This gives everyone easy access to information about who is working on which tasks and promotes communication amongst the team MAINTAINING ACCOUNTABILITY The most significant instructional challenge in this,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,also help in identifying the students who need help in learning to follow the process Also at the end of each iteration statistics about the,success,student had with his her tasks are reported and form the basis for a portion of the grades Each iteration the percentage of tasks each,also help in identifying the students who need help in learning to follow the process Also at the end of each iteration statistics about the success student had with his her tasks are reported and form the basis for a portion of the grades Each iteration the percentage of tasks each,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,development Given the source of their struggles the students designed a change to the process to try to ensure that subsequent iterations would be more,successful,They created the role of story advocate whose responsibility is to specify user level tests for the story coordinated the development of the tasks associated,development Given the source of their struggles the students designed a change to the process to try to ensure that subsequent iterations would be more successful They created the role of story advocate whose responsibility is to specify user level tests for the story coordinated the development of the tasks associated,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,green sticker as appropriate There are two important things to note about this modification First and most notable the students without any prodding designed a,solution,that is consistent with the motivations behind XP In fact they extended the concept of TDD to include customer level tests This innovation did help,green sticker as appropriate There are two important things to note about this modification First and most notable the students without any prodding designed a solution that is consistent with the motivations behind XP In fact they extended the concept of TDD to include customer level tests This innovation did help,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,students exhibited little resistance to pair programming In particular most of the students prefer pair programming and it allowed students whose skills were not as,well,developed to be valuable team members and to learn from their peers This was assessed by observing the students the instructor had all of the,students exhibited little resistance to pair programming In particular most of the students prefer pair programming and it allowed students whose skills were not as well developed to be valuable team members and to learn from their peers This was assessed by observing the students the instructor had all of the,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,of the students in previous courses and had information necessary to make an anecdotal comparison and by the students themselves the opinions of their peers,value,on the project improved throughout the semester Our students have worked in pairs in previous courses and therefore were reasonably comfortable with the pairing process,of the students in previous courses and had information necessary to make an anecdotal comparison and by the students themselves the opinions of their peers value on the project improved throughout the semester Our students have worked in pairs in previous courses and therefore were reasonably comfortable with the pairing process,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,________ ________ Description Developer ____________ Development Estimate ____________ Date Date Due Complete CODE QUALITY The projects developed by the teams in this class were very,successful,The teams developed an average of 152 production loc per student which resulted in significant user visible functionality The resulting code was reasonably well designed,________ ________ Description Developer ____________ Development Estimate ____________ Date Date Due Complete CODE QUALITY The projects developed by the teams in this class were very successful The teams developed an average of 152 production loc per student which resulted in significant user visible functionality The resulting code was reasonably well designed,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,we would expect to see much higher ratios of test LOC to production LOC In fact that ratio may be significantly higher than one to,achieve,complete coverage of the tests One team had about the same number of production and test LOC but the other had 50 more production LOC,we would expect to see much higher ratios of test LOC to production LOC In fact that ratio may be significantly higher than one to achieve complete coverage of the tests One team had about the same number of production and test LOC but the other had 50 more production LOC,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,and they developed the tests only to get the green sticker on the task card Clearly we need to work on having them follow TDD,better,in the future In the future the following changes could improve our use of this technique Measure the coverage of tests associated with each task,and they developed the tests only to get the green sticker on the task card Clearly we need to work on having them follow TDD better in the future In the future the following changes could improve our use of this technique Measure the coverage of tests associated with each task,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,source of much of our difficulties While we completed a lab using this design pattern further practice would have helped the students generalize its use,better,CONCLUSIONS This course has been quite successful and the strategies we added to planning helped ensure that the students followed XP practices In general the,source of much of our difficulties While we completed a lab using this design pattern further practice would have helped the students generalize its use better CONCLUSIONS This course has been quite successful and the strategies we added to planning helped ensure that the students followed XP practices In general the,2005
FIE_Managing_a_project_course_using_Extreme_Programming_2005_IEEE.txt,has been quite successful and the strategies we added to planning helped ensure that the students followed XP practices In general the students saw the,value,in those practices Each student wrote a final paper summarizing their experiences and the comments in those papers underscore the fact that they understand that,has been quite successful and the strategies we added to planning helped ensure that the students followed XP practices In general the students saw the value in those practices Each student wrote a final paper summarizing their experiences and the comments in those papers underscore the fact that they understand that,2005
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,This requires that they must be aware that there are a variety of software process alternatives and when various aspects of each process might be,beneficial,In addition they need to be able to apply appropriate statistical analysis to assess the process In order to accomplish this our Software Engineering concentration,This requires that they must be aware that there are a variety of software process alternatives and when various aspects of each process might be beneficial In addition they need to be able to apply appropriate statistical analysis to assess the process In order to accomplish this our Software Engineering concentration,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,a computer scientist software engineers need to be able to define an appropriate software development process and refine that process with the goal of continuous,improvement,in quality and on time delivery With the advent of agile software development processes Extreme Programming XP as opposed to traditional development processes waterfall V,a computer scientist software engineers need to be able to define an appropriate software development process and refine that process with the goal of continuous improvement in quality and on time delivery With the advent of agile software development processes Extreme Programming XP as opposed to traditional development processes waterfall V,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,and contrast such paradigms and understand how to select a process for a given project organization We also begin to address the concept of continuous,improvement,and process assessment As the drafts of 5 have become available our concentration though limited in scale supports a number of the student outcomes required,and contrast such paradigms and understand how to select a process for a given project organization We also begin to address the concept of continuous improvement and process assessment As the drafts of 5 have become available our concentration though limited in scale supports a number of the student outcomes required,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,environments By the end of the semester a working prototype is available for customer review Throughout this process the students make estimates plan measure their,progress,and assess their process with metrics A subset of the students in each section of this course will have completed the software metrics course and,environments By the end of the semester a working prototype is available for customer review Throughout this process the students make estimates plan measure their progress and assess their process with metrics A subset of the students in each section of this course will have completed the software metrics course and,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,tools since most of the coding was being done by two or three individuals For those teams the tools seem to be cumbersome with little,benefit,We then raised the number of students on a team to about eight This was big enough that the students began to see the need,tools since most of the coding was being done by two or three individuals For those teams the tools seem to be cumbersome with little benefit We then raised the number of students on a team to about eight This was big enough that the students began to see the need,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,instructor This includes setting their project velocity and tracking metrics that they deem to be important at each iteration Software Metrics Process Management While the,enhancement,of our capstone course to include Extreme Programming has been valuable in making students aware of different processes software engineers need to be able to,instructor This includes setting their project velocity and tracking metrics that they deem to be important at each iteration Software Metrics Process Management While the enhancement of our capstone course to include Extreme Programming has been valuable in making students aware of different processes software engineers need to be able to,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,different processes software engineers need to be able to asses a process and measure the effects of changes to the process as part of continuous,improvement,efforts In order to address this we are adding a course in software metrics and process management This course explores and evaluates current methods of,different processes software engineers need to be able to asses a process and measure the effects of changes to the process as part of continuous improvement efforts In order to address this we are adding a course in software metrics and process management This course explores and evaluates current methods of,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,and motivates how metrics can be used to predict future activities Techniques for gathering and analyzing common metrics are used to support process assessment and,improvement,ASSESSMENT In order to assess our students analysis of these software development processes they write a comparison paper at the end of Testing and Extreme,and motivates how metrics can be used to predict future activities Techniques for gathering and analyzing common metrics are used to support process assessment and improvement ASSESSMENT In order to assess our students analysis of these software development processes they write a comparison paper at the end of Testing and Extreme,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,a comparison paper at the end of Testing and Extreme Programming At this point they have experienced both development courses and we can assess how,well,we have met our goals In assessing these papers we are assessing not only our students understanding of the processes they experienced but also their,a comparison paper at the end of Testing and Extreme Programming At this point they have experienced both development courses and we can assess how well we have met our goals In assessing these papers we are assessing not only our students understanding of the processes they experienced but also their,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,goals In assessing these papers we are assessing not only our students understanding of the processes they experienced but also their ability to analyze the,value,of the various processes For this we are looking for statements about the positive and negative effects each process had on their experience and on,goals In assessing these papers we are assessing not only our students understanding of the processes they experienced but also their ability to analyze the value of the various processes For this we are looking for statements about the positive and negative effects each process had on their experience and on,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,combined and modified to meet the needs of a specific situation Therefore our assessment is also looking for comments relating to process selection and continuous,improvement,The following sections demonstrate the results of our assessment including analysis of the proportion of students who provided specific types of comments and quotations from,combined and modified to meet the needs of a specific situation Therefore our assessment is also looking for comments relating to process selection and continuous improvement The following sections demonstrate the results of our assessment including analysis of the proportion of students who provided specific types of comments and quotations from,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,in depth about how to do it Writing code for the tests allowed us to understand what we were writing for and made coding much,easier,Developing automated test is a kind of planning in itself It makes the programmers look ahead to the task Developing the test cases first helped,in depth about how to do it Writing code for the tests allowed us to understand what we were writing for and made coding much easier Developing automated test is a kind of planning in itself It makes the programmers look ahead to the task Developing the test cases first helped,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,the students are attributing appropriate effects to the strategy of writing tests first It is important to note that not all of the comments are,positive,One student stated As the number of iterations increases so does the complexity of the automated testing This student believed that the effort required to,the students are attributing appropriate effects to the strategy of writing tests first It is important to note that not all of the comments are positive One student stated As the number of iterations increases so does the complexity of the automated testing This student believed that the effort required to,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,propose tools or strategies that could relieve this complexity Students also comment on the quality that resulted from the testing in extreme programming Code quality,improved,during the extreme programming portion By testing as you go you find small bugs faster and earlier which can eliminate bigger bugs in the future,propose tools or strategies that could relieve this complexity Students also comment on the quality that resulted from the testing in extreme programming Code quality improved during the extreme programming portion By testing as you go you find small bugs faster and earlier which can eliminate bigger bugs in the future,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,it emphasized constant teamwork The students clearly see the role of communication within a team and that two processes used different strategies for how to,achieve,the necessary communication In addition they see how good communication can impact quality of the product and the stress level of the engineers While the,it emphasized constant teamwork The students clearly see the role of communication within a team and that two processes used different strategies for how to achieve the necessary communication In addition they see how good communication can impact quality of the product and the stress level of the engineers While the,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,the engineers While the students seemed to like pair programming they do see situations where it seemed wasteful Pair programming was unnecessary when we had,easy,parts of the project to do The other person could have been pounding out another set of easy code and we could have gotten more,the engineers While the students seemed to like pair programming they do see situations where it seemed wasteful Pair programming was unnecessary when we had easy parts of the project to do The other person could have been pounding out another set of easy code and we could have gotten more,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,other person could have been pounding out another set of easy code and we could have gotten more done This student is thinking about the,efficiency,of the development process and understands the cost of pair programming This shows that he has learned to question the process even when that aspect,other person could have been pounding out another set of easy code and we could have gotten more done This student is thinking about the efficiency of the development process and understands the cost of pair programming This shows that he has learned to question the process even when that aspect,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,the students have had to make several releases of their project they understand the challenges of maintaining good code That allows them to appreciate the,value,of refactoring By having better written code it is easier to make changes in the future because you can follow what is going on Planning,the students have had to make several releases of their project they understand the challenges of maintaining good code That allows them to appreciate the value of refactoring By having better written code it is easier to make changes in the future because you can follow what is going on Planning,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,Planning a long term schedule is extremely difficult There are always unforeseen issues that have a larger impact In addition they begin to appreciate the,value,of measurable milestones that are relatively close together Deadlines that are far apart tend to cause a last minute scramble to meet the deadline Comments,Planning a long term schedule is extremely difficult There are always unforeseen issues that have a larger impact In addition they begin to appreciate the value of measurable milestones that are relatively close together Deadlines that are far apart tend to cause a last minute scramble to meet the deadline Comments,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,with their teammates and on that project for more than a semester so some of the difference in stress could be attributed to experience Process,improvement,While not all students get there our goal is to help the students think about process improvement in the context of a particular organization Since,with their teammates and on that project for more than a semester so some of the difference in stress could be attributed to experience Process improvement While not all students get there our goal is to help the students think about process improvement in the context of a particular organization Since,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,were pleased that 36 of the students offered suggestions for how the processes could be combined or altered for particular situations This focus on process,improvement,is exactly what a good software engineer needs While there are too many challenges for our students to see them all some of our students,were pleased that 36 of the students offered suggestions for how the processes could be combined or altered for particular situations This focus on process improvement is exactly what a good software engineer needs While there are too many challenges for our students to see them all some of our students,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,software engineer needs While there are too many challenges for our students to see them all some of our students begin to see how process,improvement,fits within an existing organization For a company that is currently using traditional methods for project management the best thing they could do is try,software engineer needs While there are too many challenges for our students to see them all some of our students begin to see how process improvement fits within an existing organization For a company that is currently using traditional methods for project management the best thing they could do is try,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,to try only one idea at a time After a set period they should then reevaluate their methods to see if what they are trying,improved,the product morale and productivity It is important to note that these comments also show that the students have a definite preference for Extreme Programming,to try only one idea at a time After a set period they should then reevaluate their methods to see if what they are trying improved the product morale and productivity It is important to note that these comments also show that the students have a definite preference for Extreme Programming,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,that alternative processes should be considered in the context of a particular project and organization In addition some of the students begin to see the,value,of assessment and continuous improvement activities As we add the third course in this sequence Software Metrics Process Management we hope to raise the number,that alternative processes should be considered in the context of a particular project and organization In addition some of the students begin to see the value of assessment and continuous improvement activities As we add the third course in this sequence Software Metrics Process Management we hope to raise the number,2004
FIE_Preparing_computer_science_students_to_question_and_improve_a_software_development_process_2004_IEEE_cleaned.txt,add the third course in this sequence Software Metrics Process Management we hope to raise the number of students meeting the goal of valuing process,improvement,and assessment activities We have demonstrated that this software engineering concentration in addition to a strong computer science core curriculum provides our students exceptional experience,add the third course in this sequence Software Metrics Process Management we hope to raise the number of students meeting the goal of valuing process improvement and assessment activities We have demonstrated that this software engineering concentration in addition to a strong computer science core curriculum provides our students exceptional experience,2004
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,years because multiple large size middle size and mostly small size enterprises move from traditional heavily regulated processes driven business approaches towards customer focused and,value,driven flexible business approaches The performed analysis of the current status of agile methodology applications in industry clearly shows that it will soon need a,years because multiple large size middle size and mostly small size enterprises move from traditional heavily regulated processes driven business approaches towards customer focused and value driven flexible business approaches The performed analysis of the current status of agile methodology applications in industry clearly shows that it will soon need a,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,approaches The performed analysis of the current status of agile methodology applications in industry clearly shows that it will soon need a significant number of,well,educated and highly skilled specialists in this area agile software development project managers agile software engineers analysts developers testers etc The findings and outcomes of,approaches The performed analysis of the current status of agile methodology applications in industry clearly shows that it will soon need a significant number of well educated and highly skilled specialists in this area agile software development project managers agile software engineers analysts developers testers etc The findings and outcomes of,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,complex projects with ill defined requirements 2 Because of the AM s focus on close collaboration and quick iterations agile development teams demonstrate increased team,efficiency,lower development costs faster time to market better quality software systems better suited to customer needs repeatable results 3 The 2012 survey of 4 000,complex projects with ill defined requirements 2 Because of the AM s focus on close collaboration and quick iterations agile development teams demonstrate increased team efficiency lower development costs faster time to market better quality software systems better suited to customer needs repeatable results 3 The 2012 survey of 4 000,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,survey of 4 000 experienced AM users by one of the leading agile software development SD companies VersionOne enabled to identify and rank the main,benefits,of agile development methodology Table I 4 In order to take advantages of AM benefits the leading SD companies such as Microsoft IBM Apple Motorola,survey of 4 000 experienced AM users by one of the leading agile software development SD companies VersionOne enabled to identify and rank the main benefits of agile development methodology Table I 4 In order to take advantages of AM benefits the leading SD companies such as Microsoft IBM Apple Motorola,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,accordance with the Microsoft Research 6 a total of more than 60 of 400 SD professionals either strongly agree or agree that agile is working,well,for me about 60 agile is working well for my team and about 60 my team s developers and testers collaborate more with agile than,accordance with the Microsoft Research 6 a total of more than 60 of 400 SD professionals either strongly agree or agree that agile is working well for me about 60 agile is working well for my team and about 60 my team s developers and testers collaborate more with agile than,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,and morale factors concerning agile SD 6 SECTION III Design Phase Goal and Objectives The overall goal of the proposed project is to make a,valuable,and timely contribution to the curricula and overall mission of CS IS department at Bradley University by analysis design development and implementation of innovative undergraduate,and morale factors concerning agile SD 6 SECTION III Design Phase Goal and Objectives The overall goal of the proposed project is to make a valuable and timely contribution to the curricula and overall mission of CS IS department at Bradley University by analysis design development and implementation of innovative undergraduate,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,overall mission of CS IS department at Bradley University by analysis design development and implementation of innovative undergraduate and graduate ASE curriculum In order to,achieve,this goal the project team identified the following objectives main topics identify a list of main AM methods that are in high demand by various,overall mission of CS IS department at Bradley University by analysis design development and implementation of innovative undergraduate and graduate ASE curriculum In order to achieve this goal the project team identified the following objectives main topics identify a list of main AM methods that are in high demand by various,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,and research perform active research in ASE area and collaborate with industry to develop real world assignments for course and or capstone projects and thus,enhance,CS IS graduates knowledge base hands on skills market value and competitiveness SECTION IV Design Phase Selection of Course Main Topics The analysis of above,and research perform active research in ASE area and collaborate with industry to develop real world assignments for course and or capstone projects and thus enhance CS IS graduates knowledge base hands on skills market value and competitiveness SECTION IV Design Phase Selection of Course Main Topics The analysis of above,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,to introduce the following agile practices in proposed ASE curriculum code reviews unit testing automated builds user stories team coding standards iteration planning continuous integration,simple,design burndown charts stand up meetings Despite the fact that there are multiple available publications about several other agile practices such as 1 pair programming,to introduce the following agile practices in proposed ASE curriculum code reviews unit testing automated builds user stories team coding standards iteration planning continuous integration simple design burndown charts stand up meetings Despite the fact that there are multiple available publications about several other agile practices such as 1 pair programming,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,agile experts 24 B Use of Agile Practices in Course Project An Example The example of a joint utilization of code reviews unit testing and,simple,design agile practices in one of the course projects is described below Team based project assignment Using at least 3 different programming languages select from,agile experts 24 B Use of Agile Practices in Course Project An Example The example of a joint utilization of code reviews unit testing and simple design agile practices in one of the course projects is described below Team based project assignment Using at least 3 different programming languages select from,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,processes Test mobile application s GUI inputs outputs data exchange conventions and protocols interfaces and functionality Use the following required agile practices in this project,simple,design agile practice a use a pseudo code and create a quick code design of assigned mobile application b use any tool like MS Visio,processes Test mobile application s GUI inputs outputs data exchange conventions and protocols interfaces and functionality Use the following required agile practices in this project simple design agile practice a use a pseudo code and create a quick code design of assigned mobile application b use any tool like MS Visio,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,utilization in ASE courses 1 VersionOne 2 Rally 3 AgileWrap 4 AgileFant 5 Kanban Board 6 Trichord 7 Kanban 8 Smart Bear and 9 Microsoft,solutions,Framework SECTION VII Development and Pilot Testing Phase During Spring 2013 and Fall 2013 semesters one of the coauthors taught pilot modules of the ASE,utilization in ASE courses 1 VersionOne 2 Rally 3 AgileWrap 4 AgileFant 5 Kanban Board 6 Trichord 7 Kanban 8 Smart Bear and 9 Microsoft solutions Framework SECTION VII Development and Pilot Testing Phase During Spring 2013 and Fall 2013 semesters one of the coauthors taught pilot modules of the ASE,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,of assigned mobile software system b identify its main components and links between and c design GUI of an assigned mobile software system etc using,simple,design agile practice complete 3 4 sprints of agile software and GUI development test developed mobile software system using code review and unit testing agile,of assigned mobile software system b identify its main components and links between and c design GUI of an assigned mobile software system etc using simple design agile practice complete 3 4 sprints of agile software and GUI development test developed mobile software system using code review and unit testing agile,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,Pragmatic Programming PP i Lean methods j Feature driven development FDD and k Agile Unified Process AUP perform research on real world AM applications and,best,agile practices used in industry SECTION VIII Project Findings The described project on analysis design and development of innovative ASE curriculum was based on active,Pragmatic Programming PP i Lean methods j Feature driven development FDD and k Agile Unified Process AUP perform research on real world AM applications and best agile practices used in industry SECTION VIII Project Findings The described project on analysis design and development of innovative ASE curriculum was based on active,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,practices As a result generated by student ideas about course components learning content assignments for lab sessions and course projects were very instrumental and significantly,improved,the quality of proposed ASE curriculum Based on a outcomes of pilot ASE modules teaching and b obtained student and research associates feedback the up,practices As a result generated by student ideas about course components learning content assignments for lab sessions and course projects were very instrumental and significantly improved the quality of proposed ASE curriculum Based on a outcomes of pilot ASE modules teaching and b obtained student and research associates feedback the up,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,interaction and project team meetings Periodic face to face project team meetings and interactions are still needed for virtual teams in order to develop or,enhance,communication collaboration and trust among team members Agile practices Student project teams must use and master in as many agile practices as possible including code,interaction and project team meetings Periodic face to face project team meetings and interactions are still needed for virtual teams in order to develop or enhance communication collaboration and trust among team members Agile practices Student project teams must use and master in as many agile practices as possible including code,2014
FIE_Student-faculty_collaboration_on_design_of_innovative_agile_software_engineering_curriculum_2014_IEEE_cleaned.txt,and master in as many agile practices as possible including code reviews unit testing automated builds user stories team coding standards iteration planning continuous integration,simple,design burndown charts stand up meetings and other agile practices APM tools Student teams should learn and use various available APM Web based tools for,and master in as many agile practices as possible including code reviews unit testing automated builds user stories team coding standards iteration planning continuous integration simple design burndown charts stand up meetings and other agile practices APM tools Student teams should learn and use various available APM Web based tools for,2014
